{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/inner-web/src/components/os/Desktop.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport Doom from '../applications/Doom';\nimport OregonTrail from '../applications/OregonTrail';\nimport ShutdownSequence from './ShutdownSequence'; // import ThisComputer from '../applications/ThisComputer';\n\nimport esordle from '../applications/esordle';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut from './DesktopShortcut';\nimport Scrabble from '../applications/Scrabble';\nimport Credits from '../applications/Credits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APPLICATIONS = {\n  computer: {\n    key: 'computer',\n    name: 'This Computer',\n    shortcutIcon: 'computerBig',\n    component: ThisComputer\n  },\n  showcase: {\n    key: 'showcase',\n    name: 'My Showcase',\n    shortcutIcon: 'showcaseIcon',\n    component: ShowcaseExplorer\n  },\n  trail: {\n    key: 'trail',\n    name: 'The Oregon Trail',\n    shortcutIcon: 'trailIcon',\n    component: OregonTrail\n  },\n  doom: {\n    key: 'doom',\n    name: 'Doom',\n    shortcutIcon: 'doomIcon',\n    component: Doom\n  },\n  scrabble: {\n    key: 'scrabble',\n    name: 'Scrabble',\n    shortcutIcon: 'scrabbleIcon',\n    component: Scrabble\n  },\n  esordle: {\n    key: 'esordle',\n    name: 'esordle',\n    shortcutIcon: 'henordleIcon',\n    component: esordle\n  },\n  credits: {\n    key: 'credits',\n    name: 'Credits',\n    shortcutIcon: 'credits',\n    component: Credits\n  }\n};\n\nconst Desktop = props => {\n  _s();\n\n  const [windows, setWindows] = useState({});\n  const [shortcuts, setShortcuts] = useState([]);\n  const [shutdown, setShutdown] = useState(false);\n  const [numShutdowns, setNumShutdowns] = useState(1);\n  useEffect(() => {\n    if (shutdown === true) {\n      rebootDesktop();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [shutdown]);\n  useEffect(() => {\n    const newShortcuts = [];\n    Object.keys(APPLICATIONS).forEach(key => {\n      const app = APPLICATIONS[key];\n      newShortcuts.push({\n        shortcutName: app.name,\n        icon: app.shortcutIcon,\n        onOpen: () => {\n          addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n            onInteract: () => onWindowInteract(app.key),\n            onMinimize: () => minimizeWindow(app.key),\n            onClose: () => removeWindow(app.key)\n          }, app.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this));\n        }\n      });\n    });\n    newShortcuts.forEach(shortcut => {\n      if (shortcut.shortcutName === 'My Showcase') {\n        shortcut.onOpen();\n      }\n    });\n    setShortcuts(newShortcuts); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const rebootDesktop = useCallback(() => {\n    setWindows({});\n  }, []);\n  const removeWindow = useCallback(key => {\n    // Absolute hack and a half\n    setTimeout(() => {\n      setWindows(prevWindows => {\n        const newWindows = { ...prevWindows\n        };\n        delete newWindows[key];\n        return newWindows;\n      });\n    }, 100);\n  }, []);\n  const minimizeWindow = useCallback(key => {\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n      newWindows[key].minimized = true;\n      return newWindows;\n    });\n  }, []);\n  const getHighestZIndex = useCallback(() => {\n    let highestZIndex = 0;\n    Object.keys(windows).forEach(key => {\n      const window = windows[key];\n\n      if (window) {\n        if (window.zIndex > highestZIndex) highestZIndex = window.zIndex;\n      }\n    });\n    return highestZIndex;\n  }, [windows]);\n  const toggleMinimize = useCallback(key => {\n    const newWindows = { ...windows\n    };\n    const highestIndex = getHighestZIndex();\n\n    if (newWindows[key].minimized || newWindows[key].zIndex === highestIndex) {\n      newWindows[key].minimized = !newWindows[key].minimized;\n    }\n\n    newWindows[key].zIndex = getHighestZIndex() + 1;\n    setWindows(newWindows);\n  }, [windows, getHighestZIndex]);\n  const onWindowInteract = useCallback(key => {\n    setWindows(prevWindows => ({ ...prevWindows,\n      [key]: { ...prevWindows[key],\n        zIndex: 1 + getHighestZIndex()\n      }\n    }));\n  }, [setWindows, getHighestZIndex]);\n  const startShutdown = useCallback(() => {\n    setTimeout(() => {\n      setShutdown(true);\n      setNumShutdowns(numShutdowns + 1);\n    }, 600);\n  }, [numShutdowns]);\n  const addWindow = useCallback((key, element) => {\n    setWindows(prevState => ({ ...prevState,\n      [key]: {\n        zIndex: getHighestZIndex() + 1,\n        minimized: false,\n        component: element,\n        name: APPLICATIONS[key].name,\n        icon: APPLICATIONS[key].shortcutIcon\n      }\n    }));\n  }, [getHighestZIndex]);\n  return !shutdown ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.desktop,\n    children: [Object.keys(windows).map(key => {\n      const element = windows[key].component;\n      if (!element) return /*#__PURE__*/_jsxDEV(\"div\", {}, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 38\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: Object.assign({}, {\n          zIndex: windows[key].zIndex\n        }, windows[key].minimized && styles.minimized),\n        children: /*#__PURE__*/React.cloneElement(element, {\n          key,\n          onInteract: () => onWindowInteract(key),\n          onClose: () => removeWindow(key)\n        })\n      }, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.shortcuts,\n      children: shortcuts.map((shortcut, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: Object.assign({}, styles.shortcutContainer, {\n            top: i * 104\n          }),\n          children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n            icon: shortcut.icon,\n            shortcutName: shortcut.shortcutName,\n            onOpen: shortcut.onOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)\n        }, shortcut.shortcutName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      windows: windows,\n      toggleMinimize: toggleMinimize,\n      shutdown: startShutdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(ShutdownSequence, {\n    setShutdown: setShutdown,\n    numShutdowns: numShutdowns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Desktop, \"GjY4SYR6fHlajkFw0qbSW69IhVM=\");\n\n_c = Desktop;\nconst styles = {\n  desktop: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: Colors.turquoise\n  },\n  shutdown: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: '#1d2e2f'\n  },\n  shortcutContainer: {\n    position: 'absolute'\n  },\n  shortcuts: {\n    position: 'absolute',\n    top: 16,\n    left: 6\n  },\n  minimized: {\n    pointerEvents: 'none',\n    opacity: 0\n  }\n};\nexport default Desktop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Desktop\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/inner-web/src/components/os/Desktop.tsx"],"names":["React","useCallback","useEffect","useState","Colors","ShowcaseExplorer","Doom","OregonTrail","ShutdownSequence","esordle","Toolbar","DesktopShortcut","Scrabble","Credits","APPLICATIONS","computer","key","name","shortcutIcon","component","ThisComputer","showcase","trail","doom","scrabble","credits","Desktop","props","windows","setWindows","shortcuts","setShortcuts","shutdown","setShutdown","numShutdowns","setNumShutdowns","rebootDesktop","newShortcuts","Object","keys","forEach","app","push","shortcutName","icon","onOpen","addWindow","onWindowInteract","minimizeWindow","removeWindow","shortcut","setTimeout","prevWindows","newWindows","minimized","getHighestZIndex","highestZIndex","window","zIndex","toggleMinimize","highestIndex","startShutdown","element","prevState","styles","desktop","map","assign","cloneElement","onInteract","onClose","i","shortcutContainer","top","minHeight","flex","backgroundColor","turquoise","position","left","pointerEvents","opacity"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport Doom from '../applications/Doom';\nimport OregonTrail from '../applications/OregonTrail';\nimport ShutdownSequence from './ShutdownSequence';\n// import ThisComputer from '../applications/ThisComputer';\nimport esordle from '../applications/esordle';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut, { DesktopShortcutProps } from './DesktopShortcut';\nimport Scrabble from '../applications/Scrabble';\nimport { IconName } from '../../assets/icons';\nimport Credits from '../applications/Credits';\n\nexport interface DesktopProps {}\n\ntype ExtendedWindowAppProps<T> = T & WindowAppProps;\n\nconst APPLICATIONS: {\n    [key in string]: {\n        key: string;\n        name: string;\n        shortcutIcon: IconName;\n        component: React.FC<ExtendedWindowAppProps<any>>;\n    };\n} = {\n    computer: {\n         key: 'computer',\n         name: 'This Computer',\n         shortcutIcon: 'computerBig',\n         component: ThisComputer,\n    },\n    showcase: {\n        key: 'showcase',\n        name: 'My Showcase',\n        shortcutIcon: 'showcaseIcon',\n        component: ShowcaseExplorer,\n    },\n    trail: {\n        key: 'trail',\n        name: 'The Oregon Trail',\n        shortcutIcon: 'trailIcon',\n        component: OregonTrail,\n    },\n    doom: {\n        key: 'doom',\n        name: 'Doom',\n        shortcutIcon: 'doomIcon',\n        component: Doom,\n    },\n    scrabble: {\n        key: 'scrabble',\n        name: 'Scrabble',\n        shortcutIcon: 'scrabbleIcon',\n        component: Scrabble,\n    },\n    esordle: {\n        key: 'esordle',\n        name: 'esordle',\n        shortcutIcon: 'henordleIcon',\n        component: esordle,\n    },\n    credits: {\n        key: 'credits',\n        name: 'Credits',\n        shortcutIcon: 'credits',\n        component: Credits,\n    },\n};\n\nconst Desktop: React.FC<DesktopProps> = (props) => {\n    const [windows, setWindows] = useState<DesktopWindows>({});\n\n    const [shortcuts, setShortcuts] = useState<DesktopShortcutProps[]>([]);\n\n    const [shutdown, setShutdown] = useState(false);\n    const [numShutdowns, setNumShutdowns] = useState(1);\n\n    useEffect(() => {\n        if (shutdown === true) {\n            rebootDesktop();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [shutdown]);\n\n    useEffect(() => {\n        const newShortcuts: DesktopShortcutProps[] = [];\n        Object.keys(APPLICATIONS).forEach((key) => {\n            const app = APPLICATIONS[key];\n            newShortcuts.push({\n                shortcutName: app.name,\n                icon: app.shortcutIcon,\n                onOpen: () => {\n                    addWindow(\n                        app.key,\n                        <app.component\n                            onInteract={() => onWindowInteract(app.key)}\n                            onMinimize={() => minimizeWindow(app.key)}\n                            onClose={() => removeWindow(app.key)}\n                            key={app.key}\n                        />\n                    );\n                },\n            });\n        });\n\n        newShortcuts.forEach((shortcut) => {\n            if (shortcut.shortcutName === 'My Showcase') {\n                shortcut.onOpen();\n            }\n        });\n\n        setShortcuts(newShortcuts);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const rebootDesktop = useCallback(() => {\n        setWindows({});\n    }, []);\n\n    const removeWindow = useCallback((key: string) => {\n        // Absolute hack and a half\n        setTimeout(() => {\n            setWindows((prevWindows) => {\n                const newWindows = { ...prevWindows };\n                delete newWindows[key];\n                return newWindows;\n            });\n        }, 100);\n    }, []);\n\n    const minimizeWindow = useCallback((key: string) => {\n        setWindows((prevWindows) => {\n            const newWindows = { ...prevWindows };\n            newWindows[key].minimized = true;\n            return newWindows;\n        });\n    }, []);\n\n    const getHighestZIndex = useCallback((): number => {\n        let highestZIndex = 0;\n        Object.keys(windows).forEach((key) => {\n            const window = windows[key];\n            if (window) {\n                if (window.zIndex > highestZIndex)\n                    highestZIndex = window.zIndex;\n            }\n        });\n        return highestZIndex;\n    }, [windows]);\n\n    const toggleMinimize = useCallback(\n        (key: string) => {\n            const newWindows = { ...windows };\n            const highestIndex = getHighestZIndex();\n            if (\n                newWindows[key].minimized ||\n                newWindows[key].zIndex === highestIndex\n            ) {\n                newWindows[key].minimized = !newWindows[key].minimized;\n            }\n            newWindows[key].zIndex = getHighestZIndex() + 1;\n            setWindows(newWindows);\n        },\n        [windows, getHighestZIndex]\n    );\n\n    const onWindowInteract = useCallback(\n        (key: string) => {\n            setWindows((prevWindows) => ({\n                ...prevWindows,\n                [key]: {\n                    ...prevWindows[key],\n                    zIndex: 1 + getHighestZIndex(),\n                },\n            }));\n        },\n        [setWindows, getHighestZIndex]\n    );\n\n    const startShutdown = useCallback(() => {\n        setTimeout(() => {\n            setShutdown(true);\n            setNumShutdowns(numShutdowns + 1);\n        }, 600);\n    }, [numShutdowns]);\n\n    const addWindow = useCallback(\n        (key: string, element: JSX.Element) => {\n            setWindows((prevState) => ({\n                ...prevState,\n                [key]: {\n                    zIndex: getHighestZIndex() + 1,\n                    minimized: false,\n                    component: element,\n                    name: APPLICATIONS[key].name,\n                    icon: APPLICATIONS[key].shortcutIcon,\n                },\n            }));\n        },\n        [getHighestZIndex]\n    );\n\n    return !shutdown ? (\n        <div style={styles.desktop}>\n            {/* For each window in windows, loop over and render  */}\n            {Object.keys(windows).map((key) => {\n                const element = windows[key].component;\n                if (!element) return <div key={`win-${key}`}></div>;\n                return (\n                    <div\n                        key={`win-${key}`}\n                        style={Object.assign(\n                            {},\n                            { zIndex: windows[key].zIndex },\n                            windows[key].minimized && styles.minimized\n                        )}\n                    >\n                        {React.cloneElement(element, {\n                            key,\n                            onInteract: () => onWindowInteract(key),\n                            onClose: () => removeWindow(key),\n                        })}\n                    </div>\n                );\n            })}\n            <div style={styles.shortcuts}>\n                {shortcuts.map((shortcut, i) => {\n                    return (\n                        <div\n                            style={Object.assign({}, styles.shortcutContainer, {\n                                top: i * 104,\n                            })}\n                            key={shortcut.shortcutName}\n                        >\n                            <DesktopShortcut\n                                icon={shortcut.icon}\n                                shortcutName={shortcut.shortcutName}\n                                onOpen={shortcut.onOpen}\n                            />\n                        </div>\n                    );\n                })}\n            </div>\n            <Toolbar\n                windows={windows}\n                toggleMinimize={toggleMinimize}\n                shutdown={startShutdown}\n            />\n        </div>\n    ) : (\n        <ShutdownSequence\n            setShutdown={setShutdown}\n            numShutdowns={numShutdowns}\n        />\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    desktop: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: Colors.turquoise,\n    },\n    shutdown: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: '#1d2e2f',\n    },\n    shortcutContainer: {\n        position: 'absolute',\n    },\n    shortcuts: {\n        position: 'absolute',\n        top: 16,\n        left: 6,\n    },\n    minimized: {\n        pointerEvents: 'none',\n        opacity: 0,\n    },\n};\n\nexport default Desktop;\n"]},"metadata":{},"sourceType":"module"}