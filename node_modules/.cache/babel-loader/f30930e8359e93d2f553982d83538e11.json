{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/inner-web/src/components/applications/Hangman.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { getRandomWord } from '../hangman/words';\nimport { Easing } from '../general/Animation';\nimport Window from '../os/Window';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LetterButton = _ref => {\n  let {\n    letter,\n    onClick,\n    disabled,\n    isCorrect,\n    isWrong\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"site-button\",\n    style: Object.assign({}, styles.letterBox, isCorrect && {\n      backgroundColor: 'lightgreen'\n    }, isWrong && {\n      backgroundColor: 'gray'\n    }, disabled && {\n      opacity: 0.6\n    }),\n    onClick: () => !disabled && onClick(letter),\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LetterButton;\n\nconst HiddenLetter = _ref2 => {\n  let {\n    letter,\n    revealed\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-border\",\n    style: styles.guessLetterBox,\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: revealed ? letter : '_'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = HiddenLetter;\nconst TOP_ROW = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'];\nconst MIDDLE_ROW = ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'];\nconst BOTTOM_ROW = ['Z', 'X', 'C', 'V', 'B', 'N', 'M'];\nconst ROWS = [TOP_ROW, MIDDLE_ROW, BOTTOM_ROW]; // const HangmanDrawing: React.FC<{ mistakes: number }> = ({ mistakes }) => {\n//     return (\n//         <div style={styles.hangmanDrawing}>\n//             {/* Base */}\n//             <div style={styles.gallowsBase} />\n//             {/* Vertical pole */}\n//             <div style={styles.gallowsPole} />\n//             {/* Top beam */}\n//             <div style={styles.gallowsTop} />\n//             {/* Rope */}\n//             <div style={styles.rope} />\n//             {/* Head */}\n//             {mistakes >= 1 && <div style={styles.head} />}\n//             {/* Body */}\n//             {mistakes >= 2 && <div style={styles.body} />}\n//             {/* Left arm */}\n//             {mistakes >= 3 && <div style={Object.assign({}, styles.arm, styles.leftArm)} />}\n//             {/* Right arm */}\n//             {mistakes >= 4 && <div style={Object.assign({}, styles.arm, styles.rightArm)} />}\n//             {/* Left leg */}\n//             {mistakes >= 5 && <div style={Object.assign({}, styles.leg, styles.leftLeg)} />}\n//             {/* Right leg */}\n//             {mistakes >= 6 && <div style={Object.assign({}, styles.leg, styles.rightLeg)} />}\n//         </div>\n//     );\n// };\n\nconst HangmanContent = () => {\n  _s();\n\n  const [word, setWord] = useState('');\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [wrongGuesses, setWrongGuesses] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [won, setWon] = useState(false);\n  useEffect(() => {\n    setWord(getRandomWord());\n  }, []);\n\n  const handleGuess = letter => {\n    if (guessedLetters.includes(letter)) return;\n    const newGuessedLetters = [...guessedLetters, letter];\n    setGuessedLetters(newGuessedLetters);\n\n    if (!word.includes(letter)) {\n      setWrongGuesses([...wrongGuesses, letter]);\n    }\n\n    const isWon = word.split('').every(char => newGuessedLetters.includes(char));\n\n    if (isWon) {\n      setWon(true);\n      setGameOver(true);\n    }\n\n    if (wrongGuesses.length >= 5) {\n      setGameOver(true);\n    }\n  };\n\n  const restart = () => {\n    setWord(getRandomWord());\n    setGuessedLetters([]);\n    setWrongGuesses([]);\n    setGameOver(false);\n    setWon(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Guess the hidden word. You can make 6 mistakes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      variants: gameOverAnimations,\n      animate: gameOver ? 'show' : 'hidden',\n      initial: false,\n      style: Object.assign({}, styles.gameOverContainer, gameOver && {\n        zIndex: 1000\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: won ? 'You win!' : 'Game Over'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The word was \\\"\", word, \"\\\".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-button\",\n        onClick: restart,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      variants: gameAnimations,\n      animate: !gameOver ? 'show' : 'hidden',\n      initial: false,\n      style: styles.gameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.playArea,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.wordContainer,\n          children: word.split('').map((letter, index) => /*#__PURE__*/_jsxDEV(HiddenLetter, {\n            letter: letter,\n            revealed: guessedLetters.includes(letter)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.mistakes,\n          children: [\"Mistakes: \", wrongGuesses.length, \"/6\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.keyboardContainer,\n        children: ROWS.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.keyboardRow,\n          children: row.map(letter => /*#__PURE__*/_jsxDEV(LetterButton, {\n            letter: letter,\n            onClick: handleGuess,\n            disabled: guessedLetters.includes(letter) || gameOver,\n            isCorrect: word.includes(letter) && guessedLetters.includes(letter),\n            isWrong: wrongGuesses.includes(letter)\n          }, letter, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }, this))\n        }, `row-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HangmanContent, \"EWqVueFGrxjW/jTTOGr5XunzEek=\");\n\n_c3 = HangmanContent;\n\nconst Hangman = _ref3 => {\n  let {\n    onInteract,\n    onMinimize,\n    onClose\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Window, {\n    onInteract: onInteract,\n    minimizeWindow: onMinimize,\n    closeWindow: onClose,\n    windowTitle: \"Hangman\",\n    width: 800,\n    height: 800,\n    top: 50,\n    left: 50,\n    children: /*#__PURE__*/_jsxDEV(HangmanContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Hangman;\nconst gameAnimations = {\n  hidden: {\n    opacity: 0,\n    y: -12,\n    transition: {\n      duration: 0.5\n    }\n  },\n  show: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.5\n    }\n  }\n};\nconst gameOverAnimations = {\n  hidden: {\n    opacity: 0,\n    y: 32,\n    transition: {\n      duration: 0.5\n    }\n  },\n  show: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      delay: 0.4,\n      duration: 0.5,\n      ease: Easing.expOut\n    }\n  }\n};\nconst styles = {\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  gameContainer: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  gameOverContainer: {\n    zIndex: -1000,\n    textAlign: 'center',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  header: {\n    flexShrink: 1,\n    paddingTop: 32,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  keyboardContainer: {\n    flexShrink: 1,\n    paddingBottom: 24,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  keyboard: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    maxWidth: 600,\n    gap: 4\n  },\n  keyboardRow: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginBottom: 8,\n    gap: 8 // Add gap between buttons\n\n  },\n  playArea: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 16,\n    marginBottom: 16\n  },\n  wordContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 20\n  },\n  letterBox: {\n    padding: 12,\n    paddingTop: 16,\n    minWidth: 42,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 16,\n    margin: 4 // Add margin around each button\n\n  },\n  guessLetterBox: {\n    width: 60,\n    height: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 4,\n    backgroundColor: 'white'\n  },\n  mistakes: {\n    marginTop: 20,\n    fontSize: 18\n  },\n  hangmanDrawing: {\n    position: 'relative',\n    height: 210,\n    width: 150,\n    marginBottom: 20\n  },\n  gallowsBase: {\n    height: 10,\n    width: 100,\n    background: 'black',\n    position: 'absolute',\n    bottom: 0,\n    left: 25\n  },\n  gallowsPole: {\n    height: 200,\n    width: 10,\n    background: 'black',\n    position: 'absolute',\n    bottom: 0,\n    left: 35\n  },\n  gallowsTop: {\n    height: 10,\n    width: 80,\n    background: 'black',\n    position: 'absolute',\n    top: 0,\n    right: 35\n  },\n  rope: {\n    height: 30,\n    width: 4,\n    background: 'black',\n    position: 'absolute',\n    top: 0,\n    right: 35\n  },\n  head: {\n    width: 30,\n    height: 30,\n    borderRadius: '50%',\n    border: '4px solid black',\n    position: 'absolute',\n    top: 30,\n    right: 22\n  },\n  body: {\n    width: 4,\n    height: 60,\n    background: 'black',\n    position: 'absolute',\n    top: 65,\n    right: 35\n  },\n  arm: {\n    width: 40,\n    height: 4,\n    background: 'black',\n    position: 'absolute',\n    top: 80,\n    right: 35\n  },\n  leftArm: {\n    transform: 'rotate(30deg)',\n    transformOrigin: 'right bottom'\n  },\n  rightArm: {\n    transform: 'rotate(-30deg)',\n    transformOrigin: 'left bottom'\n  },\n  leg: {\n    width: 40,\n    height: 4,\n    background: 'black',\n    position: 'absolute',\n    top: 125,\n    right: 35\n  },\n  leftLeg: {\n    transform: 'rotate(30deg)',\n    transformOrigin: 'right top'\n  },\n  rightLeg: {\n    transform: 'rotate(-30deg)',\n    transformOrigin: 'left top'\n  }\n};\nexport default Hangman;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"LetterButton\");\n$RefreshReg$(_c2, \"HiddenLetter\");\n$RefreshReg$(_c3, \"HangmanContent\");\n$RefreshReg$(_c4, \"Hangman\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/inner-web/src/components/applications/Hangman.tsx"],"names":["React","useEffect","useState","motion","getRandomWord","Easing","Window","LetterButton","letter","onClick","disabled","isCorrect","isWrong","Object","assign","styles","letterBox","backgroundColor","opacity","HiddenLetter","revealed","guessLetterBox","TOP_ROW","MIDDLE_ROW","BOTTOM_ROW","ROWS","HangmanContent","word","setWord","guessedLetters","setGuessedLetters","wrongGuesses","setWrongGuesses","gameOver","setGameOver","won","setWon","handleGuess","includes","newGuessedLetters","isWon","split","every","char","length","restart","container","header","gameOverAnimations","gameOverContainer","zIndex","gameAnimations","gameContainer","playArea","wordContainer","map","index","mistakes","keyboardContainer","row","i","keyboardRow","Hangman","onInteract","onMinimize","onClose","hidden","y","transition","duration","show","delay","ease","expOut","flex","flexDirection","textAlign","width","height","position","justifyContent","alignItems","flexShrink","paddingTop","paddingBottom","keyboard","display","flexWrap","maxWidth","gap","marginBottom","marginTop","padding","minWidth","margin","fontSize","hangmanDrawing","gallowsBase","background","bottom","left","gallowsPole","gallowsTop","top","right","rope","head","borderRadius","border","body","arm","leftArm","transform","transformOrigin","rightArm","leg","leftLeg","rightLeg"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport { getRandomWord } from '../hangman/words';\nimport { Easing } from '../general/Animation';\nimport Window from '../os/Window';\n\n\ninterface WindowProps {\n    onInteract: () => void;\n    onMinimize: () => void;\n    onClose: () => void;\n}\n\ninterface LetterButtonProps {\n    letter: string;\n    onClick: (letter: string) => void;\n    disabled: boolean;\n    isCorrect: boolean;\n    isWrong: boolean;\n}\n\nconst LetterButton: React.FC<LetterButtonProps> = ({\n    letter,\n    onClick,\n    disabled,\n    isCorrect,\n    isWrong,\n}) => (\n    <div\n        className=\"site-button\"\n        style={Object.assign(\n            {},\n            styles.letterBox,\n            isCorrect && { backgroundColor: 'lightgreen' },\n            isWrong && { backgroundColor: 'gray' },\n            disabled && { opacity: 0.6 }\n        )}\n        onClick={() => !disabled && onClick(letter)}\n    >\n        <p>{letter}</p>\n    </div>\n);\n\nconst HiddenLetter: React.FC<{ letter: string; revealed: boolean }> = ({\n    letter,\n    revealed,\n}) => (\n    <div\n        className=\"button-border\"\n        style={styles.guessLetterBox}\n    >\n        <h3><b>{revealed ? letter : '_'}</b></h3>\n    </div>\n);\n\n\nconst TOP_ROW = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'];\nconst MIDDLE_ROW = ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'];\nconst BOTTOM_ROW = ['Z', 'X', 'C', 'V', 'B', 'N', 'M'];\nconst ROWS = [TOP_ROW, MIDDLE_ROW, BOTTOM_ROW];\n\n// const HangmanDrawing: React.FC<{ mistakes: number }> = ({ mistakes }) => {\n//     return (\n//         <div style={styles.hangmanDrawing}>\n//             {/* Base */}\n//             <div style={styles.gallowsBase} />\n            \n//             {/* Vertical pole */}\n//             <div style={styles.gallowsPole} />\n            \n//             {/* Top beam */}\n//             <div style={styles.gallowsTop} />\n            \n//             {/* Rope */}\n//             <div style={styles.rope} />\n            \n//             {/* Head */}\n//             {mistakes >= 1 && <div style={styles.head} />}\n            \n//             {/* Body */}\n//             {mistakes >= 2 && <div style={styles.body} />}\n            \n//             {/* Left arm */}\n//             {mistakes >= 3 && <div style={Object.assign({}, styles.arm, styles.leftArm)} />}\n            \n//             {/* Right arm */}\n//             {mistakes >= 4 && <div style={Object.assign({}, styles.arm, styles.rightArm)} />}\n            \n//             {/* Left leg */}\n//             {mistakes >= 5 && <div style={Object.assign({}, styles.leg, styles.leftLeg)} />}\n            \n//             {/* Right leg */}\n//             {mistakes >= 6 && <div style={Object.assign({}, styles.leg, styles.rightLeg)} />}\n//         </div>\n//     );\n// };\n\nconst HangmanContent: React.FC = () => {\n    const [word, setWord] = useState('');\n    const [guessedLetters, setGuessedLetters] = useState<string[]>([]);\n    const [wrongGuesses, setWrongGuesses] = useState<string[]>([]);\n    const [gameOver, setGameOver] = useState(false);\n    const [won, setWon] = useState(false);\n\n    useEffect(() => {\n        setWord(getRandomWord());\n    }, []);\n\n    const handleGuess = (letter: string) => {\n        if (guessedLetters.includes(letter)) return;\n        \n        const newGuessedLetters = [...guessedLetters, letter];\n        setGuessedLetters(newGuessedLetters);\n        \n        if (!word.includes(letter)) {\n            setWrongGuesses([...wrongGuesses, letter]);\n        }\n\n        const isWon = word.split('').every(char => newGuessedLetters.includes(char));\n        if (isWon) {\n            setWon(true);\n            setGameOver(true);\n        }\n\n        if (wrongGuesses.length >= 5) {\n            setGameOver(true);\n        }\n    };\n\n    const restart = () => {\n        setWord(getRandomWord());\n        setGuessedLetters([]);\n        setWrongGuesses([]);\n        setGameOver(false);\n        setWon(false);\n    };\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.header}>\n                <h2>Hangman</h2>\n                <p>Guess the hidden word. You can make 6 mistakes.</p>\n            </div>\n            <motion.div\n                variants={gameOverAnimations}\n                animate={gameOver ? 'show' : 'hidden'}\n                initial={false}\n                style={Object.assign({}, styles.gameOverContainer, gameOver && { zIndex: 1000 })}\n            >\n                <h2>{won ? 'You win!' : 'Game Over'}</h2>\n                <p>The word was \"{word}\".</p>\n                <br />\n                <div className=\"site-button\" onClick={restart}>\n                    Restart Game\n                </div>\n            </motion.div>\n            <motion.div\n                variants={gameAnimations}\n                animate={!gameOver ? 'show' : 'hidden'}\n                initial={false}\n                style={styles.gameContainer}\n            >\n                <div style={styles.playArea}>\n                    {/* <HangmanDrawing mistakes={wrongGuesses.length} /> */}\n                    <div style={styles.wordContainer}>\n                        {word.split('').map((letter, index) => (\n                            <HiddenLetter\n                                key={index}\n                                letter={letter}\n                                revealed={guessedLetters.includes(letter)}\n                            />\n                        ))}\n                    </div>\n                    <p style={styles.mistakes}>\n                        Mistakes: {wrongGuesses.length}/6\n                    </p>\n                </div>\n                <div style={styles.keyboardContainer}>\n                    {ROWS.map((row, i) => (\n                        <div style={styles.keyboardRow} key={`row-${i}`}>\n                            {row.map((letter) => (\n                                <LetterButton\n                                    key={letter}\n                                    letter={letter}\n                                    onClick={handleGuess}\n                                    disabled={guessedLetters.includes(letter) || gameOver}\n                                    isCorrect={word.includes(letter) && guessedLetters.includes(letter)}\n                                    isWrong={wrongGuesses.includes(letter)}\n                                />\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            </motion.div>\n        </div>\n    );\n};\n\nconst Hangman: React.FC<WindowProps> = ({ onInteract, onMinimize, onClose }) => {\n    return (\n        <Window\n            onInteract={onInteract}\n            minimizeWindow={onMinimize}\n            closeWindow={onClose}        \n            windowTitle=\"Hangman\"\n            width={800}\n            height={800}\n            top={50}\n            left={50}\n        >\n            <HangmanContent />\n        </Window>\n    );\n};\n\nconst gameAnimations = {\n    hidden: {\n        opacity: 0,\n        y: -12,\n        transition: { duration: 0.5 },\n    },\n    show: {\n        y: 0,\n        opacity: 1,\n        transition: {\n            delay: 0.5,\n            duration: 0.5,\n        },\n    },\n};\n\nconst gameOverAnimations = {\n    hidden: {\n        opacity: 0,\n        y: 32,\n        transition: { duration: 0.5 },\n    },\n    show: {\n        opacity: 1,\n        y: 0,\n        transition: {\n            delay: 0.4,\n            duration: 0.5,\n            ease: Easing.expOut,\n        },\n    },\n};\n\nconst styles: StyleSheetCSS = {\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        \n    },\n    gameContainer: {\n        flex: 1,\n        flexDirection: 'column',\n    },\n    gameOverContainer: {\n        zIndex: -1000,\n        textAlign: 'center',\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n    },\n    header: {\n        flexShrink: 1,\n        paddingTop: 32,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    keyboardContainer: {\n        flexShrink: 1,\n        paddingBottom: 24,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    keyboard: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        maxWidth: 600,\n        gap: 4,\n    },\n    keyboardRow: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: 8,\n        gap: 8, // Add gap between buttons\n    },\n    playArea: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 16,\n        marginBottom: 16,\n    },\n    wordContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginBottom: 20,\n    },\n    letterBox: {\n        padding: 12,\n        paddingTop: 16,\n        minWidth: 42,\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingBottom: 16,\n        margin: 4, // Add margin around each button\n    },\n    guessLetterBox: {\n        width: 60,\n        height: 60,\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: 4,\n        backgroundColor: 'white',\n    },\n    mistakes: {\n        marginTop: 20,\n        fontSize: 18,\n    },\n    hangmanDrawing: {\n        position: 'relative',\n        height: 210,\n        width: 150,\n        marginBottom: 20,\n    },\n    gallowsBase: {\n        height: 10,\n        width: 100,\n        background: 'black',\n        position: 'absolute',\n        bottom: 0,\n        left: 25,\n    },\n    gallowsPole: {\n        height: 200,\n        width: 10,\n        background: 'black',\n        position: 'absolute',\n        bottom: 0,\n        left: 35,\n    },\n    gallowsTop: {\n        height: 10,\n        width: 80,\n        background: 'black',\n        position: 'absolute',\n        top: 0,\n        right: 35,\n    },\n    rope: {\n        height: 30,\n        width: 4,\n        background: 'black',\n        position: 'absolute',\n        top: 0,\n        right: 35,\n    },\n    head: {\n        width: 30,\n        height: 30,\n        borderRadius: '50%',\n        border: '4px solid black',\n        position: 'absolute',\n        top: 30,\n        right: 22,\n    },\n    body: {\n        width: 4,\n        height: 60,\n        background: 'black',\n        position: 'absolute',\n        top: 65,\n        right: 35,\n    },\n    arm: {\n        width: 40,\n        height: 4,\n        background: 'black',\n        position: 'absolute',\n        top: 80,\n        right: 35,\n    },\n    leftArm: {\n        transform: 'rotate(30deg)',\n        transformOrigin: 'right bottom',\n    },\n    rightArm: {\n        transform: 'rotate(-30deg)',\n        transformOrigin: 'left bottom',\n    },\n    leg: {\n        width: 40,\n        height: 4,\n        background: 'black',\n        position: 'absolute',\n        top: 125,\n        right: 35,\n    },\n    leftLeg: {\n        transform: 'rotate(30deg)',\n        transformOrigin: 'right top',\n    },\n    rightLeg: {\n        transform: 'rotate(-30deg)',\n        transformOrigin: 'left top',\n    },\n};\n\nexport default Hangman;\n"]},"metadata":{},"sourceType":"module"}