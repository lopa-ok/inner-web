{"ast":null,"code":"import _slicedToArray from\"/Users/mac/Documents/GitHub/inner-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useRef,useState}from'react';import colors from'../../constants/colors';import{Icon}from'../general';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DesktopShortcut=function DesktopShortcut(_ref){var icon=_ref.icon,shortcutName=_ref.shortcutName,invertText=_ref.invertText,onOpen=_ref.onOpen;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSelected=_useState2[0],setIsSelected=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),shortcutId=_useState4[0],setShortcutId=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),lastSelected=_useState6[0],setLastSelected=_useState6[1];var containerRef=useRef();var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),scaledStyle=_useState8[0],setScaledStyle=_useState8[1];var requiredIcon=require(\"../../assets/icons/\".concat(icon,\".png\"));var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),doubleClickTimerActive=_useState10[0],setDoubleClickTimerActive=_useState10[1];var getShortcutId=useCallback(function(){var shortcutId=shortcutName.replace(/\\s/g,'');return\"desktop-shortcut-\".concat(shortcutId);},[shortcutName]);useEffect(function(){setShortcutId(getShortcutId());},[shortcutName,getShortcutId]);useEffect(function(){if(containerRef.current&&Object.keys(scaledStyle).length===0){//@ts-ignore\nvar boundingBox=containerRef.current.getBoundingClientRect();setScaledStyle({transformOrigin:'center',transform:'scale(1.5)',left:boundingBox.width/4,top:boundingBox.height/4// transform: 'scale(1.5)',\n// left: boundingBox.width / 4,\n// top: boundingBox.height / 4,\n});}},[scaledStyle]);var handleClickOutside=useCallback(function(event){// @ts-ignore\nvar targetId=event.target.id;if(targetId!==shortcutId){setIsSelected(false);}if(!isSelected&&lastSelected){setLastSelected(false);}},[isSelected,setIsSelected,setLastSelected,lastSelected,shortcutId]);var handleClickShortcut=useCallback(function(){if(doubleClickTimerActive){onOpen&&onOpen();setIsSelected(false);setDoubleClickTimerActive(false);return;}setIsSelected(true);setLastSelected(true);setDoubleClickTimerActive(true);// set double click timer\nsetTimeout(function(){setDoubleClickTimerActive(false);},300);},[doubleClickTimerActive,setIsSelected,onOpen]);useEffect(function(){document.addEventListener('mousedown',handleClickOutside);return function(){document.removeEventListener('mousedown',handleClickOutside);};},[isSelected,handleClickOutside]);return/*#__PURE__*/_jsxs(\"div\",{id:\"\".concat(shortcutId),style:Object.assign({},styles.appShortcut,scaledStyle),onMouseDown:handleClickShortcut,ref:containerRef,children:[/*#__PURE__*/_jsxs(\"div\",{id:\"\".concat(shortcutId),style:styles.iconContainer,children:[/*#__PURE__*/_jsx(\"div\",{id:\"\".concat(shortcutId),className:\"desktop-shortcut-icon\",style:Object.assign({},styles.iconOverlay,isSelected&&styles.checkerboard,isSelected&&{WebkitMask:\"url(\".concat(requiredIcon,\")\")})}),/*#__PURE__*/_jsx(Icon,{icon:icon,style:styles.icon})]}),/*#__PURE__*/_jsx(\"div\",{className:isSelected?'selected-shortcut-border':lastSelected?'shortcut-border':'',id:\"\".concat(shortcutId),style:isSelected?{backgroundColor:colors.blue}:{},children:/*#__PURE__*/_jsx(\"p\",{id:\"\".concat(shortcutId),style:Object.assign({},styles.shortcutText,invertText&&!isSelected&&{color:'black'}),children:shortcutName})})]});};var styles={appShortcut:{position:'absolute',width:56,justifyContent:'center',alignItems:'center',flexDirection:'column',textAlign:'center'},shortcutText:{cursor:'pointer',textOverflow:'wrap',fontFamily:'MSSerif',color:'white',fontSize:8,paddingRight:2,paddingLeft:2},iconContainer:{cursor:'pointer',paddingBottom:3},iconOverlay:{position:'absolute',top:0,width:32,height:32},checkerboard:{backgroundImage:\"linear-gradient(45deg, \".concat(colors.blue,\" 25%, transparent 25%),\\n        linear-gradient(-45deg, \").concat(colors.blue,\" 25%, transparent 25%),\\n        linear-gradient(45deg, transparent 75%, \").concat(colors.blue,\" 75%),\\n        linear-gradient(-45deg, transparent 75%, \").concat(colors.blue,\" 75%)\"),backgroundSize:\"2px 2px\",backgroundPosition:\"0 0, 0 1px, 1px -1px, -1px 0px\",pointerEvents:'none'}};export default DesktopShortcut;","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/inner-web/src/components/os/DesktopShortcut.tsx"],"names":["React","useCallback","useEffect","useRef","useState","colors","Icon","DesktopShortcut","icon","shortcutName","invertText","onOpen","isSelected","setIsSelected","shortcutId","setShortcutId","lastSelected","setLastSelected","containerRef","scaledStyle","setScaledStyle","requiredIcon","require","doubleClickTimerActive","setDoubleClickTimerActive","getShortcutId","replace","current","Object","keys","length","boundingBox","getBoundingClientRect","transformOrigin","transform","left","width","top","height","handleClickOutside","event","targetId","target","id","handleClickShortcut","setTimeout","document","addEventListener","removeEventListener","assign","styles","appShortcut","iconContainer","iconOverlay","checkerboard","WebkitMask","backgroundColor","blue","shortcutText","color","position","justifyContent","alignItems","flexDirection","textAlign","cursor","textOverflow","fontFamily","fontSize","paddingRight","paddingLeft","paddingBottom","backgroundImage","backgroundSize","backgroundPosition","pointerEvents"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { IconName } from '../../assets/icons';\nimport colors from '../../constants/colors';\nimport { Icon } from '../general';\n\nexport interface DesktopShortcutProps {\n    icon: IconName;\n    shortcutName: string;\n    invertText?: boolean;\n    onOpen: () => void;\n}\n\nconst DesktopShortcut: React.FC<DesktopShortcutProps> = ({\n    icon,\n    shortcutName,\n    invertText,\n    onOpen,\n}) => {\n    const [isSelected, setIsSelected] = useState(false);\n    const [shortcutId, setShortcutId] = useState('');\n    const [lastSelected, setLastSelected] = useState(false);\n    const containerRef = useRef<any>();\n\n    const [scaledStyle, setScaledStyle] = useState({});\n\n    const requiredIcon = require(`../../assets/icons/${icon}.png`);\n    const [doubleClickTimerActive, setDoubleClickTimerActive] = useState(false);\n\n    const getShortcutId = useCallback(() => {\n        const shortcutId = shortcutName.replace(/\\s/g, '');\n        return `desktop-shortcut-${shortcutId}`;\n    }, [shortcutName]);\n\n    useEffect(() => {\n        setShortcutId(getShortcutId());\n    }, [shortcutName, getShortcutId]);\n\n    useEffect(() => {\n        if (containerRef.current && Object.keys(scaledStyle).length === 0) {\n            //@ts-ignore\n            const boundingBox = containerRef.current.getBoundingClientRect();\n            setScaledStyle({\n                transformOrigin: 'center',\n                transform: 'scale(1.5)',\n                left: boundingBox.width / 4,\n                top: boundingBox.height / 4,\n                // transform: 'scale(1.5)',\n                // left: boundingBox.width / 4,\n                // top: boundingBox.height / 4,\n            });\n        }\n    }, [scaledStyle]);\n\n    const handleClickOutside = useCallback(\n        (event: MouseEvent) => {\n            // @ts-ignore\n            const targetId = event.target.id;\n            if (targetId !== shortcutId) {\n                setIsSelected(false);\n            }\n            if (!isSelected && lastSelected) {\n                setLastSelected(false);\n            }\n        },\n        [isSelected, setIsSelected, setLastSelected, lastSelected, shortcutId]\n    );\n\n    const handleClickShortcut = useCallback(() => {\n        if (doubleClickTimerActive) {\n            onOpen && onOpen();\n            setIsSelected(false);\n            setDoubleClickTimerActive(false);\n            return;\n        }\n        setIsSelected(true);\n        setLastSelected(true);\n        setDoubleClickTimerActive(true);\n        // set double click timer\n        setTimeout(() => {\n            setDoubleClickTimerActive(false);\n        }, 300);\n    }, [doubleClickTimerActive, setIsSelected, onOpen]);\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [isSelected, handleClickOutside]);\n\n    return (\n        <div\n            id={`${shortcutId}`}\n            style={Object.assign({}, styles.appShortcut, scaledStyle)}\n            onMouseDown={handleClickShortcut}\n            ref={containerRef}\n        >\n            <div id={`${shortcutId}`} style={styles.iconContainer}>\n                <div\n                    id={`${shortcutId}`}\n                    className=\"desktop-shortcut-icon\"\n                    style={Object.assign(\n                        {},\n                        styles.iconOverlay,\n                        isSelected && styles.checkerboard,\n                        isSelected && {\n                            WebkitMask: `url(${requiredIcon})`,\n                        }\n                    )}\n                />\n                <Icon icon={icon} style={styles.icon} />\n            </div>\n            <div\n                className={\n                    isSelected\n                        ? 'selected-shortcut-border'\n                        : lastSelected\n                        ? 'shortcut-border'\n                        : ''\n                }\n                id={`${shortcutId}`}\n                style={isSelected ? { backgroundColor: colors.blue } : {}}\n            >\n                <p\n                    id={`${shortcutId}`}\n                    style={Object.assign(\n                        {},\n                        styles.shortcutText,\n                        invertText && !isSelected && { color: 'black' }\n                    )}\n                >\n                    {shortcutName}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    appShortcut: {\n        position: 'absolute',\n        width: 56,\n\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n    },\n    shortcutText: {\n        cursor: 'pointer',\n        textOverflow: 'wrap',\n        fontFamily: 'MSSerif',\n        color: 'white',\n        fontSize: 8,\n        paddingRight: 2,\n        paddingLeft: 2,\n    },\n    iconContainer: {\n        cursor: 'pointer',\n        paddingBottom: 3,\n    },\n    iconOverlay: {\n        position: 'absolute',\n        top: 0,\n        width: 32,\n        height: 32,\n    },\n    checkerboard: {\n        backgroundImage: `linear-gradient(45deg, ${colors.blue} 25%, transparent 25%),\n        linear-gradient(-45deg, ${colors.blue} 25%, transparent 25%),\n        linear-gradient(45deg, transparent 75%, ${colors.blue} 75%),\n        linear-gradient(-45deg, transparent 75%, ${colors.blue} 75%)`,\n        backgroundSize: `2px 2px`,\n        backgroundPosition: `0 0, 0 1px, 1px -1px, -1px 0px`,\n        pointerEvents: 'none',\n    },\n};\n\nexport default DesktopShortcut;\n"]},"metadata":{},"sourceType":"module"}