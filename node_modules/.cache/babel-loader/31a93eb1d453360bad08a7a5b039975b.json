{"ast":null,"code":"import _slicedToArray from\"/Users/mac/Documents/GitHub/inner-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Colors from'../../constants/colors';import{Icon}from'../general';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Button=function Button(_ref){var icon=_ref.icon,text=_ref.text,onClick=_ref.onClick;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isHovering=_useState2[0],setIsHovering=_useState2[1];var handleMouseEnter=function handleMouseEnter(){setIsHovering(true);};var handleMouseLeave=function handleMouseLeave(){setIsHovering(false);};var outerBorderStyle=Object.assign({},styles.outerBorder,icon&&{width:16,height:14});var innerBorderStyle=Object.assign({},styles.innerBorder,icon&&{width:12,height:12},text&&{padding:4});var click=function click(e){e.preventDefault();onClick&&onClick();};return/*#__PURE__*/_jsx(\"div\",{onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave,style:outerBorderStyle,onMouseDown:click,children:/*#__PURE__*/_jsxs(\"div\",{style:Object.assign({},isHovering&&{backgroundColor:Colors.darkGray},innerBorderStyle),children:[icon&&/*#__PURE__*/_jsx(Icon,{icon:icon,style:styles.icon}),text&&/*#__PURE__*/ // <Text noSelect style={styles.text}>\n//     {text}\n// </Text>\n_jsx(\"p\",{children:text})]})});};var styles={outerBorder:{border:\"1px solid \".concat(Colors.black),borderTopColor:Colors.white,borderLeftColor:Colors.white,background:Colors.lightGray,cursor:'pointer'},innerBorder:{border:\"1px solid \".concat(Colors.darkGray),borderTopColor:Colors.lightGray,borderLeftColor:Colors.lightGray,flex:1}};export default Button;","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/inner-web/src/components/os/Button.tsx"],"names":["React","useState","Colors","Icon","Button","icon","text","onClick","isHovering","setIsHovering","handleMouseEnter","handleMouseLeave","outerBorderStyle","Object","assign","styles","outerBorder","width","height","innerBorderStyle","innerBorder","padding","click","e","preventDefault","backgroundColor","darkGray","border","black","borderTopColor","white","borderLeftColor","background","lightGray","cursor","flex"],"mappings":"2HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,OAASC,IAAT,KAAqB,YAArB,C,wFAQA,GAAMC,CAAAA,MAA6B,CAAG,QAAhCA,CAAAA,MAAgC,MAA6B,IAA1BC,CAAAA,IAA0B,MAA1BA,IAA0B,CAApBC,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CAC/D,cAAoCN,QAAQ,CAAC,KAAD,CAA5C,wCAAOO,UAAP,eAAmBC,aAAnB,eAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BD,aAAa,CAAC,IAAD,CAAb,CACH,CAFD,CAIA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BF,aAAa,CAAC,KAAD,CAAb,CACH,CAFD,CAIA,GAAMG,CAAAA,gBAAgB,CAAGC,MAAM,CAACC,MAAP,CACrB,EADqB,CAErBC,MAAM,CAACC,WAFc,CAGrBX,IAAI,EAAI,CAAEY,KAAK,CAAE,EAAT,CAAaC,MAAM,CAAE,EAArB,CAHa,CAAzB,CAMA,GAAMC,CAAAA,gBAAgB,CAAGN,MAAM,CAACC,MAAP,CACrB,EADqB,CAErBC,MAAM,CAACK,WAFc,CAGrBf,IAAI,EAAI,CAAEY,KAAK,CAAE,EAAT,CAAaC,MAAM,CAAE,EAArB,CAHa,CAIrBZ,IAAI,EAAI,CAAEe,OAAO,CAAE,CAAX,CAJa,CAAzB,CAOA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,CAAD,CAAY,CACtBA,CAAC,CAACC,cAAF,GACAjB,OAAO,EAAIA,OAAO,EAAlB,CACH,CAHD,CAKA,mBACI,YACI,YAAY,CAAEG,gBADlB,CAEI,YAAY,CAAEC,gBAFlB,CAGI,KAAK,CAAEC,gBAHX,CAII,WAAW,CAAEU,KAJjB,uBAMI,aACI,KAAK,CAAET,MAAM,CAACC,MAAP,CACH,EADG,CAEHN,UAAU,EAAI,CAAEiB,eAAe,CAAEvB,MAAM,CAACwB,QAA1B,CAFX,CAGHP,gBAHG,CADX,WAOKd,IAAI,eAAI,KAAC,IAAD,EAAM,IAAI,CAAEA,IAAZ,CAAkB,KAAK,CAAEU,MAAM,CAACV,IAAhC,EAPb,CAQKC,IAAI,gBACD;AACA;AACA;AACA,mBAAIA,IAAJ,EAZR,GANJ,EADJ,CAwBH,CArDD,CAuDA,GAAMS,CAAAA,MAAqB,CAAG,CAC1BC,WAAW,CAAE,CACTW,MAAM,qBAAezB,MAAM,CAAC0B,KAAtB,CADG,CAETC,cAAc,CAAE3B,MAAM,CAAC4B,KAFd,CAGTC,eAAe,CAAE7B,MAAM,CAAC4B,KAHf,CAITE,UAAU,CAAE9B,MAAM,CAAC+B,SAJV,CAMTC,MAAM,CAAE,SANC,CADa,CAS1Bd,WAAW,CAAE,CACTO,MAAM,qBAAezB,MAAM,CAACwB,QAAtB,CADG,CAETG,cAAc,CAAE3B,MAAM,CAAC+B,SAFd,CAGTF,eAAe,CAAE7B,MAAM,CAAC+B,SAHf,CAITE,IAAI,CAAE,CAJG,CATa,CAA9B,CAiBA,cAAe/B,CAAAA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { IconName } from '../../assets/icons';\nimport Colors from '../../constants/colors';\nimport { Icon } from '../general';\n\nexport interface ButtonProps {\n    icon?: IconName;\n    text?: string;\n    onClick?: () => void;\n}\n\nconst Button: React.FC<ButtonProps> = ({ icon, text, onClick }) => {\n    const [isHovering, setIsHovering] = useState(false);\n\n    const handleMouseEnter = () => {\n        setIsHovering(true);\n    };\n\n    const handleMouseLeave = () => {\n        setIsHovering(false);\n    };\n\n    const outerBorderStyle = Object.assign(\n        {},\n        styles.outerBorder,\n        icon && { width: 16, height: 14 }\n    );\n\n    const innerBorderStyle = Object.assign(\n        {},\n        styles.innerBorder,\n        icon && { width: 12, height: 12 },\n        text && { padding: 4 }\n    );\n\n    const click = (e: any) => {\n        e.preventDefault();\n        onClick && onClick();\n    };\n\n    return (\n        <div\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            style={outerBorderStyle}\n            onMouseDown={click}\n        >\n            <div\n                style={Object.assign(\n                    {},\n                    isHovering && { backgroundColor: Colors.darkGray },\n                    innerBorderStyle\n                )}\n            >\n                {icon && <Icon icon={icon} style={styles.icon} />}\n                {text && (\n                    // <Text noSelect style={styles.text}>\n                    //     {text}\n                    // </Text>\n                    <p>{text}</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    outerBorder: {\n        border: `1px solid ${Colors.black}`,\n        borderTopColor: Colors.white,\n        borderLeftColor: Colors.white,\n        background: Colors.lightGray,\n\n        cursor: 'pointer',\n    },\n    innerBorder: {\n        border: `1px solid ${Colors.darkGray}`,\n        borderTopColor: Colors.lightGray,\n        borderLeftColor: Colors.lightGray,\n        flex: 1,\n    },\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}