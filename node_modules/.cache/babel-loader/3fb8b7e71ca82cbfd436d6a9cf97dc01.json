{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Documents/GitHub/inner-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nimport { useEventListener } from '../useEventListener';\n\nfunction useHover(elementRef) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var handleMouseEnter = function handleMouseEnter() {\n    return setValue(true);\n  };\n\n  var handleMouseLeave = function handleMouseLeave() {\n    return setValue(false);\n  };\n\n  useEventListener('mouseenter', handleMouseEnter, elementRef);\n  useEventListener('mouseleave', handleMouseLeave, elementRef);\n  return value;\n}\n\nexport default useHover;","map":{"version":3,"mappings":";AAAA,SAAoBA,QAApB,QAAoC,OAApC;AAGA,SAASC,gBAAT,QAAiC,qBAAjC;;AAEA,SAASC,QAAT,CACEC,UADF,EAC0B;AAExB,kBAA0BH,QAAQ,CAAU,KAAV,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAMD,QAAQ,CAAC,IAAD,CAAd;AAAA,GAAzB;;AACA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAMF,QAAQ,CAAC,KAAD,CAAd;AAAA,GAAzB;;AAEAJ,kBAAgB,CAAC,YAAD,EAAeK,gBAAf,EAAiCH,UAAjC,CAAhB;AACAF,kBAAgB,CAAC,YAAD,EAAeM,gBAAf,EAAiCJ,UAAjC,CAAhB;AAEA,SAAOC,KAAP;AACD;;AAED,eAAeF,QAAf","names":["useState","useEventListener","useHover","elementRef","value","setValue","handleMouseEnter","handleMouseLeave"],"sources":["/Users/mac/Documents/GitHub/inner-web/node_modules/usehooks-ts/src/useHover/useHover.ts"],"sourcesContent":["import { RefObject, useState } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-event-listener\nimport { useEventListener } from '../useEventListener'\n\nfunction useHover<T extends HTMLElement = HTMLElement>(\n  elementRef: RefObject<T>,\n): boolean {\n  const [value, setValue] = useState<boolean>(false)\n\n  const handleMouseEnter = () => setValue(true)\n  const handleMouseLeave = () => setValue(false)\n\n  useEventListener('mouseenter', handleMouseEnter, elementRef)\n  useEventListener('mouseleave', handleMouseLeave, elementRef)\n\n  return value\n}\n\nexport default useHover\n"]},"metadata":{},"sourceType":"module"}