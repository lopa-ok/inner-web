{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Documents/GitHub/inner-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n\nfunction useWindowSize() {\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      windowSize = _useState2[0],\n      setWindowSize = _useState2[1];\n\n  var handleSize = function handleSize() {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  useEventListener('resize', handleSize);\n  useIsomorphicLayoutEffect(function () {\n    handleSize();\n  }, []);\n  return windowSize;\n}\n\nexport default useWindowSize;","map":{"version":3,"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,SAASC,yBAAT,QAA0C,8BAA1C;;AAOA,SAASC,aAAT,GAAsB;AACpB,kBAAoCH,QAAQ,CAAa;AACvDI,SAAK,EAAE,CADgD;AAEvDC,UAAM,EAAE;AAF+C,GAAb,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAKA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAK;AACtBD,iBAAa,CAAC;AACZH,WAAK,EAAEK,MAAM,CAACC,UADF;AAEZL,YAAM,EAAEI,MAAM,CAACE;AAFH,KAAD,CAAb;AAID,GALD;;AAOAV,kBAAgB,CAAC,QAAD,EAAWO,UAAX,CAAhB;AAGAN,2BAAyB,CAAC,YAAK;AAC7BM,cAAU;AAEX,GAHwB,EAGtB,EAHsB,CAAzB;AAKA,SAAOF,UAAP;AACD;;AAED,eAAeH,aAAf","names":["useState","useEventListener","useIsomorphicLayoutEffect","useWindowSize","width","height","windowSize","setWindowSize","handleSize","window","innerWidth","innerHeight"],"sources":["/Users/mac/Documents/GitHub/inner-web/node_modules/usehooks-ts/src/useWindowSize/useWindowSize.ts"],"sourcesContent":["import { useState } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-event-listener\nimport { useEventListener } from '../useEventListener'\n// See: https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\ninterface WindowSize {\n  width: number\n  height: number\n}\n\nfunction useWindowSize(): WindowSize {\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: 0,\n    height: 0,\n  })\n\n  const handleSize = () => {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    })\n  }\n\n  useEventListener('resize', handleSize)\n\n  // Set size at the first client-side load\n  useIsomorphicLayoutEffect(() => {\n    handleSize()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return windowSize\n}\n\nexport default useWindowSize\n"]},"metadata":{},"sourceType":"module"}