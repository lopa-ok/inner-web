{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Documents/GitHub/inner-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\n\nfunction useImageOnLoad() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var handleImageOnLoad = function handleImageOnLoad() {\n    setIsLoaded(true);\n  };\n\n  var css = {\n    thumbnail: {\n      visibility: isLoaded ? 'hidden' : 'visible',\n      filter: 'blur(8px)',\n      transition: 'visibility 0ms ease-out 500ms'\n    },\n    fullSize: {\n      opacity: isLoaded ? 1 : 0,\n      transition: 'opacity 500ms ease-in 0ms'\n    }\n  };\n  return {\n    handleImageOnLoad: handleImageOnLoad,\n    css: css\n  };\n}\n\nexport default useImageOnLoad;","map":{"version":3,"mappings":";AAAA,SAAwBA,QAAxB,QAAwC,OAAxC;;AAYA,SAASC,cAAT,GAAuB;AACrB,kBAAgCD,QAAQ,CAAU,KAAV,CAAxC;AAAA;AAAA,MAAOE,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAK;AAC7BD,eAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,MAAME,GAAG,GAAe;AAEtBC,aAAS,EAAE;AACTC,gBAAU,EAAEL,QAAQ,GAAG,QAAH,GAAc,SADzB;AAETM,YAAM,EAAE,WAFC;AAGTC,gBAAU,EAAE;AAHH,KAFW;AAQtBC,YAAQ,EAAE;AACRC,aAAO,EAAET,QAAQ,GAAG,CAAH,GAAO,CADhB;AAERO,gBAAU,EAAE;AAFJ;AARY,GAAxB;AAcA,SAAO;AAAEL,qBAAiB,EAAjBA,iBAAF;AAAqBC,OAAG,EAAHA;AAArB,GAAP;AACD;;AAED,eAAeJ,cAAf","names":["useState","useImageOnLoad","isLoaded","setIsLoaded","handleImageOnLoad","css","thumbnail","visibility","filter","transition","fullSize","opacity"],"sources":["/Users/mac/Documents/GitHub/inner-web/node_modules/usehooks-ts/src/useImageOnLoad/useImageOnLoad.ts"],"sourcesContent":["import { CSSProperties, useState } from 'react'\n\ninterface ImageStyle {\n  thumbnail: CSSProperties\n  fullSize: CSSProperties\n}\n\ninterface ImageOnLoadType {\n  handleImageOnLoad: () => void\n  css: ImageStyle\n}\n\nfunction useImageOnLoad(): ImageOnLoadType {\n  const [isLoaded, setIsLoaded] = useState<boolean>(false)\n\n  // Triggered when full image will be loaded.\n  const handleImageOnLoad = () => {\n    setIsLoaded(true)\n  }\n\n  const css: ImageStyle = {\n    // Thumbnail style.\n    thumbnail: {\n      visibility: isLoaded ? 'hidden' : 'visible',\n      filter: 'blur(8px)',\n      transition: 'visibility 0ms ease-out 500ms',\n    },\n    // Full image style.\n    fullSize: {\n      opacity: isLoaded ? 1 : 0,\n      transition: 'opacity 500ms ease-in 0ms',\n    },\n  }\n\n  return { handleImageOnLoad, css }\n}\n\nexport default useImageOnLoad\n"]},"metadata":{},"sourceType":"module"}