{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/inner-web/src/components/os/Desktop.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport Doom from '../applications/Doom';\nimport OregonTrail from '../applications/OregonTrail';\nimport ShutdownSequence from './ShutdownSequence';\nimport Wordle from '../applications/wordle';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut from './DesktopShortcut';\nimport Scrabble from '../applications/Scrabble'; // import Minesweeper from '../applications/MinesweeperGame/Minesweeper';\n\nimport Credits from '../applications/Credits';\nimport InternetExplorer from '../applications/InternetExplorer';\nimport Folder from '../applications/folder';\nimport RecycleBin from '../applications/RecycleBin';\nimport Settings from '../applications/Settings';\nimport bg0 from '../../assets/bg/bg0.png';\nimport TextEditor from '../applications/TextEditor';\nimport MSN from '../applications/MSN';\nimport Run from '../applications/Run';\nimport Documents from '../applications/Documents';\nimport GamesFolder from '../applications/GamesFolder';\nimport GamesText from '../applications/GamesText';\nimport Sudoku from '../applications/Sudoku';\nimport Hangman from '../applications/Hangman';\nimport Game2048 from '../applications/Game2048';\nimport TicTacToe from '../applications/TicTacToe';\nimport WhackAMole from '../applications/WhackAMole';\nimport Tetris from '../applications/Tetris';\nimport Maze from '../applications/Maze';\nimport PaintApp from '../applications/PaintApp';\nimport SnakeGame from '../applications/SnakeGame';\nimport MemoryGame from '../applications/MemoryGame';\nimport MSDOS from '../applications/MSDOS';\nimport Calculator from '../applications/Calculator';\nimport Help from '../applications/Help';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 100;\nconst VERTICAL_SPACING = 104;\nconst HORIZONTAL_SPACING = 100;\nconst INITIAL_OFFSET = {\n  top: 16,\n  left: 6\n};\nconst WINDOW_OFFSET = 30;\nconst TOOLBAR_HEIGHT = 32;\n\nconst Desktop = props => {\n  _s();\n\n  const [windows, setWindows] = useState({});\n  const [shortcuts, setShortcuts] = useState([]);\n  const [positions, setPositions] = useState({});\n  const [shutdown, setShutdown] = useState(false);\n  const [numShutdowns, setNumShutdowns] = useState(1);\n  const [folders, setFolders] = useState({});\n  const [nextFolderId, setNextFolderId] = useState(1);\n  const [nextFileId, setNextFileId] = useState(1);\n  const [folderContents, setFolderContents] = useState({});\n  const [contextMenu, setContextMenu] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    type: 'desktop'\n  });\n  const [background, setBackground] = useState(null);\n  const [theme, setTheme] = useState(null);\n  const [folderNames, setFolderNames] = useState({});\n  const [renamingFolder, setRenamingFolder] = useState(null); // Initialize background from localStorage on component mount\n\n  useEffect(() => {\n    const savedBg = localStorage.getItem('background');\n    const savedTheme = localStorage.getItem('theme');\n\n    if (savedBg && savedTheme) {\n      updateBackground(savedBg, savedTheme);\n    } else {\n      const defaultBg = bg0;\n      const defaultTheme = '#098684';\n      updateBackground(defaultBg, defaultTheme);\n      localStorage.setItem('background', defaultBg);\n      localStorage.setItem('theme', defaultTheme);\n    }\n  }, []);\n  useEffect(() => {\n    const bodyBG = document.getElementsByTagName('body')[0];\n    bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n    bodyBG.style.backgroundColor = '#c5c4c4';\n    bodyBG.style.backgroundSize = 'cover';\n    bodyBG.style.backgroundPosition = 'center';\n    bodyBG.style.backgroundRepeat = 'no-repeat';\n    bodyBG.style.height = '100vh';\n    bodyBG.style.margin = '0';\n  }, []);\n  const updateBackground = useCallback((background, theme) => {\n    console.log('Updating background:', {\n      background,\n      theme\n    });\n    setBackground(background);\n    setTheme(theme);\n    const bodyBG = document.getElementsByTagName('body')[0];\n    bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n    bodyBG.style.backgroundColor = theme;\n    bodyBG.style.backgroundImage = `url(${background})`;\n    bodyBG.style.backgroundSize = 'cover';\n    bodyBG.style.backgroundPosition = 'center';\n    bodyBG.style.backgroundRepeat = 'no-repeat';\n    bodyBG.style.height = '100vh';\n    bodyBG.style.margin = '0';\n  }, []);\n  const getHighestZIndex = useCallback(() => {\n    let highestZIndex = 0;\n    Object.keys(windows).forEach(key => {\n      const window = windows[key];\n\n      if (window) {\n        if (window.zIndex > highestZIndex) highestZIndex = window.zIndex;\n      }\n    });\n    return highestZIndex;\n  }, [windows]);\n\n  const openCreditsApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('credits', /*#__PURE__*/_jsxDEV(Credits, {\n      onInteract: () => onWindowInteract('credits'),\n      onMinimize: () => minimizeWindow('credits'),\n      onClose: () => removeWindow('credits')\n    }, \"credits\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openMSNApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('msn', /*#__PURE__*/_jsxDEV(MSN, {\n      onInteract: () => onWindowInteract('msn'),\n      onMinimize: () => minimizeWindow('msn'),\n      onClose: () => removeWindow('msn')\n    }, \"msn\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openWordleApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('wordle', /*#__PURE__*/_jsxDEV(Wordle, {\n      onInteract: () => onWindowInteract('wordle'),\n      onMinimize: () => minimizeWindow('wordle'),\n      onClose: () => removeWindow('wordle')\n    }, \"wordle\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openGamesText = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('gamesText', /*#__PURE__*/_jsxDEV(GamesText, {\n      fileName: \"Games Info\",\n      onInteract: () => onWindowInteract('gamesText'),\n      onMinimize: () => minimizeWindow('gamesText'),\n      onClose: () => removeWindow('gamesText')\n    }, \"gamesText\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openTicTacToeApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('ticTacToe', /*#__PURE__*/_jsxDEV(TicTacToe, {\n      onInteract: () => onWindowInteract('ticTacToe'),\n      onMinimize: () => minimizeWindow('ticTacToe'),\n      onClose: () => removeWindow('ticTacToe')\n    }, \"ticTacToe\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openWhackAMoleApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('whackAMole', /*#__PURE__*/_jsxDEV(WhackAMole, {\n      onInteract: () => onWindowInteract('whackAMole'),\n      onMinimize: () => minimizeWindow('whackAMole'),\n      onClose: () => removeWindow('whackAMole')\n    }, \"whackAMole\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this));\n  };\n\n  const open2048App = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('2048', /*#__PURE__*/_jsxDEV(Game2048, {\n      onInteract: () => onWindowInteract('2048'),\n      onMinimize: () => minimizeWindow('2048'),\n      onClose: () => removeWindow('2048')\n    }, \"2048\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openTetrisApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('tetris', /*#__PURE__*/_jsxDEV(Tetris, {\n      onInteract: () => onWindowInteract('tetris'),\n      onMinimize: () => minimizeWindow('tetris'),\n      onClose: () => removeWindow('tetris')\n    }, \"tetris\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openMazeApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('maze', /*#__PURE__*/_jsxDEV(Maze, {\n      onInteract: () => onWindowInteract('maze'),\n      onMinimize: () => minimizeWindow('maze'),\n      onClose: () => removeWindow('maze')\n    }, \"maze\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openGamesFolder = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('gamesFolder', /*#__PURE__*/_jsxDEV(GamesFolder, {\n      onInteract: () => onWindowInteract('gamesFolder'),\n      onMinimize: () => minimizeWindow('gamesFolder'),\n      onClose: () => removeWindow('gamesFolder'),\n      openWordleApp: openWordleApp,\n      openGamesText: openGamesText,\n      openSudokuApp: () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow('sudoku', /*#__PURE__*/_jsxDEV(Sudoku, {\n          onInteract: () => onWindowInteract('sudoku'),\n          onMinimize: () => minimizeWindow('sudoku'),\n          onClose: () => removeWindow('sudoku')\n        }, \"sudoku\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this));\n      },\n      openHangmanApp: () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow('hangman', /*#__PURE__*/_jsxDEV(Hangman, {\n          onInteract: () => onWindowInteract('hangman'),\n          onMinimize: () => minimizeWindow('hangman'),\n          onClose: () => removeWindow('hangman')\n        }, \"hangman\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this));\n      },\n      openTicTacToeApp: openTicTacToeApp,\n      open2048App: open2048App,\n      openWhackAMoleApp: openWhackAMoleApp,\n      openTetrisApp: openTetrisApp,\n      openMazeApp: openMazeApp,\n      openPaintApp: () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow('paint', /*#__PURE__*/_jsxDEV(PaintApp, {\n          onInteract: () => onWindowInteract('paint'),\n          onMinimize: () => minimizeWindow('paint'),\n          onClose: () => removeWindow('paint')\n        }, \"paint\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this));\n      },\n      openSnakeApp: () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow('snake', /*#__PURE__*/_jsxDEV(SnakeGame, {\n          onInteract: () => onWindowInteract('snake'),\n          onMinimize: () => minimizeWindow('snake'),\n          onClose: () => removeWindow('snake')\n        }, \"snake\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this));\n      },\n      openMemoryGameApp: () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow('memoryGame', /*#__PURE__*/_jsxDEV(MemoryGame, {\n          onInteract: () => onWindowInteract('memoryGame'),\n          onMinimize: () => minimizeWindow('memoryGame'),\n          onClose: () => removeWindow('memoryGame')\n        }, \"memoryGame\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this));\n      }\n    }, \"gamesFolder\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), highestZIndex + 1);\n  };\n\n  const openMSDOSApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('msdos', /*#__PURE__*/_jsxDEV(MSDOS, {\n      onInteract: () => onWindowInteract('msdos'),\n      onMinimize: () => minimizeWindow('msdos'),\n      onClose: () => removeWindow('msdos')\n    }, \"msdos\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }, this));\n  };\n\n  const APPLICATIONS = {\n    // Removed the folder entry from apps since i made it seperate\n    showcase: {\n      key: 'showcase',\n      name: 'Showcase',\n      shortcutIcon: 'showcaseIcon',\n      component: ShowcaseExplorer\n    },\n    wordle: {\n      key: 'wordle',\n      name: 'Wordle',\n      shortcutIcon: 'wordleIcon',\n      component: Wordle\n    },\n    trail: {\n      key: 'trail',\n      name: 'The Oregon Trail',\n      shortcutIcon: 'trailIcon',\n      component: OregonTrail\n    },\n    doom: {\n      key: 'doom',\n      name: 'Doom',\n      shortcutIcon: 'doomIcon',\n      component: Doom\n    },\n    scrabble: {\n      key: 'scrabble',\n      name: 'Scrabble',\n      shortcutIcon: 'scrabbleIcon',\n      component: Scrabble\n    },\n    // chess: {\n    //     key: 'chess',\n    //     name: 'Chess',\n    //     shortcutIcon: 'chessIcon',\n    //     component: Settings,\n    // },\n    internetExplorer: {\n      key: 'internetExplorer',\n      name: 'Google Chrome',\n      shortcutIcon: 'InternetExplorerIcon',\n      component: InternetExplorer\n    },\n    credits: {\n      key: 'credits',\n      name: 'Credits',\n      shortcutIcon: 'credits',\n      component: Credits\n    },\n    settings: {\n      key: 'settings',\n      name: 'Settings',\n      shortcutIcon: 'setting',\n      component: Settings\n    },\n    gamesFolder: {\n      key: 'gamesFolder',\n      name: 'Games Folder',\n      shortcutIcon: 'folderIcon',\n      component: props => /*#__PURE__*/_jsxDEV(GamesFolder, {\n        onInteract: props.onInteract,\n        onMinimize: props.onMinimize,\n        onClose: props.onClose,\n        openWordleApp: openWordleApp,\n        openGamesText: openGamesText,\n        openSudokuApp: () => {\n          const highestZIndex = getHighestZIndex();\n          addWindow('sudoku', /*#__PURE__*/_jsxDEV(Sudoku, {\n            onInteract: () => onWindowInteract('sudoku'),\n            onMinimize: () => minimizeWindow('sudoku'),\n            onClose: () => removeWindow('sudoku')\n          }, \"sudoku\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 29\n          }, this));\n        },\n        openHangmanApp: () => {\n          const highestZIndex = getHighestZIndex();\n          addWindow('hangman', /*#__PURE__*/_jsxDEV(Hangman, {\n            onInteract: () => onWindowInteract('hangman'),\n            onMinimize: () => minimizeWindow('hangman'),\n            onClose: () => removeWindow('hangman')\n          }, \"hangman\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 29\n          }, this));\n        },\n        openTicTacToeApp: openTicTacToeApp,\n        open2048App: open2048App,\n        openWhackAMoleApp: openWhackAMoleApp,\n        openTetrisApp: openTetrisApp,\n        openMazeApp: openMazeApp,\n        openPaintApp: () => {\n          const highestZIndex = getHighestZIndex();\n          addWindow('paint', /*#__PURE__*/_jsxDEV(PaintApp, {\n            onInteract: () => onWindowInteract('paint'),\n            onMinimize: () => minimizeWindow('paint'),\n            onClose: () => removeWindow('paint')\n          }, \"paint\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 29\n          }, this));\n        },\n        openSnakeApp: () => {\n          const highestZIndex = getHighestZIndex();\n          addWindow('snake', /*#__PURE__*/_jsxDEV(SnakeGame, {\n            onInteract: () => onWindowInteract('snake'),\n            onMinimize: () => minimizeWindow('snake'),\n            onClose: () => removeWindow('snake')\n          }, \"snake\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 29\n          }, this));\n        },\n        openMemoryGameApp: () => {\n          const highestZIndex = getHighestZIndex();\n          addWindow('memoryGame', /*#__PURE__*/_jsxDEV(MemoryGame, {\n            onInteract: () => onWindowInteract('memoryGame'),\n            onMinimize: () => minimizeWindow('memoryGame'),\n            onClose: () => removeWindow('memoryGame')\n          }, \"memoryGame\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 29\n          }, this));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this)\n    },\n    gamesText: {\n      key: 'gamesText',\n      name: 'Games Info',\n      shortcutIcon: 'textFileIcon',\n      component: GamesText\n    },\n    sudoku: {\n      key: 'sudoku',\n      name: 'Sudoku',\n      shortcutIcon: 'folderIcon',\n      component: Sudoku\n    },\n    hangman: {\n      key: 'hangman',\n      name: 'Hangman',\n      shortcutIcon: 'folderIcon',\n      component: Hangman\n    },\n    game2048: {\n      key: 'game2048',\n      name: '2048',\n      shortcutIcon: 'twentyIcon',\n      component: Game2048\n    },\n    ticTacToe: {\n      key: 'ticTacToe',\n      name: 'Tic Tac Toe',\n      shortcutIcon: 'tictactoeIcon',\n      component: TicTacToe\n    },\n    whackAMole: {\n      key: 'whackAMole',\n      name: 'Whack-A-Mole',\n      shortcutIcon: 'whackIcon',\n      component: WhackAMole\n    },\n    tetris: {\n      key: 'tetris',\n      name: 'Tetris',\n      shortcutIcon: 'folderIcon',\n      component: Tetris\n    },\n    maze: {\n      key: 'maze',\n      name: 'Maze',\n      shortcutIcon: 'folderIcon',\n      component: Maze\n    },\n    paint: {\n      key: 'paint',\n      name: 'Paint',\n      shortcutIcon: 'paintIcon',\n      component: PaintApp\n    },\n    snake: {\n      key: 'snake',\n      name: 'Snake',\n      shortcutIcon: 'folderIcon',\n      component: SnakeGame\n    },\n    memoryGame: {\n      key: 'memoryGame',\n      name: 'Memory Game',\n      shortcutIcon: 'folderIcon',\n      component: MemoryGame\n    },\n    msdos: {\n      key: 'msdos',\n      name: 'MS-DOS',\n      shortcutIcon: 'folderIcon',\n      component: MSDOS\n    },\n    calculator: {\n      key: 'calculator',\n      name: 'Calculator',\n      shortcutIcon: 'calculatorIcon',\n      component: Calculator\n    },\n    run: {\n      key: 'run',\n      name: 'Run',\n      shortcutIcon: 'runIcon',\n      component: props => /*#__PURE__*/_jsxDEV(Run, {\n        onInteract: props.onInteract,\n        onMinimize: props.onMinimize,\n        onClose: props.onClose,\n        openAppByName: openAppByName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 17\n      }, this)\n    },\n    //msn: {\n    //key: 'msn',\n    // name: 'MSN',\n    //shortcutIcon: 'msnIcon',\n    // component: MSN,\n    // },\n    // minesweeper: {\n    //     key: 'minesweeper',\n    //     name: 'Minesweeper',\n    //     shortcutIcon: 'setting',\n    //     component: (props: ExtendedWindowAppProps<any>) => (\n    //         <Window\n    //             closeWindow={props.onClose}\n    //             minimizeWindow={props.onMinimize}\n    //             onInteract={props.onInteract}\n    //             width={400}\n    //             height={400}\n    //             top={100}\n    //             left={100}\n    //             windowTitle=\"Minesweeper\"\n    //             windowBarIcon=\"setting\"\n    //         >\n    //             <Minesweeper\n    //                 onInteract={props.onInteract}\n    //                 onMinimize={props.onMinimize}\n    //                 onClose={props.onClose}\n    //             />\n    //         </Window>\n    //     ),\n    // },\n    help: {\n      key: 'help',\n      name: 'Help',\n      shortcutIcon: 'helpIcon',\n      component: Help\n    }\n  };\n  useEffect(() => {\n    if (shutdown === true) {\n      rebootDesktop();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [shutdown]);\n  useEffect(() => {\n    const newShortcuts = [];\n    Object.keys(APPLICATIONS).forEach(key => {\n      const app = APPLICATIONS[key];\n\n      if (key !== 'credits' && key !== 'settings' && key !== 'folder' && key !== 'msn' && key !== 'gamesFolder' && key !== 'gamesText' && key !== 'wordle' && key !== 'sudoku' && key !== 'hangman' && key !== 'game2048' && key !== 'ticTacToe' && key !== 'tetris' && key !== 'whackAMole' && key !== 'maze' && key !== 'paint' && key !== 'snake' && key !== 'memoryGame' && key !== 'msdos' && key !== 'calculator' && key !== 'run' && key !== 'help') {\n        newShortcuts.push({\n          shortcutName: app.name,\n          icon: app.shortcutIcon,\n          onOpen: () => {\n            addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n              onInteract: () => onWindowInteract(app.key),\n              onMinimize: () => minimizeWindow(app.key),\n              onClose: () => removeWindow(app.key)\n            }, app.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 29\n            }, this));\n          }\n        });\n      }\n    });\n    initializeDocumentsFolder();\n    initializeRecycleBin();\n    newShortcuts.forEach((shortcut, index) => {\n      const column = Math.floor(index / Math.floor((window.innerHeight - TOOLBAR_HEIGHT) / VERTICAL_SPACING));\n      const row = index % Math.floor((window.innerHeight - TOOLBAR_HEIGHT) / VERTICAL_SPACING);\n      const position = {\n        top: Math.round((INITIAL_OFFSET.top + row * VERTICAL_SPACING) / GRID_SIZE) * GRID_SIZE,\n        left: Math.round((INITIAL_OFFSET.left + column * HORIZONTAL_SPACING) / GRID_SIZE) * GRID_SIZE\n      };\n      setPositions(prev => ({ ...prev,\n        [shortcut.shortcutName]: position\n      }));\n\n      if (shortcut.shortcutName === 'Showcase') {\n        shortcut.onOpen();\n      }\n    });\n    setShortcuts(prevShortcuts => [...prevShortcuts, ...newShortcuts]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    const snapToGrid = () => {\n      setPositions(prevPositions => {\n        const newPositions = { ...prevPositions\n        };\n        Object.keys(newPositions).forEach(key => {\n          newPositions[key].top = Math.round(newPositions[key].top / GRID_SIZE) * GRID_SIZE;\n          newPositions[key].left = Math.round(newPositions[key].left / GRID_SIZE) * GRID_SIZE;\n        });\n        return newPositions;\n      });\n    };\n\n    snapToGrid();\n  }, []);\n  useEffect(() => {\n    const savedShortcuts = sessionStorage.getItem('shortcuts');\n    const savedFolders = sessionStorage.getItem('folders');\n    const savedPositions = sessionStorage.getItem('positions');\n    const savedFolderNames = sessionStorage.getItem('folderNames');\n    const savedNextFolderId = sessionStorage.getItem('nextFolderId');\n    const savedNextFileId = sessionStorage.getItem('nextFileId');\n    const savedWindows = sessionStorage.getItem('windows');\n\n    if (savedShortcuts) {\n      const parsedShortcuts = JSON.parse(savedShortcuts);\n      parsedShortcuts.forEach(shortcut => {\n        shortcut.onOpen = () => {\n          const app = APPLICATIONS[shortcut.shortcutName.toLowerCase()];\n\n          if (app) {\n            addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n              onInteract: () => onWindowInteract(app.key),\n              onMinimize: () => minimizeWindow(app.key),\n              onClose: () => removeWindow(app.key)\n            }, app.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 29\n            }, this));\n          }\n        };\n      });\n      setShortcuts(parsedShortcuts);\n    }\n\n    if (savedFolders) {\n      setFolders(JSON.parse(savedFolders));\n    }\n\n    if (savedPositions) {\n      setPositions(JSON.parse(savedPositions));\n    }\n\n    if (savedFolderNames) {\n      setFolderNames(JSON.parse(savedFolderNames));\n    }\n\n    if (savedNextFolderId) {\n      setNextFolderId(JSON.parse(savedNextFolderId));\n    }\n\n    if (savedNextFileId) {\n      setNextFileId(JSON.parse(savedNextFileId));\n    }\n\n    if (savedWindows) {\n      setWindows(JSON.parse(savedWindows));\n    }\n  }, []);\n  useEffect(() => {\n    sessionStorage.setItem('shortcuts', JSON.stringify(shortcuts));\n    sessionStorage.setItem('folders', JSON.stringify(folders));\n    sessionStorage.setItem('positions', JSON.stringify(positions));\n    sessionStorage.setItem('folderNames', JSON.stringify(folderNames));\n    sessionStorage.setItem('nextFolderId', JSON.stringify(nextFolderId));\n    sessionStorage.setItem('nextFileId', JSON.stringify(nextFileId));\n    sessionStorage.setItem('windows', JSON.stringify(windows));\n  }, [shortcuts, folders, positions, folderNames, nextFolderId, nextFileId, windows]);\n  const rebootDesktop = useCallback(() => {\n    setWindows({});\n  }, []);\n  const removeWindow = useCallback(key => {\n    // Absolute hack and a half\n    setTimeout(() => {\n      setWindows(prevWindows => {\n        const newWindows = { ...prevWindows\n        };\n        delete newWindows[key];\n        return newWindows;\n      });\n    }, 100);\n  }, []);\n  const minimizeWindow = useCallback(key => {\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n      newWindows[key].minimized = true;\n      return newWindows;\n    });\n  }, []);\n  const toggleMinimize = useCallback(key => {\n    const newWindows = { ...windows\n    };\n    const highestIndex = getHighestZIndex();\n\n    if (newWindows[key].minimized || newWindows[key].zIndex === highestIndex) {\n      newWindows[key].minimized = !newWindows[key].minimized;\n    }\n\n    newWindows[key].zIndex = getHighestZIndex() + 1;\n    setWindows(newWindows);\n  }, [windows, getHighestZIndex]);\n  const onWindowInteract = useCallback(key => {\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n      const highestZIndex = getHighestZIndex();\n      newWindows[key].zIndex = highestZIndex + 1;\n      return newWindows;\n    });\n  }, [getHighestZIndex]);\n  const startShutdown = useCallback(() => {\n    setTimeout(() => {\n      setShutdown(true);\n      setNumShutdowns(numShutdowns + 1);\n    }, 600);\n  }, [numShutdowns]);\n  const addWindow = useCallback((key, element, zIndex) => {\n    const highestZIndex = getHighestZIndex();\n    const existingWindows = Object.keys(windows).length;\n    const top = INITIAL_OFFSET.top + existingWindows * WINDOW_OFFSET;\n    const left = INITIAL_OFFSET.left + existingWindows * WINDOW_OFFSET; // Always set new windows to highest z-index + 1\n\n    const newZIndex = Math.max(zIndex || 0, highestZIndex + 1);\n    setWindows(prevState => ({ ...prevState,\n      [key]: {\n        zIndex: newZIndex,\n        minimized: false,\n        component: /*#__PURE__*/React.cloneElement(element, {\n          updateBackground\n        }),\n        name: APPLICATIONS[key].name,\n        icon: APPLICATIONS[key].shortcutIcon,\n        top: top % window.innerHeight,\n        left: left % window.innerWidth\n      }\n    }));\n    onWindowInteract(key);\n  }, [getHighestZIndex, updateBackground, windows]);\n\n  const handleDragStart = (e, key) => {\n    e.dataTransfer.setData('text/plain', key);\n  };\n\n  const handleDrop = e => {\n    const key = e.dataTransfer.getData('text/plain');\n    const rect = e.currentTarget.getBoundingClientRect();\n    let top = e.clientY - rect.top;\n    let left = e.clientX - rect.left; // Snap to grid\n\n    top = Math.round(top / GRID_SIZE) * GRID_SIZE;\n    left = Math.round(left / GRID_SIZE) * GRID_SIZE;\n\n    if (top > window.innerHeight - TOOLBAR_HEIGHT - GRID_SIZE) {\n      top = window.innerHeight - TOOLBAR_HEIGHT - GRID_SIZE;\n    } // Check for collisions and adjust position if necessary\n\n\n    const newPosition = {\n      top,\n      left\n    };\n    let collision = Object.values(positions).some(pos => pos.top === newPosition.top && pos.left === newPosition.left);\n\n    while (collision) {\n      newPosition.top += GRID_SIZE;\n\n      if (newPosition.top > window.innerHeight - TOOLBAR_HEIGHT - GRID_SIZE) {\n        newPosition.top = INITIAL_OFFSET.top;\n        newPosition.left += GRID_SIZE;\n      }\n\n      collision = Object.values(positions).some(pos => pos.top === newPosition.top && pos.left === newPosition.left);\n    }\n\n    setPositions(prevPositions => ({ ...prevPositions,\n      [key]: newPosition\n    }));\n  };\n\n  const handleDropOnFolder = (e, folderId) => {\n    const key = e.dataTransfer.getData('text/plain');\n    const item = shortcuts.find(shortcut => shortcut.shortcutName === key);\n\n    if (item) {\n      setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== key));\n      addItemToFolder(folderId, item);\n    }\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n\n  const createNewFolder = () => {\n    const newFolderId = `folder-${nextFolderId}`;\n    const defaultName = `New Folder ${nextFolderId}`;\n    setFolders(prev => ({ ...prev,\n      [newFolderId]: []\n    }));\n    setFolderNames(prev => ({ ...prev,\n      [newFolderId]: defaultName\n    })); // Set initial position for the new folder\n\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      [newFolderId]: position\n    }));\n    setNextFolderId(prev => prev + 1);\n    setContextMenu({\n      visible: false,\n      x: 0,\n      y: 0,\n      type: 'desktop'\n    });\n  };\n\n  const openFolder = (folderId, folderName) => {\n    const highestZIndex = getHighestZIndex();\n\n    const folderWindow = /*#__PURE__*/_jsxDEV(Folder, {\n      folderId: folderId,\n      folderName: folderNames[folderId] || folderName,\n      contents: folders[folderId] || [],\n      onInteract: () => onWindowInteract(folderId),\n      onMinimize: () => minimizeWindow(folderId),\n      onClose: () => removeWindow(folderId),\n      onAddItem: addItemToFolder,\n      onRemoveItem: removeItemFromFolder,\n      onRename: handleFolderRename,\n      addWindow: addWindow,\n      getHighestZIndex: getHighestZIndex,\n      bringToFront: () => bringToFront(folderId)\n    }, folderId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 922,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      [folderId]: {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: folderWindow,\n        name: folderNames[folderId] || folderName,\n        icon: 'folderIcon'\n      }\n    }));\n  };\n\n  const bringToFront = key => {\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n      const highestZIndex = getHighestZIndex();\n      newWindows[key].zIndex = highestZIndex + 1;\n      return newWindows;\n    });\n  };\n\n  const addItemToFolder = (folderId, item) => {\n    setFolders(prev => ({ ...prev,\n      [folderId]: [...(prev[folderId] || []), item]\n    }));\n  };\n\n  const removeItemFromFolder = (folderId, itemName) => {\n    setFolders(prev => ({\n      [folderId]: prev[folderId].filter(item => item.shortcutName !== itemName)\n    }));\n  };\n\n  const handleContextMenu = e => {\n    e.preventDefault();\n    setContextMenu({\n      visible: true,\n      x: e.clientX,\n      y: e.clientY,\n      type: 'desktop'\n    });\n  };\n\n  const handleFolderContextMenu = (e, folderId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setContextMenu({\n      visible: true,\n      x: e.clientX,\n      y: e.clientY,\n      type: 'folder',\n      targetId: folderId\n    });\n  };\n\n  const handleFileContextMenu = (e, fileName) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setContextMenu({\n      visible: true,\n      x: e.clientX,\n      y: e.clientY,\n      type: 'file',\n      targetId: fileName\n    });\n  };\n\n  const handleClick = () => {\n    if (contextMenu.visible) {\n      setContextMenu({\n        visible: false,\n        x: 0,\n        y: 0,\n        type: 'desktop'\n      });\n    }\n  };\n\n  const handleFolderRename = (folderId, newName) => {\n    setFolderNames(prev => ({ ...prev,\n      [folderId]: newName\n    }));\n  };\n\n  const handleRename = () => {\n    if (contextMenu.targetId) {\n      setRenamingFolder(contextMenu.targetId);\n      setContextMenu(prev => ({ ...prev,\n        visible: false\n      }));\n    }\n  };\n\n  const createNewTextFile = () => {\n    const newFileId = `textfile-${nextFileId}`;\n    const defaultName = `New Text File ${nextFileId}.txt`;\n    const newTextFileShortcut = {\n      shortcutName: defaultName,\n      icon: 'textFileIcon',\n      onOpen: () => openTextFile(newFileId, defaultName)\n    };\n    setShortcuts(prev => [...prev, newTextFileShortcut]); // Set initial position for the new text file\n\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      [newFileId]: position\n    }));\n    setNextFileId(prev => prev + 1);\n    setContextMenu({\n      visible: false,\n      x: 0,\n      y: 0,\n      type: 'desktop'\n    });\n  };\n\n  const openTextFile = (fileId, fileName) => {\n    const highestZIndex = getHighestZIndex();\n\n    const textEditorWindow = /*#__PURE__*/_jsxDEV(TextEditor, {\n      fileName: fileName,\n      onInteract: () => onWindowInteract(fileId),\n      onMinimize: () => minimizeWindow(fileId),\n      onClose: () => removeWindow(fileId),\n      onRename: newName => handleTextFileRename(fileId, newName),\n      isRenaming: renamingFolder === fileId\n    }, fileId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      [fileId]: {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: textEditorWindow,\n        name: fileName,\n        icon: 'textFileIcon'\n      }\n    }));\n  };\n\n  const handleTextFileRename = (fileId, newName) => {\n    setShortcuts(prevShortcuts => prevShortcuts.map(shortcut => {\n      if (shortcut.shortcutName === fileId) {\n        return { ...shortcut,\n          shortcutName: newName\n        };\n      }\n\n      return shortcut;\n    }));\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n\n      if (newWindows[fileId]) {\n        newWindows[fileId].name = newName;\n      }\n\n      return newWindows;\n    });\n    setRenamingFolder(null);\n  };\n\n  const deleteFolder = folderId => {\n    const folderContents = folders[folderId];\n\n    if (folderContents) {\n      folderContents.forEach(item => addItemToFolder(\"Recycle Bin\", item));\n    }\n\n    addItemToFolder(\"Recycle Bin\", {\n      shortcutName: folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`,\n      icon: \"folderIcon\",\n      onOpen: openRecycleBin\n    });\n    setFolders(prev => {\n      const newFolders = { ...prev\n      };\n      delete newFolders[folderId];\n      return newFolders;\n    });\n    setFolderNames(prev => {\n      const newFolderNames = { ...prev\n      };\n      delete newFolderNames[folderId];\n      return newFolderNames;\n    });\n    setWindows(prev => {\n      const newWindows = { ...prev\n      };\n      delete newWindows[folderId];\n      return newWindows;\n    });\n    sessionStorage.removeItem(folderId);\n  };\n\n  const deleteFile = fileName => {\n    const file = shortcuts.find(shortcut => shortcut.shortcutName === fileName);\n\n    if (file) {\n      addItemToFolder(\"Recycle Bin\", file);\n    }\n\n    setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== fileName));\n    setWindows(prev => {\n      const newWindows = { ...prev\n      };\n      delete newWindows[fileName];\n      return newWindows;\n    });\n    sessionStorage.removeItem(fileName); // Remove from session storage\n  };\n\n  const initializeDocumentsFolder = () => {\n    const documentsShortcut = {\n      shortcutName: \"Documents\",\n      icon: \"documentsIcon\",\n      onOpen: openDocuments\n    };\n    setShortcuts(prevShortcuts => {\n      const existingDocumentsShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Documents\");\n\n      if (!existingDocumentsShortcut) {\n        return [...prevShortcuts, documentsShortcut];\n      }\n\n      return prevShortcuts;\n    });\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      \"Documents\": position\n    }));\n  };\n\n  const openDocuments = () => {\n    const highestZIndex = getHighestZIndex();\n\n    const docWindow = /*#__PURE__*/_jsxDEV(Documents, {\n      onInteract: () => onWindowInteract(\"Documents\"),\n      onMinimize: () => minimizeWindow(\"Documents\"),\n      onClose: () => removeWindow(\"Documents\"),\n      addWindow: addWindow,\n      getHighestZIndex: getHighestZIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      \"Documents\": {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: docWindow,\n        name: \"Documents\",\n        icon: 'documentsIcon'\n      }\n    }));\n  };\n\n  const openAppByName = appName => {\n    const appKey = Object.keys(APPLICATIONS).find(key => APPLICATIONS[key].name.toLowerCase() === appName.toLowerCase());\n\n    if (appKey) {\n      const app = APPLICATIONS[appKey];\n      addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n        onInteract: () => onWindowInteract(app.key),\n        onMinimize: () => minimizeWindow(app.key),\n        onClose: () => removeWindow(app.key)\n      }, app.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 17\n      }, this));\n    } else {\n      alert(`Application \"${appName}\" not found.`);\n    }\n  };\n\n  const initializeRecycleBin = () => {\n    const recycleBinShortcut = {\n      shortcutName: \"Recycle Bin\",\n      icon: \"recycleBinIcon\",\n      onOpen: openRecycleBin\n    };\n    setShortcuts(prevShortcuts => {\n      const existingRecycleBinShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Recycle Bin\");\n\n      if (!existingRecycleBinShortcut) {\n        return [...prevShortcuts, recycleBinShortcut];\n      }\n\n      return prevShortcuts;\n    });\n    setFolders(prev => ({ ...prev,\n      \"Recycle Bin\": []\n    }));\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      \"Recycle Bin\": position\n    }));\n  };\n\n  const openRecycleBin = () => {\n    const highestZIndex = getHighestZIndex();\n\n    const recycleBinWindow = /*#__PURE__*/_jsxDEV(RecycleBin, {\n      contents: folders[\"Recycle Bin\"] || [],\n      onInteract: () => onWindowInteract(\"Recycle Bin\"),\n      onMinimize: () => minimizeWindow(\"Recycle Bin\"),\n      onClose: () => removeWindow(\"Recycle Bin\"),\n      onAddItem: item => addItemToFolder(\"Recycle Bin\", item),\n      onRemoveItem: itemName => removeItemFromFolder(\"Recycle Bin\", itemName),\n      onRename: (itemName, newName) => handleTextFileRename(itemName, newName),\n      addWindow: addWindow,\n      getHighestZIndex: getHighestZIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      \"Recycle Bin\": {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: recycleBinWindow,\n        name: \"Recycle Bin\",\n        icon: folders[\"Recycle Bin\"] && folders[\"Recycle Bin\"].length > 0 ? 'recycleBinFullIcon' : 'recycleBinIcon'\n      }\n    }));\n  };\n\n  const emptyRecycleBin = () => {\n    setFolders(prev => ({ ...prev,\n      \"Recycle Bin\": []\n    }));\n  };\n\n  const arrangeIcons = () => {\n    const newPositions = {};\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    let index = 0;\n\n    const isPositionOccupied = (top, left) => {\n      return Object.values(newPositions).some(pos => pos.top === top && pos.left === left);\n    };\n\n    const getNextAvailablePosition = (startTop, startLeft) => {\n      let top = startTop;\n      let left = startLeft;\n\n      while (isPositionOccupied(top, left)) {\n        top += VERTICAL_SPACING;\n\n        if (top >= window.innerHeight - VERTICAL_SPACING) {\n          top = INITIAL_OFFSET.top;\n          left += HORIZONTAL_SPACING;\n        }\n      }\n\n      return {\n        top,\n        left\n      };\n    };\n\n    shortcuts.forEach(shortcut => {\n      if (shortcut.shortcutName !== \"Documents\" && shortcut.shortcutName !== \"Recycle Bin\") {\n        const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n        const initialPosition = {\n          top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n          left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n        };\n        const position = getNextAvailablePosition(initialPosition.top, initialPosition.left);\n        newPositions[shortcut.shortcutName] = position;\n        index++;\n      }\n    });\n    Object.keys(folders).forEach(folderId => {\n      const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n      const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n      const initialPosition = {\n        top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n        left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n      };\n      const position = getNextAvailablePosition(initialPosition.top, initialPosition.left);\n      newPositions[folderId] = position;\n      index++;\n    });\n    newPositions[\"Documents\"] = getNextAvailablePosition(window.innerHeight - VERTICAL_SPACING - 50, INITIAL_OFFSET.left);\n    newPositions[\"Recycle Bin\"] = getNextAvailablePosition(window.innerHeight - VERTICAL_SPACING - 50, INITIAL_OFFSET.left + HORIZONTAL_SPACING);\n    setPositions(newPositions);\n  };\n\n  useEffect(() => {\n    arrangeIcons();\n  }, [shortcuts, folders]);\n  return !shutdown ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.desktop,\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    onContextMenu: handleContextMenu,\n    onClick: handleClick,\n    children: [Object.keys(windows).map(key => {\n      const element = windows[key].component;\n      if (!element) return /*#__PURE__*/_jsxDEV(\"div\", {}, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1357,\n        columnNumber: 38\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: Object.assign({}, {\n          zIndex: windows[key].zIndex\n        }, windows[key].minimized && styles.minimized),\n        children: /*#__PURE__*/React.cloneElement(element, {\n          key,\n          onInteract: () => onWindowInteract(key),\n          onClose: () => removeWindow(key)\n        })\n      }, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.shortcuts,\n      children: [shortcuts.map((shortcut, i) => {\n        const position = positions[shortcut.shortcutName] || {\n          top: INITIAL_OFFSET.top + i % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING) * VERTICAL_SPACING,\n          left: INITIAL_OFFSET.left + Math.floor(i / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: Object.assign({}, styles.shortcutContainer, position),\n          draggable: true,\n          onDragStart: e => handleDragStart(e, shortcut.shortcutName),\n          onContextMenu: e => handleFileContextMenu(e, shortcut.shortcutName),\n          children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n            icon: shortcut.icon,\n            shortcutName: shortcut.shortcutName,\n            onOpen: shortcut.onOpen,\n            isRenaming: renamingFolder === shortcut.shortcutName,\n            onRename: newName => handleTextFileRename(shortcut.shortcutName, newName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1390,\n            columnNumber: 29\n          }, this)\n        }, shortcut.shortcutName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1383,\n          columnNumber: 25\n        }, this);\n      }), Object.keys(folders).map(folderId => {\n        if (folderId === \"Recycle Bin\") return null;\n        const folder = folders[folderId];\n        const folderName = folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`;\n        const position = positions[folderId] || {\n          top: INITIAL_OFFSET.top + (shortcuts.length + parseInt(folderId.split('-')[1]) - 1) % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING) * VERTICAL_SPACING,\n          left: INITIAL_OFFSET.left + Math.floor((shortcuts.length + parseInt(folderId.split('-')[1]) - 1) / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: Object.assign({}, styles.shortcutContainer, position),\n          draggable: true,\n          onDragStart: e => handleDragStart(e, folderId),\n          onContextMenu: e => handleFolderContextMenu(e, folderId),\n          onDrop: e => handleDropOnFolder(e, folderId),\n          onDragOver: handleDragOver,\n          children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n            icon: \"folderIcon\",\n            shortcutName: folderName,\n            onOpen: () => openFolder(folderId, folderName),\n            isRenaming: renamingFolder === folderId,\n            onRename: newName => {\n              handleFolderRename(folderId, newName);\n              setRenamingFolder(null);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1419,\n            columnNumber: 29\n          }, this)\n        }, folderId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1410,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: Object.assign({}, styles.shortcutContainer, positions[\"Recycle Bin\"]),\n        draggable: true,\n        onDragStart: e => handleDragStart(e, \"Recycle Bin\"),\n        onContextMenu: e => handleFileContextMenu(e, \"Recycle Bin\"),\n        children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n          icon: folders[\"Recycle Bin\"] && folders[\"Recycle Bin\"].length > 0 ? 'recycleBinFullIcon' : 'recycleBinIcon',\n          shortcutName: \"Recycle Bin\",\n          onOpen: openRecycleBin,\n          isRenaming: renamingFolder === \"Recycle Bin\",\n          onRename: newName => handleTextFileRename(\"Recycle Bin\", newName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1439,\n          columnNumber: 21\n        }, this)\n      }, \"Recycle Bin\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 1432,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1375,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      windows: windows,\n      toggleMinimize: toggleMinimize,\n      shutdown: startShutdown,\n      addWindow: addWindow,\n      updateBackground: updateBackground,\n      removeWindow: removeWindow,\n      openAppByName: openAppByName,\n      openDocuments: openDocuments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1448,\n      columnNumber: 13\n    }, this), contextMenu.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: { ...styles.contextMenu,\n        top: contextMenu.y,\n        left: contextMenu.x\n      },\n      children: contextMenu.type === 'desktop' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: createNewFolder,\n          children: \"New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: createNewTextFile,\n          children: \"New Text File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : contextMenu.type === 'folder' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: handleRename,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1471,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: () => deleteFolder(contextMenu.targetId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : contextMenu.type === 'file' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: handleRename,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: () => deleteFile(contextMenu.targetId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1483,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: handleRename,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: () => deleteFile(contextMenu.targetId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1492,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: emptyRecycleBin,\n          children: \"Empty Recycle Bin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1459,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1353,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(ShutdownSequence, {\n    setShutdown: setShutdown,\n    numShutdowns: numShutdowns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1504,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Desktop, \"T7LRb6a+JsFcDeHoxAFVMD8Vas0=\");\n\n_c = Desktop;\nconst styles = {\n  desktop: {\n    minHeight: '100%',\n    flex: 1,\n    position: 'relative'\n  },\n  shutdown: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: '#1d2e2f'\n  },\n  shortcutContainer: {\n    position: 'absolute',\n    cursor: 'move'\n  },\n  shortcuts: {\n    position: 'absolute',\n    top: 16,\n    left: 6\n  },\n  minimized: {\n    pointerEvents: 'none',\n    opacity: 0\n  },\n  contextMenu: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n    zIndex: 1000\n  },\n  contextMenuItem: {\n    padding: '8px 12px',\n    cursor: 'pointer'\n  }\n};\nexport default Desktop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Desktop\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/inner-web/src/components/os/Desktop.tsx"],"names":["React","useCallback","useEffect","useState","ShowcaseExplorer","Doom","OregonTrail","ShutdownSequence","Wordle","Toolbar","DesktopShortcut","Scrabble","Credits","InternetExplorer","Folder","RecycleBin","Settings","bg0","TextEditor","MSN","Run","Documents","GamesFolder","GamesText","Sudoku","Hangman","Game2048","TicTacToe","WhackAMole","Tetris","Maze","PaintApp","SnakeGame","MemoryGame","MSDOS","Calculator","Help","GRID_SIZE","VERTICAL_SPACING","HORIZONTAL_SPACING","INITIAL_OFFSET","top","left","WINDOW_OFFSET","TOOLBAR_HEIGHT","Desktop","props","windows","setWindows","shortcuts","setShortcuts","positions","setPositions","shutdown","setShutdown","numShutdowns","setNumShutdowns","folders","setFolders","nextFolderId","setNextFolderId","nextFileId","setNextFileId","folderContents","setFolderContents","contextMenu","setContextMenu","visible","x","y","type","background","setBackground","theme","setTheme","folderNames","setFolderNames","renamingFolder","setRenamingFolder","savedBg","localStorage","getItem","savedTheme","updateBackground","defaultBg","defaultTheme","setItem","bodyBG","document","getElementsByTagName","style","transition","backgroundColor","backgroundSize","backgroundPosition","backgroundRepeat","height","margin","console","log","backgroundImage","getHighestZIndex","highestZIndex","Object","keys","forEach","key","window","zIndex","openCreditsApp","addWindow","onWindowInteract","minimizeWindow","removeWindow","openMSNApp","openWordleApp","openGamesText","openTicTacToeApp","openWhackAMoleApp","open2048App","openTetrisApp","openMazeApp","openGamesFolder","openMSDOSApp","APPLICATIONS","showcase","name","shortcutIcon","component","wordle","trail","doom","scrabble","internetExplorer","credits","settings","gamesFolder","onInteract","onMinimize","onClose","gamesText","sudoku","hangman","game2048","ticTacToe","whackAMole","tetris","maze","paint","snake","memoryGame","msdos","calculator","run","openAppByName","help","rebootDesktop","newShortcuts","app","push","shortcutName","icon","onOpen","initializeDocumentsFolder","initializeRecycleBin","shortcut","index","column","Math","floor","innerHeight","row","position","round","prev","prevShortcuts","snapToGrid","prevPositions","newPositions","savedShortcuts","sessionStorage","savedFolders","savedPositions","savedFolderNames","savedNextFolderId","savedNextFileId","savedWindows","parsedShortcuts","JSON","parse","toLowerCase","stringify","setTimeout","prevWindows","newWindows","minimized","toggleMinimize","highestIndex","startShutdown","element","existingWindows","length","newZIndex","max","prevState","cloneElement","innerWidth","handleDragStart","e","dataTransfer","setData","handleDrop","getData","rect","currentTarget","getBoundingClientRect","clientY","clientX","newPosition","collision","values","some","pos","handleDropOnFolder","folderId","item","find","filter","addItemToFolder","handleDragOver","preventDefault","createNewFolder","newFolderId","defaultName","totalItems","openFolder","folderName","folderWindow","removeItemFromFolder","handleFolderRename","bringToFront","itemName","handleContextMenu","handleFolderContextMenu","stopPropagation","targetId","handleFileContextMenu","fileName","handleClick","newName","handleRename","createNewTextFile","newFileId","newTextFileShortcut","openTextFile","fileId","textEditorWindow","handleTextFileRename","map","deleteFolder","split","openRecycleBin","newFolders","newFolderNames","removeItem","deleteFile","file","documentsShortcut","openDocuments","existingDocumentsShortcut","docWindow","appName","appKey","alert","recycleBinShortcut","existingRecycleBinShortcut","recycleBinWindow","emptyRecycleBin","arrangeIcons","isPositionOccupied","getNextAvailablePosition","startTop","startLeft","initialPosition","styles","desktop","assign","i","shortcutContainer","folder","parseInt","contextMenuItem","minHeight","flex","cursor","pointerEvents","opacity","border","boxShadow","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AAEA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAAsD,mBAAtD;AACA,OAAOC,QAAP,MAAqB,0BAArB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAMA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,gBAAgB,GAAG,GAAzB;AACA,MAAMC,kBAAkB,GAAG,GAA3B;AACA,MAAMC,cAAc,GAAG;AAAEC,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAAvB;AACA,MAAMC,aAAa,GAAG,EAAtB;AACA,MAAMC,cAAc,GAAG,EAAvB;;AAUA,MAAMC,OAA+B,GAAIC,KAAD,IAAW;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB7C,QAAQ,CAAiB,EAAjB,CAAtC;AACA,QAAM,CAAC8C,SAAD,EAAYC,YAAZ,IAA4B/C,QAAQ,CAAyB,EAAzB,CAA1C;AACA,QAAM,CAACgD,SAAD,EAAYC,YAAZ,IAA4BjD,QAAQ,CAAmD,EAAnD,CAA1C;AACA,QAAM,CAACkD,QAAD,EAAWC,WAAX,IAA0BnD,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACoD,YAAD,EAAeC,eAAf,IAAkCrD,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACsD,OAAD,EAAUC,UAAV,IAAwBvD,QAAQ,CAA0C,EAA1C,CAAtC;AACA,QAAM,CAACwD,YAAD,EAAeC,eAAf,IAAkCzD,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC0D,UAAD,EAAaC,aAAb,IAA8B3D,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAC4D,cAAD,EAAiBC,iBAAjB,IAAsC7D,QAAQ,CAA4C,EAA5C,CAApD;AACA,QAAM,CAAC8D,WAAD,EAAcC,cAAd,IAAgC/D,QAAQ,CAAmB;AAC7DgE,IAAAA,OAAO,EAAE,KADoD;AAE7DC,IAAAA,CAAC,EAAE,CAF0D;AAG7DC,IAAAA,CAAC,EAAE,CAH0D;AAI7DC,IAAAA,IAAI,EAAE;AAJuD,GAAnB,CAA9C;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BrE,QAAQ,CAAgB,IAAhB,CAA5C;AACA,QAAM,CAACsE,KAAD,EAAQC,QAAR,IAAoBvE,QAAQ,CAAgB,IAAhB,CAAlC;AACA,QAAM,CAACwE,WAAD,EAAcC,cAAd,IAAgCzE,QAAQ,CAA0B,EAA1B,CAA9C;AACA,QAAM,CAAC0E,cAAD,EAAiBC,iBAAjB,IAAsC3E,QAAQ,CAAgB,IAAhB,CAApD,CAnB+C,CAqB/C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM6E,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAhB;AACA,UAAMC,UAAU,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnB;;AACA,QAAIF,OAAO,IAAIG,UAAf,EAA2B;AACvBC,MAAAA,gBAAgB,CAACJ,OAAD,EAAUG,UAAV,CAAhB;AACH,KAFD,MAEO;AACH,YAAME,SAAS,GAAGnE,GAAlB;AACA,YAAMoE,YAAY,GAAG,SAArB;AACAF,MAAAA,gBAAgB,CAACC,SAAD,EAAYC,YAAZ,CAAhB;AACAL,MAAAA,YAAY,CAACM,OAAb,CAAqB,YAArB,EAAmCF,SAAnC;AACAJ,MAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BD,YAA9B;AACH;AACJ,GAZQ,EAYN,EAZM,CAAT;AAcAnF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqF,MAAM,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAf;AACAF,IAAAA,MAAM,CAACG,KAAP,CAAaC,UAAb,GAA0B,8CAA1B;AACAJ,IAAAA,MAAM,CAACG,KAAP,CAAaE,eAAb,GAA+B,SAA/B;AACAL,IAAAA,MAAM,CAACG,KAAP,CAAaG,cAAb,GAA8B,OAA9B;AACAN,IAAAA,MAAM,CAACG,KAAP,CAAaI,kBAAb,GAAkC,QAAlC;AACAP,IAAAA,MAAM,CAACG,KAAP,CAAaK,gBAAb,GAAgC,WAAhC;AACAR,IAAAA,MAAM,CAACG,KAAP,CAAaM,MAAb,GAAsB,OAAtB;AACAT,IAAAA,MAAM,CAACG,KAAP,CAAaO,MAAb,GAAsB,GAAtB;AACH,GATQ,EASN,EATM,CAAT;AAWA,QAAMd,gBAAgB,GAAGlF,WAAW,CAAC,CAACsE,UAAD,EAAqBE,KAArB,KAAuC;AACxEyB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC;AAAE5B,MAAAA,UAAF;AAAcE,MAAAA;AAAd,KAApC;AACAD,IAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,UAAMc,MAAM,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAf;AACAF,IAAAA,MAAM,CAACG,KAAP,CAAaC,UAAb,GAA0B,8CAA1B;AACAJ,IAAAA,MAAM,CAACG,KAAP,CAAaE,eAAb,GAA+BnB,KAA/B;AACAc,IAAAA,MAAM,CAACG,KAAP,CAAaU,eAAb,GAAgC,OAAM7B,UAAW,GAAjD;AACAgB,IAAAA,MAAM,CAACG,KAAP,CAAaG,cAAb,GAA8B,OAA9B;AACAN,IAAAA,MAAM,CAACG,KAAP,CAAaI,kBAAb,GAAkC,QAAlC;AACAP,IAAAA,MAAM,CAACG,KAAP,CAAaK,gBAAb,GAAgC,WAAhC;AACAR,IAAAA,MAAM,CAACG,KAAP,CAAaM,MAAb,GAAsB,OAAtB;AACAT,IAAAA,MAAM,CAACG,KAAP,CAAaO,MAAb,GAAsB,GAAtB;AACH,GAbmC,EAajC,EAbiC,CAApC;AAeA,QAAMI,gBAAgB,GAAGpG,WAAW,CAAC,MAAc;AAC/C,QAAIqG,aAAa,GAAG,CAApB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYzD,OAAZ,EAAqB0D,OAArB,CAA8BC,GAAD,IAAS;AAClC,YAAMC,MAAM,GAAG5D,OAAO,CAAC2D,GAAD,CAAtB;;AACA,UAAIC,MAAJ,EAAY;AACR,YAAIA,MAAM,CAACC,MAAP,GAAgBN,aAApB,EACIA,aAAa,GAAGK,MAAM,CAACC,MAAvB;AACP;AACJ,KAND;AAOA,WAAON,aAAP;AACH,GAVmC,EAUjC,CAACvD,OAAD,CAViC,CAApC;;AAYA,QAAM8D,cAAc,GAAG,MAAM;AACzB,UAAMP,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,SADK,eAEL,QAAC,OAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,SAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,SAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,SAAD;AAH/B,OAIQ,SAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMZ,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,KADK,eAEL,QAAC,GAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,KAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,KAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD;AAH/B,OAIQ,KAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAME,aAAa,GAAG,MAAM;AACxB,UAAMb,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,QADK,eAEL,QAAC,MAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,QAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,QAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,QAAD;AAH/B,OAIQ,QAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMG,aAAa,GAAG,MAAM;AACxB,UAAMd,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,WADK,eAEL,QAAC,SAAD;AACI,MAAA,QAAQ,EAAC,YADb;AAEI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,WAAD,CAFtC;AAGI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,WAAD,CAHpC;AAII,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,WAAD;AAJ/B,OAKQ,WALR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AAUH,GAZD;;AAcA,QAAMI,gBAAgB,GAAG,MAAM;AAC3B,UAAMf,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,WADK,eAEL,QAAC,SAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,WAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,WAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,WAAD;AAH/B,OAIQ,WAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMK,iBAAiB,GAAG,MAAM;AAC5B,UAAMhB,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,YADK,eAEL,QAAC,UAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,YAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,YAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,YAAD;AAH/B,OAIQ,YAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMM,WAAW,GAAG,MAAM;AACtB,UAAMjB,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,MADK,eAEL,QAAC,QAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,MAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,MAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,MAAD;AAH/B,OAIQ,MAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMO,aAAa,GAAG,MAAM;AACxB,UAAMlB,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,QADK,eAEL,QAAC,MAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,QAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,QAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,QAAD;AAH/B,OAIQ,QAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMQ,WAAW,GAAG,MAAM;AACtB,UAAMnB,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,MADK,eAEL,QAAC,IAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,MAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,MAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,MAAD;AAH/B,OAIQ,MAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMS,eAAe,GAAG,MAAM;AAC1B,UAAMpB,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,aADK,eAEL,QAAC,WAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,aAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,aAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,aAAD,CAH/B;AAII,MAAA,aAAa,EAAEE,aAJnB;AAKI,MAAA,aAAa,EAAEC,aALnB;AAMI,MAAA,aAAa,EAAE,MAAM;AACjB,cAAMd,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,QAAAA,SAAS,CACL,QADK,eAEL,QAAC,MAAD;AACI,UAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,QAAD,CADtC;AAEI,UAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,QAAD,CAFpC;AAGI,UAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,QAAD;AAH/B,WAIQ,QAJR;AAAA;AAAA;AAAA;AAAA,gBAFK,CAAT;AASH,OAjBL;AAkBI,MAAA,cAAc,EAAE,MAAM;AAClB,cAAMX,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,QAAAA,SAAS,CACL,SADK,eAEL,QAAC,OAAD;AACI,UAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,SAAD,CADtC;AAEI,UAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,SAAD,CAFpC;AAGI,UAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,SAAD;AAH/B,WAIQ,SAJR;AAAA;AAAA;AAAA;AAAA,gBAFK,CAAT;AASH,OA7BL;AA8BI,MAAA,gBAAgB,EAAEI,gBA9BtB;AA+BI,MAAA,WAAW,EAAEE,WA/BjB;AAgCI,MAAA,iBAAiB,EAAED,iBAhCvB;AAiCI,MAAA,aAAa,EAAEE,aAjCnB;AAkCI,MAAA,WAAW,EAAEC,WAlCjB;AAmCI,MAAA,YAAY,EAAE,MAAM;AAChB,cAAMnB,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,QAAAA,SAAS,CACL,OADK,eAEL,QAAC,QAAD;AACI,UAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,OAAD,CADtC;AAEI,UAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,OAAD,CAFpC;AAGI,UAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,OAAD;AAH/B,WAIQ,OAJR;AAAA;AAAA;AAAA;AAAA,gBAFK,CAAT;AASH,OA9CL;AA+CI,MAAA,YAAY,EAAE,MAAM;AAChB,cAAMX,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,QAAAA,SAAS,CACL,OADK,eAEL,QAAC,SAAD;AACI,UAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,OAAD,CADtC;AAEI,UAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,OAAD,CAFpC;AAGI,UAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,OAAD;AAH/B,WAIQ,OAJR;AAAA;AAAA;AAAA;AAAA,gBAFK,CAAT;AASH,OA1DL;AA2DI,MAAA,iBAAiB,EAAE,MAAM;AACrB,cAAMX,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,QAAAA,SAAS,CACL,YADK,eAEL,QAAC,UAAD;AACI,UAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,YAAD,CADtC;AAEI,UAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,YAAD,CAFpC;AAGI,UAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,YAAD;AAH/B,WAIQ,YAJR;AAAA;AAAA;AAAA;AAAA,gBAFK,CAAT;AASH;AAtEL,OAuEQ,aAvER;AAAA;AAAA;AAAA;AAAA,YAFK,EA2ELX,aAAa,GAAG,CA3EX,CAAT;AA6EH,GA/ED;;AAiFA,QAAMqB,YAAY,GAAG,MAAM;AACvB,UAAMrB,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,OADK,eAEL,QAAC,KAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,OAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,OAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,OAAD;AAH/B,OAIQ,OAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMW,YAOL,GAAG;AACA;AACAC,IAAAA,QAAQ,EAAE;AACNnB,MAAAA,GAAG,EAAE,UADC;AAENoB,MAAAA,IAAI,EAAE,UAFA;AAGNC,MAAAA,YAAY,EAAE,cAHR;AAINC,MAAAA,SAAS,EAAE5H;AAJL,KAFV;AAQA6H,IAAAA,MAAM,EAAE;AACJvB,MAAAA,GAAG,EAAE,QADD;AAEJoB,MAAAA,IAAI,EAAE,QAFF;AAGJC,MAAAA,YAAY,EAAE,YAHV;AAIJC,MAAAA,SAAS,EAAExH;AAJP,KARR;AAcA0H,IAAAA,KAAK,EAAE;AACHxB,MAAAA,GAAG,EAAE,OADF;AAEHoB,MAAAA,IAAI,EAAE,kBAFH;AAGHC,MAAAA,YAAY,EAAE,WAHX;AAIHC,MAAAA,SAAS,EAAE1H;AAJR,KAdP;AAoBA6H,IAAAA,IAAI,EAAE;AACFzB,MAAAA,GAAG,EAAE,MADH;AAEFoB,MAAAA,IAAI,EAAE,MAFJ;AAGFC,MAAAA,YAAY,EAAE,UAHZ;AAIFC,MAAAA,SAAS,EAAE3H;AAJT,KApBN;AA0BA+H,IAAAA,QAAQ,EAAE;AACN1B,MAAAA,GAAG,EAAE,UADC;AAENoB,MAAAA,IAAI,EAAE,UAFA;AAGNC,MAAAA,YAAY,EAAE,cAHR;AAINC,MAAAA,SAAS,EAAErH;AAJL,KA1BV;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA0H,IAAAA,gBAAgB,EAAE;AACd3B,MAAAA,GAAG,EAAE,kBADS;AAEdoB,MAAAA,IAAI,EAAE,eAFQ;AAGdC,MAAAA,YAAY,EAAE,sBAHA;AAIdC,MAAAA,SAAS,EAAEnH;AAJG,KAtClB;AA4CAyH,IAAAA,OAAO,EAAE;AACL5B,MAAAA,GAAG,EAAE,SADA;AAELoB,MAAAA,IAAI,EAAE,SAFD;AAGLC,MAAAA,YAAY,EAAE,SAHT;AAILC,MAAAA,SAAS,EAAEpH;AAJN,KA5CT;AAkDA2H,IAAAA,QAAQ,EAAE;AACN7B,MAAAA,GAAG,EAAE,UADC;AAENoB,MAAAA,IAAI,EAAE,UAFA;AAGNC,MAAAA,YAAY,EAAE,SAHR;AAINC,MAAAA,SAAS,EAAEhH;AAJL,KAlDV;AAwDAwH,IAAAA,WAAW,EAAE;AACT9B,MAAAA,GAAG,EAAE,aADI;AAEToB,MAAAA,IAAI,EAAE,cAFG;AAGTC,MAAAA,YAAY,EAAE,YAHL;AAITC,MAAAA,SAAS,EAAGlF,KAAD,iBACP,QAAC,WAAD;AACI,QAAA,UAAU,EAAEA,KAAK,CAAC2F,UADtB;AAEI,QAAA,UAAU,EAAE3F,KAAK,CAAC4F,UAFtB;AAGI,QAAA,OAAO,EAAE5F,KAAK,CAAC6F,OAHnB;AAII,QAAA,aAAa,EAAExB,aAJnB;AAKI,QAAA,aAAa,EAAEC,aALnB;AAMI,QAAA,aAAa,EAAE,MAAM;AACjB,gBAAMd,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,UAAAA,SAAS,CACL,QADK,eAEL,QAAC,MAAD;AACI,YAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,QAAD,CADtC;AAEI,YAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,QAAD,CAFpC;AAGI,YAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,QAAD;AAH/B,aAIQ,QAJR;AAAA;AAAA;AAAA;AAAA,kBAFK,CAAT;AASH,SAjBL;AAkBI,QAAA,cAAc,EAAE,MAAM;AAClB,gBAAMX,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,UAAAA,SAAS,CACL,SADK,eAEL,QAAC,OAAD;AACI,YAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,SAAD,CADtC;AAEI,YAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,SAAD,CAFpC;AAGI,YAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,SAAD;AAH/B,aAIQ,SAJR;AAAA;AAAA;AAAA;AAAA,kBAFK,CAAT;AASH,SA7BL;AA8BI,QAAA,gBAAgB,EAAEI,gBA9BtB;AA+BI,QAAA,WAAW,EAAEE,WA/BjB;AAgCI,QAAA,iBAAiB,EAAED,iBAhCvB;AAiCI,QAAA,aAAa,EAAEE,aAjCnB;AAkCI,QAAA,WAAW,EAAEC,WAlCjB;AAmCI,QAAA,YAAY,EAAE,MAAM;AAChB,gBAAMnB,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,UAAAA,SAAS,CACL,OADK,eAEL,QAAC,QAAD;AACI,YAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,OAAD,CADtC;AAEI,YAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,OAAD,CAFpC;AAGI,YAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,OAAD;AAH/B,aAIQ,OAJR;AAAA;AAAA;AAAA;AAAA,kBAFK,CAAT;AASH,SA9CL;AA+CI,QAAA,YAAY,EAAE,MAAM;AAChB,gBAAMX,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,UAAAA,SAAS,CACL,OADK,eAEL,QAAC,SAAD;AACI,YAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,OAAD,CADtC;AAEI,YAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,OAAD,CAFpC;AAGI,YAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,OAAD;AAH/B,aAIQ,OAJR;AAAA;AAAA;AAAA;AAAA,kBAFK,CAAT;AASH,SA1DL;AA2DI,QAAA,iBAAiB,EAAE,MAAM;AACrB,gBAAMX,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,UAAAA,SAAS,CACL,YADK,eAEL,QAAC,UAAD;AACI,YAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,YAAD,CADtC;AAEI,YAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,YAAD,CAFpC;AAGI,YAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,YAAD;AAH/B,aAIQ,YAJR;AAAA;AAAA;AAAA;AAAA,kBAFK,CAAT;AASH;AAtEL;AAAA;AAAA;AAAA;AAAA;AALK,KAxDb;AAuIA2B,IAAAA,SAAS,EAAE;AACPlC,MAAAA,GAAG,EAAE,WADE;AAEPoB,MAAAA,IAAI,EAAE,YAFC;AAGPC,MAAAA,YAAY,EAAE,cAHP;AAIPC,MAAAA,SAAS,EAAEzG;AAJJ,KAvIX;AA6IAsH,IAAAA,MAAM,EAAE;AACJnC,MAAAA,GAAG,EAAE,QADD;AAEJoB,MAAAA,IAAI,EAAE,QAFF;AAGJC,MAAAA,YAAY,EAAE,YAHV;AAIJC,MAAAA,SAAS,EAAExG;AAJP,KA7IR;AAmJAsH,IAAAA,OAAO,EAAE;AACLpC,MAAAA,GAAG,EAAE,SADA;AAELoB,MAAAA,IAAI,EAAE,SAFD;AAGLC,MAAAA,YAAY,EAAE,YAHT;AAILC,MAAAA,SAAS,EAAEvG;AAJN,KAnJT;AAyJAsH,IAAAA,QAAQ,EAAE;AACNrC,MAAAA,GAAG,EAAE,UADC;AAENoB,MAAAA,IAAI,EAAE,MAFA;AAGNC,MAAAA,YAAY,EAAE,YAHR;AAINC,MAAAA,SAAS,EAAEtG;AAJL,KAzJV;AA+JAsH,IAAAA,SAAS,EAAE;AACPtC,MAAAA,GAAG,EAAE,WADE;AAEPoB,MAAAA,IAAI,EAAE,aAFC;AAGPC,MAAAA,YAAY,EAAE,eAHP;AAIPC,MAAAA,SAAS,EAAErG;AAJJ,KA/JX;AAqKAsH,IAAAA,UAAU,EAAE;AACRvC,MAAAA,GAAG,EAAE,YADG;AAERoB,MAAAA,IAAI,EAAE,cAFE;AAGRC,MAAAA,YAAY,EAAE,WAHN;AAIRC,MAAAA,SAAS,EAAEpG;AAJH,KArKZ;AA2KAsH,IAAAA,MAAM,EAAE;AACJxC,MAAAA,GAAG,EAAE,QADD;AAEJoB,MAAAA,IAAI,EAAE,QAFF;AAGJC,MAAAA,YAAY,EAAE,YAHV;AAIJC,MAAAA,SAAS,EAAEnG;AAJP,KA3KR;AAiLAsH,IAAAA,IAAI,EAAE;AACFzC,MAAAA,GAAG,EAAE,MADH;AAEFoB,MAAAA,IAAI,EAAE,MAFJ;AAGFC,MAAAA,YAAY,EAAE,YAHZ;AAIFC,MAAAA,SAAS,EAAElG;AAJT,KAjLN;AAuLAsH,IAAAA,KAAK,EAAE;AACH1C,MAAAA,GAAG,EAAE,OADF;AAEHoB,MAAAA,IAAI,EAAE,OAFH;AAGHC,MAAAA,YAAY,EAAE,WAHX;AAIHC,MAAAA,SAAS,EAAEjG;AAJR,KAvLP;AA6LAsH,IAAAA,KAAK,EAAE;AACH3C,MAAAA,GAAG,EAAE,OADF;AAEHoB,MAAAA,IAAI,EAAE,OAFH;AAGHC,MAAAA,YAAY,EAAE,YAHX;AAIHC,MAAAA,SAAS,EAAEhG;AAJR,KA7LP;AAmMAsH,IAAAA,UAAU,EAAE;AACR5C,MAAAA,GAAG,EAAE,YADG;AAERoB,MAAAA,IAAI,EAAE,aAFE;AAGRC,MAAAA,YAAY,EAAE,YAHN;AAIRC,MAAAA,SAAS,EAAE/F;AAJH,KAnMZ;AAyMAsH,IAAAA,KAAK,EAAE;AACH7C,MAAAA,GAAG,EAAE,OADF;AAEHoB,MAAAA,IAAI,EAAE,QAFH;AAGHC,MAAAA,YAAY,EAAE,YAHX;AAIHC,MAAAA,SAAS,EAAE9F;AAJR,KAzMP;AA+MAsH,IAAAA,UAAU,EAAE;AACR9C,MAAAA,GAAG,EAAE,YADG;AAERoB,MAAAA,IAAI,EAAE,YAFE;AAGRC,MAAAA,YAAY,EAAE,gBAHN;AAIRC,MAAAA,SAAS,EAAE7F;AAJH,KA/MZ;AAqNAsH,IAAAA,GAAG,EAAE;AACD/C,MAAAA,GAAG,EAAE,KADJ;AAEDoB,MAAAA,IAAI,EAAE,KAFL;AAGDC,MAAAA,YAAY,EAAE,SAHb;AAIDC,MAAAA,SAAS,EAAGlF,KAAD,iBACP,QAAC,GAAD;AACI,QAAA,UAAU,EAAEA,KAAK,CAAC2F,UADtB;AAEI,QAAA,UAAU,EAAE3F,KAAK,CAAC4F,UAFtB;AAGI,QAAA,OAAO,EAAE5F,KAAK,CAAC6F,OAHnB;AAII,QAAA,aAAa,EAAEe;AAJnB;AAAA;AAAA;AAAA;AAAA;AALH,KArNL;AAkOA;AACI;AACD;AACC;AACD;AACJ;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,IAAI,EAAE;AACFjD,MAAAA,GAAG,EAAE,MADH;AAEFoB,MAAAA,IAAI,EAAE,MAFJ;AAGFC,MAAAA,YAAY,EAAE,UAHZ;AAIFC,MAAAA,SAAS,EAAE5F;AAJT;AAhQN,GAPJ;AA+QAlC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAImD,QAAQ,KAAK,IAAjB,EAAuB;AACnBuG,MAAAA,aAAa;AAChB,KAHW,CAIZ;;AACH,GALQ,EAKN,CAACvG,QAAD,CALM,CAAT;AAOAnD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM2J,YAAoC,GAAG,EAA7C;AACAtD,IAAAA,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BnB,OAA1B,CAAmCC,GAAD,IAAS;AACvC,YAAMoD,GAAG,GAAGlC,YAAY,CAAClB,GAAD,CAAxB;;AACA,UAAIA,GAAG,KAAK,SAAR,IAAqBA,GAAG,KAAK,UAA7B,IAA2CA,GAAG,KAAK,QAAnD,IAA+DA,GAAG,KAAK,KAAvE,IAAgFA,GAAG,KAAK,aAAxF,IAAyGA,GAAG,KAAK,WAAjH,IAAgIA,GAAG,KAAK,QAAxI,IAAoJA,GAAG,KAAK,QAA5J,IAAwKA,GAAG,KAAK,SAAhL,IAA6LA,GAAG,KAAK,UAArM,IAAmNA,GAAG,KAAK,WAA3N,IAA0OA,GAAG,KAAK,QAAlP,IAA8PA,GAAG,KAAK,YAAtQ,IAAsRA,GAAG,KAAK,MAA9R,IAAwSA,GAAG,KAAK,OAAhT,IAA2TA,GAAG,KAAK,OAAnU,IAA8UA,GAAG,KAAK,YAAtV,IAAsWA,GAAG,KAAK,OAA9W,IAAyXA,GAAG,KAAK,YAAjY,IAAiZA,GAAG,KAAK,KAAzZ,IAAkaA,GAAG,KAAK,MAA9a,EAAsb;AAClbmD,QAAAA,YAAY,CAACE,IAAb,CAAkB;AACdC,UAAAA,YAAY,EAAEF,GAAG,CAAChC,IADJ;AAEdmC,UAAAA,IAAI,EAAEH,GAAG,CAAC/B,YAFI;AAGdmC,UAAAA,MAAM,EAAE,MAAM;AACVpD,YAAAA,SAAS,CACLgD,GAAG,CAACpD,GADC,eAEL,QAAC,GAAD,CAAK,SAAL;AACI,cAAA,UAAU,EAAE,MAAMK,gBAAgB,CAAC+C,GAAG,CAACpD,GAAL,CADtC;AAEI,cAAA,UAAU,EAAE,MAAMM,cAAc,CAAC8C,GAAG,CAACpD,GAAL,CAFpC;AAGI,cAAA,OAAO,EAAE,MAAMO,YAAY,CAAC6C,GAAG,CAACpD,GAAL;AAH/B,eAISoD,GAAG,CAACpD,GAJb;AAAA;AAAA;AAAA;AAAA,oBAFK,CAAT;AASH;AAba,SAAlB;AAeH;AACJ,KAnBD;AAqBAyD,IAAAA,yBAAyB;AACzBC,IAAAA,oBAAoB;AAEpBP,IAAAA,YAAY,CAACpD,OAAb,CAAqB,CAAC4D,QAAD,EAAWC,KAAX,KAAqB;AACtC,YAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB9H,cAAtB,IAAwCN,gBAAnD,CAAnB,CAAf;AACA,YAAMqI,GAAG,GAAGL,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB9H,cAAtB,IAAwCN,gBAAnD,CAApB;AACA,YAAMsI,QAAQ,GAAG;AACbnI,QAAAA,GAAG,EAAE+H,IAAI,CAACK,KAAL,CAAW,CAACrI,cAAc,CAACC,GAAf,GAAsBkI,GAAG,GAAGrI,gBAA7B,IAAkDD,SAA7D,IAA0EA,SADlE;AAEbK,QAAAA,IAAI,EAAE8H,IAAI,CAACK,KAAL,CAAW,CAACrI,cAAc,CAACE,IAAf,GAAuB6H,MAAM,GAAGhI,kBAAjC,IAAwDF,SAAnE,IAAgFA;AAFzE,OAAjB;AAIAe,MAAAA,YAAY,CAAC0H,IAAI,KAAK,EAClB,GAAGA,IADe;AAElB,SAACT,QAAQ,CAACL,YAAV,GAAyBY;AAFP,OAAL,CAAL,CAAZ;;AAIA,UAAIP,QAAQ,CAACL,YAAT,KAA0B,UAA9B,EAA0C;AACtCK,QAAAA,QAAQ,CAACH,MAAT;AACH;AACJ,KAdD;AAgBAhH,IAAAA,YAAY,CAAC6H,aAAa,IAAI,CAAC,GAAGA,aAAJ,EAAmB,GAAGlB,YAAtB,CAAlB,CAAZ,CA1CY,CA2CZ;AACH,GA5CQ,EA4CN,EA5CM,CAAT;AA8CA3J,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM8K,UAAU,GAAG,MAAM;AACrB5H,MAAAA,YAAY,CAAE6H,aAAD,IAAmB;AAC5B,cAAMC,YAAY,GAAG,EAAE,GAAGD;AAAL,SAArB;AACA1E,QAAAA,MAAM,CAACC,IAAP,CAAY0E,YAAZ,EAA0BzE,OAA1B,CAAmCC,GAAD,IAAS;AACvCwE,UAAAA,YAAY,CAACxE,GAAD,CAAZ,CAAkBjE,GAAlB,GAAwB+H,IAAI,CAACK,KAAL,CAAWK,YAAY,CAACxE,GAAD,CAAZ,CAAkBjE,GAAlB,GAAwBJ,SAAnC,IAAgDA,SAAxE;AACA6I,UAAAA,YAAY,CAACxE,GAAD,CAAZ,CAAkBhE,IAAlB,GAAyB8H,IAAI,CAACK,KAAL,CAAWK,YAAY,CAACxE,GAAD,CAAZ,CAAkBhE,IAAlB,GAAyBL,SAApC,IAAiDA,SAA1E;AACH,SAHD;AAIA,eAAO6I,YAAP;AACH,OAPW,CAAZ;AAQH,KATD;;AAWAF,IAAAA,UAAU;AACb,GAbQ,EAaN,EAbM,CAAT;AAeA9K,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMiL,cAAc,GAAGC,cAAc,CAACnG,OAAf,CAAuB,WAAvB,CAAvB;AACA,UAAMoG,YAAY,GAAGD,cAAc,CAACnG,OAAf,CAAuB,SAAvB,CAArB;AACA,UAAMqG,cAAc,GAAGF,cAAc,CAACnG,OAAf,CAAuB,WAAvB,CAAvB;AACA,UAAMsG,gBAAgB,GAAGH,cAAc,CAACnG,OAAf,CAAuB,aAAvB,CAAzB;AACA,UAAMuG,iBAAiB,GAAGJ,cAAc,CAACnG,OAAf,CAAuB,cAAvB,CAA1B;AACA,UAAMwG,eAAe,GAAGL,cAAc,CAACnG,OAAf,CAAuB,YAAvB,CAAxB;AACA,UAAMyG,YAAY,GAAGN,cAAc,CAACnG,OAAf,CAAuB,SAAvB,CAArB;;AAEA,QAAIkG,cAAJ,EAAoB;AAChB,YAAMQ,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWV,cAAX,CAAxB;AACAQ,MAAAA,eAAe,CAAClF,OAAhB,CAAyB4D,QAAD,IAAoC;AACxDA,QAAAA,QAAQ,CAACH,MAAT,GAAkB,MAAM;AACpB,gBAAMJ,GAAG,GAAGlC,YAAY,CAACyC,QAAQ,CAACL,YAAT,CAAsB8B,WAAtB,EAAD,CAAxB;;AACA,cAAIhC,GAAJ,EAAS;AACLhD,YAAAA,SAAS,CACLgD,GAAG,CAACpD,GADC,eAEL,QAAC,GAAD,CAAK,SAAL;AACI,cAAA,UAAU,EAAE,MAAMK,gBAAgB,CAAC+C,GAAG,CAACpD,GAAL,CADtC;AAEI,cAAA,UAAU,EAAE,MAAMM,cAAc,CAAC8C,GAAG,CAACpD,GAAL,CAFpC;AAGI,cAAA,OAAO,EAAE,MAAMO,YAAY,CAAC6C,GAAG,CAACpD,GAAL;AAH/B,eAISoD,GAAG,CAACpD,GAJb;AAAA;AAAA;AAAA;AAAA,oBAFK,CAAT;AASH;AACJ,SAbD;AAcH,OAfD;AAgBAxD,MAAAA,YAAY,CAACyI,eAAD,CAAZ;AACH;;AACD,QAAIN,YAAJ,EAAkB;AACd3H,MAAAA,UAAU,CAACkI,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAD,CAAV;AACH;;AACD,QAAIC,cAAJ,EAAoB;AAChBlI,MAAAA,YAAY,CAACwI,IAAI,CAACC,KAAL,CAAWP,cAAX,CAAD,CAAZ;AACH;;AACD,QAAIC,gBAAJ,EAAsB;AAClB3G,MAAAA,cAAc,CAACgH,IAAI,CAACC,KAAL,CAAWN,gBAAX,CAAD,CAAd;AACH;;AACD,QAAIC,iBAAJ,EAAuB;AACnB5H,MAAAA,eAAe,CAACgI,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAD,CAAf;AACH;;AACD,QAAIC,eAAJ,EAAqB;AACjB3H,MAAAA,aAAa,CAAC8H,IAAI,CAACC,KAAL,CAAWJ,eAAX,CAAD,CAAb;AACH;;AACD,QAAIC,YAAJ,EAAkB;AACd1I,MAAAA,UAAU,CAAC4I,IAAI,CAACC,KAAL,CAAWH,YAAX,CAAD,CAAV;AACH;AACJ,GAhDQ,EAgDN,EAhDM,CAAT;AAkDAxL,EAAAA,SAAS,CAAC,MAAM;AAEZkL,IAAAA,cAAc,CAAC9F,OAAf,CAAuB,WAAvB,EAAoCsG,IAAI,CAACG,SAAL,CAAe9I,SAAf,CAApC;AACAmI,IAAAA,cAAc,CAAC9F,OAAf,CAAuB,SAAvB,EAAkCsG,IAAI,CAACG,SAAL,CAAetI,OAAf,CAAlC;AACA2H,IAAAA,cAAc,CAAC9F,OAAf,CAAuB,WAAvB,EAAoCsG,IAAI,CAACG,SAAL,CAAe5I,SAAf,CAApC;AACAiI,IAAAA,cAAc,CAAC9F,OAAf,CAAuB,aAAvB,EAAsCsG,IAAI,CAACG,SAAL,CAAepH,WAAf,CAAtC;AACAyG,IAAAA,cAAc,CAAC9F,OAAf,CAAuB,cAAvB,EAAuCsG,IAAI,CAACG,SAAL,CAAepI,YAAf,CAAvC;AACAyH,IAAAA,cAAc,CAAC9F,OAAf,CAAuB,YAAvB,EAAqCsG,IAAI,CAACG,SAAL,CAAelI,UAAf,CAArC;AACAuH,IAAAA,cAAc,CAAC9F,OAAf,CAAuB,SAAvB,EAAkCsG,IAAI,CAACG,SAAL,CAAehJ,OAAf,CAAlC;AACH,GATQ,EASN,CAACE,SAAD,EAAYQ,OAAZ,EAAqBN,SAArB,EAAgCwB,WAAhC,EAA6ChB,YAA7C,EAA2DE,UAA3D,EAAuEd,OAAvE,CATM,CAAT;AAWA,QAAM6G,aAAa,GAAG3J,WAAW,CAAC,MAAM;AACpC+C,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAFgC,EAE9B,EAF8B,CAAjC;AAIA,QAAMiE,YAAY,GAAGhH,WAAW,CAAEyG,GAAD,IAAiB;AAC9C;AACAsF,IAAAA,UAAU,CAAC,MAAM;AACbhJ,MAAAA,UAAU,CAAEiJ,WAAD,IAAiB;AACxB,cAAMC,UAAU,GAAG,EAAE,GAAGD;AAAL,SAAnB;AACA,eAAOC,UAAU,CAACxF,GAAD,CAAjB;AACA,eAAOwF,UAAP;AACH,OAJS,CAAV;AAKH,KANS,EAMP,GANO,CAAV;AAOH,GAT+B,EAS7B,EAT6B,CAAhC;AAWA,QAAMlF,cAAc,GAAG/G,WAAW,CAAEyG,GAAD,IAAiB;AAChD1D,IAAAA,UAAU,CAAEiJ,WAAD,IAAiB;AACxB,YAAMC,UAAU,GAAG,EAAE,GAAGD;AAAL,OAAnB;AACAC,MAAAA,UAAU,CAACxF,GAAD,CAAV,CAAgByF,SAAhB,GAA4B,IAA5B;AACA,aAAOD,UAAP;AACH,KAJS,CAAV;AAKH,GANiC,EAM/B,EAN+B,CAAlC;AAQA,QAAME,cAAc,GAAGnM,WAAW,CAC7ByG,GAAD,IAAiB;AACb,UAAMwF,UAAU,GAAG,EAAE,GAAGnJ;AAAL,KAAnB;AACA,UAAMsJ,YAAY,GAAGhG,gBAAgB,EAArC;;AACA,QACI6F,UAAU,CAACxF,GAAD,CAAV,CAAgByF,SAAhB,IACAD,UAAU,CAACxF,GAAD,CAAV,CAAgBE,MAAhB,KAA2ByF,YAF/B,EAGE;AACEH,MAAAA,UAAU,CAACxF,GAAD,CAAV,CAAgByF,SAAhB,GAA4B,CAACD,UAAU,CAACxF,GAAD,CAAV,CAAgByF,SAA7C;AACH;;AACDD,IAAAA,UAAU,CAACxF,GAAD,CAAV,CAAgBE,MAAhB,GAAyBP,gBAAgB,KAAK,CAA9C;AACArD,IAAAA,UAAU,CAACkJ,UAAD,CAAV;AACH,GAZ6B,EAa9B,CAACnJ,OAAD,EAAUsD,gBAAV,CAb8B,CAAlC;AAgBA,QAAMU,gBAAgB,GAAG9G,WAAW,CAC/ByG,GAAD,IAAiB;AACb1D,IAAAA,UAAU,CAAEiJ,WAAD,IAAiB;AACxB,YAAMC,UAAU,GAAG,EAAE,GAAGD;AAAL,OAAnB;AACA,YAAM3F,aAAa,GAAGD,gBAAgB,EAAtC;AACA6F,MAAAA,UAAU,CAACxF,GAAD,CAAV,CAAgBE,MAAhB,GAAyBN,aAAa,GAAG,CAAzC;AACA,aAAO4F,UAAP;AACH,KALS,CAAV;AAMH,GAR+B,EAShC,CAAC7F,gBAAD,CATgC,CAApC;AAYA,QAAMiG,aAAa,GAAGrM,WAAW,CAAC,MAAM;AACpC+L,IAAAA,UAAU,CAAC,MAAM;AACb1I,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACH,KAHS,EAGP,GAHO,CAAV;AAIH,GALgC,EAK9B,CAACA,YAAD,CAL8B,CAAjC;AAOA,QAAMuD,SAAS,GAAG7G,WAAW,CACzB,CAACyG,GAAD,EAAc6F,OAAd,EAAoC3F,MAApC,KAAwD;AACpD,UAAMN,aAAa,GAAGD,gBAAgB,EAAtC;AACA,UAAMmG,eAAe,GAAGjG,MAAM,CAACC,IAAP,CAAYzD,OAAZ,EAAqB0J,MAA7C;AACA,UAAMhK,GAAG,GAAGD,cAAc,CAACC,GAAf,GAAsB+J,eAAe,GAAG7J,aAApD;AACA,UAAMD,IAAI,GAAGF,cAAc,CAACE,IAAf,GAAuB8J,eAAe,GAAG7J,aAAtD,CAJoD,CAMpD;;AACA,UAAM+J,SAAS,GAAGlC,IAAI,CAACmC,GAAL,CAAS/F,MAAM,IAAI,CAAnB,EAAsBN,aAAa,GAAG,CAAtC,CAAlB;AAEAtD,IAAAA,UAAU,CAAE4J,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvB,OAAClG,GAAD,GAAO;AACHE,QAAAA,MAAM,EAAE8F,SADL;AAEHP,QAAAA,SAAS,EAAE,KAFR;AAGHnE,QAAAA,SAAS,eAAEhI,KAAK,CAAC6M,YAAN,CAAmBN,OAAnB,EAA4B;AAAEpH,UAAAA;AAAF,SAA5B,CAHR;AAIH2C,QAAAA,IAAI,EAAEF,YAAY,CAAClB,GAAD,CAAZ,CAAkBoB,IAJrB;AAKHmC,QAAAA,IAAI,EAAErC,YAAY,CAAClB,GAAD,CAAZ,CAAkBqB,YALrB;AAMHtF,QAAAA,GAAG,EAAEA,GAAG,GAAGkE,MAAM,CAAC+D,WANf;AAOHhI,QAAAA,IAAI,EAAEA,IAAI,GAAGiE,MAAM,CAACmG;AAPjB;AAFgB,KAAhB,CAAD,CAAV;AAYA/F,IAAAA,gBAAgB,CAACL,GAAD,CAAhB;AACH,GAvBwB,EAwBzB,CAACL,gBAAD,EAAmBlB,gBAAnB,EAAqCpC,OAArC,CAxByB,CAA7B;;AA2BA,QAAMgK,eAAe,GAAG,CAACC,CAAD,EAAqCtG,GAArC,KAAqD;AACzEsG,IAAAA,CAAC,CAACC,YAAF,CAAeC,OAAf,CAAuB,YAAvB,EAAqCxG,GAArC;AACH,GAFD;;AAIA,QAAMyG,UAAU,GAAIH,CAAD,IAAwC;AACvD,UAAMtG,GAAG,GAAGsG,CAAC,CAACC,YAAF,CAAeG,OAAf,CAAuB,YAAvB,CAAZ;AACA,UAAMC,IAAI,GAAGL,CAAC,CAACM,aAAF,CAAgBC,qBAAhB,EAAb;AACA,QAAI9K,GAAG,GAAGuK,CAAC,CAACQ,OAAF,GAAYH,IAAI,CAAC5K,GAA3B;AACA,QAAIC,IAAI,GAAGsK,CAAC,CAACS,OAAF,GAAYJ,IAAI,CAAC3K,IAA5B,CAJuD,CAMvD;;AACAD,IAAAA,GAAG,GAAG+H,IAAI,CAACK,KAAL,CAAWpI,GAAG,GAAGJ,SAAjB,IAA8BA,SAApC;AACAK,IAAAA,IAAI,GAAG8H,IAAI,CAACK,KAAL,CAAWnI,IAAI,GAAGL,SAAlB,IAA+BA,SAAtC;;AAEA,QAAII,GAAG,GAAGkE,MAAM,CAAC+D,WAAP,GAAqB9H,cAArB,GAAsCP,SAAhD,EAA2D;AACvDI,MAAAA,GAAG,GAAGkE,MAAM,CAAC+D,WAAP,GAAqB9H,cAArB,GAAsCP,SAA5C;AACH,KAZsD,CAcvD;;;AACA,UAAMqL,WAAW,GAAG;AAAEjL,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAApB;AACA,QAAIiL,SAAS,GAAGpH,MAAM,CAACqH,MAAP,CAAczK,SAAd,EAAyB0K,IAAzB,CACXC,GAAD,IAASA,GAAG,CAACrL,GAAJ,KAAYiL,WAAW,CAACjL,GAAxB,IAA+BqL,GAAG,CAACpL,IAAJ,KAAagL,WAAW,CAAChL,IADrD,CAAhB;;AAIA,WAAOiL,SAAP,EAAkB;AACdD,MAAAA,WAAW,CAACjL,GAAZ,IAAmBJ,SAAnB;;AACA,UAAIqL,WAAW,CAACjL,GAAZ,GAAkBkE,MAAM,CAAC+D,WAAP,GAAqB9H,cAArB,GAAsCP,SAA5D,EAAuE;AACnEqL,QAAAA,WAAW,CAACjL,GAAZ,GAAkBD,cAAc,CAACC,GAAjC;AACAiL,QAAAA,WAAW,CAAChL,IAAZ,IAAoBL,SAApB;AACH;;AACDsL,MAAAA,SAAS,GAAGpH,MAAM,CAACqH,MAAP,CAAczK,SAAd,EAAyB0K,IAAzB,CACPC,GAAD,IAASA,GAAG,CAACrL,GAAJ,KAAYiL,WAAW,CAACjL,GAAxB,IAA+BqL,GAAG,CAACpL,IAAJ,KAAagL,WAAW,CAAChL,IADzD,CAAZ;AAGH;;AAEDU,IAAAA,YAAY,CAAE6H,aAAD,KAAoB,EAC7B,GAAGA,aAD0B;AAE7B,OAACvE,GAAD,GAAOgH;AAFsB,KAApB,CAAD,CAAZ;AAIH,GAnCD;;AAqCA,QAAMK,kBAAkB,GAAG,CAACf,CAAD,EAAqCgB,QAArC,KAA0D;AACjF,UAAMtH,GAAG,GAAGsG,CAAC,CAACC,YAAF,CAAeG,OAAf,CAAuB,YAAvB,CAAZ;AACA,UAAMa,IAAI,GAAGhL,SAAS,CAACiL,IAAV,CAAe7D,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0BtD,GAArD,CAAb;;AACA,QAAIuH,IAAJ,EAAU;AACN/K,MAAAA,YAAY,CAAC4H,IAAI,IAAIA,IAAI,CAACqD,MAAL,CAAY9D,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0BtD,GAAlD,CAAT,CAAZ;AACA0H,MAAAA,eAAe,CAACJ,QAAD,EAAWC,IAAX,CAAf;AACH;AACJ,GAPD;;AASA,QAAMI,cAAc,GAAIrB,CAAD,IAAwC;AAC3DA,IAAAA,CAAC,CAACsB,cAAF;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMC,WAAW,GAAI,UAAS7K,YAAa,EAA3C;AACA,UAAM8K,WAAW,GAAI,cAAa9K,YAAa,EAA/C;AAEAD,IAAAA,UAAU,CAACoH,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,OAAC0D,WAAD,GAAe;AAFC,KAAL,CAAL,CAAV;AAKA5J,IAAAA,cAAc,CAACkG,IAAI,KAAK,EACpB,GAAGA,IADiB;AAEpB,OAAC0D,WAAD,GAAeC;AAFK,KAAL,CAAL,CAAd,CAT0B,CAc1B;;AACA,UAAMC,UAAU,GAAGzL,SAAS,CAACwJ,MAAV,GAAmBlG,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBgJ,MAA3D;AACA,UAAMlC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWiE,UAAU,GAAGlE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAxB,CAAf;AACA,UAAMqI,GAAG,GAAG+D,UAAU,GAAGlE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAzB;AAEA,UAAMsI,QAAQ,GAAG;AACbnI,MAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsBkI,GAAG,GAAGrI,gBADpB;AAEbI,MAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuB6H,MAAM,GAAGhI;AAFzB,KAAjB;AAKAa,IAAAA,YAAY,CAAC0H,IAAI,KAAK,EAClB,GAAGA,IADe;AAElB,OAAC0D,WAAD,GAAe5D;AAFG,KAAL,CAAL,CAAZ;AAKAhH,IAAAA,eAAe,CAACkH,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAf;AACA5G,IAAAA,cAAc,CAAC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,CAAC,EAAE,CAArB;AAAwBC,MAAAA,CAAC,EAAE,CAA3B;AAA8BC,MAAAA,IAAI,EAAE;AAApC,KAAD,CAAd;AACH,GA/BD;;AAiCA,QAAMqK,UAAU,GAAG,CAACX,QAAD,EAAmBY,UAAnB,KAA0C;AACzD,UAAMtI,aAAa,GAAGD,gBAAgB,EAAtC;;AAEA,UAAMwI,YAAY,gBACd,QAAC,MAAD;AAEI,MAAA,QAAQ,EAAEb,QAFd;AAGI,MAAA,UAAU,EAAErJ,WAAW,CAACqJ,QAAD,CAAX,IAAyBY,UAHzC;AAII,MAAA,QAAQ,EAAEnL,OAAO,CAACuK,QAAD,CAAP,IAAqB,EAJnC;AAKI,MAAA,UAAU,EAAE,MAAMjH,gBAAgB,CAACiH,QAAD,CALtC;AAMI,MAAA,UAAU,EAAE,MAAMhH,cAAc,CAACgH,QAAD,CANpC;AAOI,MAAA,OAAO,EAAE,MAAM/G,YAAY,CAAC+G,QAAD,CAP/B;AAQI,MAAA,SAAS,EAAEI,eARf;AASI,MAAA,YAAY,EAAEU,oBATlB;AAUI,MAAA,QAAQ,EAAEC,kBAVd;AAWI,MAAA,SAAS,EAAEjI,SAXf;AAYI,MAAA,gBAAgB,EAAET,gBAZtB;AAaI,MAAA,YAAY,EAAE,MAAM2I,YAAY,CAAChB,QAAD;AAbpC,OACSA,QADT;AAAA;AAAA;AAAA;AAAA,YADJ;;AAkBAhL,IAAAA,UAAU,CAAC8H,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,OAACkD,QAAD,GAAY;AACRpH,QAAAA,MAAM,EAAEN,aAAa,GAAG,CADhB;AAER6F,QAAAA,SAAS,EAAE,KAFH;AAGRnE,QAAAA,SAAS,EAAE6G,YAHH;AAIR/G,QAAAA,IAAI,EAAEnD,WAAW,CAACqJ,QAAD,CAAX,IAAyBY,UAJvB;AAKR3E,QAAAA,IAAI,EAAE;AALE;AAFI,KAAL,CAAL,CAAV;AAUH,GA/BD;;AAiCA,QAAM+E,YAAY,GAAItI,GAAD,IAAiB;AAClC1D,IAAAA,UAAU,CAACiJ,WAAW,IAAI;AACtB,YAAMC,UAAU,GAAG,EAAE,GAAGD;AAAL,OAAnB;AACA,YAAM3F,aAAa,GAAGD,gBAAgB,EAAtC;AACA6F,MAAAA,UAAU,CAACxF,GAAD,CAAV,CAAgBE,MAAhB,GAAyBN,aAAa,GAAG,CAAzC;AACA,aAAO4F,UAAP;AACH,KALS,CAAV;AAMH,GAPD;;AASA,QAAMkC,eAAe,GAAG,CAACJ,QAAD,EAAmBC,IAAnB,KAAkD;AACtEvK,IAAAA,UAAU,CAACoH,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,OAACkD,QAAD,GAAY,CAAC,IAAIlD,IAAI,CAACkD,QAAD,CAAJ,IAAkB,EAAtB,CAAD,EAA4BC,IAA5B;AAFI,KAAL,CAAL,CAAV;AAIH,GALD;;AAOA,QAAMa,oBAAoB,GAAG,CAACd,QAAD,EAAmBiB,QAAnB,KAAwC;AACjEvL,IAAAA,UAAU,CAACoH,IAAI,KAAK;AAChB,OAACkD,QAAD,GAAYlD,IAAI,CAACkD,QAAD,CAAJ,CAAeG,MAAf,CAAsBF,IAAI,IAAIA,IAAI,CAACjE,YAAL,KAAsBiF,QAApD;AADI,KAAL,CAAL,CAAV;AAGH,GAJD;;AAMA,QAAMC,iBAAiB,GAAIlC,CAAD,IAAyC;AAC/DA,IAAAA,CAAC,CAACsB,cAAF;AACApK,IAAAA,cAAc,CAAC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,CAAC,EAAE4I,CAAC,CAACS,OAAtB;AAA+BpJ,MAAAA,CAAC,EAAE2I,CAAC,CAACQ,OAApC;AAA6ClJ,MAAAA,IAAI,EAAE;AAAnD,KAAD,CAAd;AACH,GAHD;;AAKA,QAAM6K,uBAAuB,GAAG,CAACnC,CAAD,EAAsCgB,QAAtC,KAA2D;AACvFhB,IAAAA,CAAC,CAACsB,cAAF;AACAtB,IAAAA,CAAC,CAACoC,eAAF;AACAlL,IAAAA,cAAc,CAAC;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,CAAC,EAAE4I,CAAC,CAACS,OAFM;AAGXpJ,MAAAA,CAAC,EAAE2I,CAAC,CAACQ,OAHM;AAIXlJ,MAAAA,IAAI,EAAE,QAJK;AAKX+K,MAAAA,QAAQ,EAAErB;AALC,KAAD,CAAd;AAOH,GAVD;;AAYA,QAAMsB,qBAAqB,GAAG,CAACtC,CAAD,EAAsCuC,QAAtC,KAA2D;AACrFvC,IAAAA,CAAC,CAACsB,cAAF;AACAtB,IAAAA,CAAC,CAACoC,eAAF;AACAlL,IAAAA,cAAc,CAAC;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,CAAC,EAAE4I,CAAC,CAACS,OAFM;AAGXpJ,MAAAA,CAAC,EAAE2I,CAAC,CAACQ,OAHM;AAIXlJ,MAAAA,IAAI,EAAE,MAJK;AAKX+K,MAAAA,QAAQ,EAAEE;AALC,KAAD,CAAd;AAOH,GAVD;;AAYA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIvL,WAAW,CAACE,OAAhB,EAAyB;AACrBD,MAAAA,cAAc,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,CAAC,EAAE,CAArB;AAAwBC,QAAAA,CAAC,EAAE,CAA3B;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OAAD,CAAd;AACH;AACJ,GAJD;;AAMA,QAAMyK,kBAAkB,GAAG,CAACf,QAAD,EAAmByB,OAAnB,KAAuC;AAC9D7K,IAAAA,cAAc,CAACkG,IAAI,KAAK,EACpB,GAAGA,IADiB;AAEpB,OAACkD,QAAD,GAAYyB;AAFQ,KAAL,CAAL,CAAd;AAIH,GALD;;AAOA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIzL,WAAW,CAACoL,QAAhB,EAA0B;AACtBvK,MAAAA,iBAAiB,CAACb,WAAW,CAACoL,QAAb,CAAjB;AACAnL,MAAAA,cAAc,CAAC4G,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAW3G,QAAAA,OAAO,EAAE;AAApB,OAAL,CAAL,CAAd;AACH;AACJ,GALD;;AAOA,QAAMwL,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,SAAS,GAAI,YAAW/L,UAAW,EAAzC;AACA,UAAM4K,WAAW,GAAI,iBAAgB5K,UAAW,MAAhD;AAEA,UAAMgM,mBAAyC,GAAG;AAC9C7F,MAAAA,YAAY,EAAEyE,WADgC;AAE9CxE,MAAAA,IAAI,EAAE,cAFwC;AAG9CC,MAAAA,MAAM,EAAE,MAAM4F,YAAY,CAACF,SAAD,EAAYnB,WAAZ;AAHoB,KAAlD;AAMAvL,IAAAA,YAAY,CAAC4H,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU+E,mBAAV,CAAT,CAAZ,CAV4B,CAY5B;;AACA,UAAMnB,UAAU,GAAGzL,SAAS,CAACwJ,MAAV,GAAmBlG,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBgJ,MAA3D;AACA,UAAMlC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWiE,UAAU,GAAGlE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAxB,CAAf;AACA,UAAMqI,GAAG,GAAG+D,UAAU,GAAGlE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAzB;AAEA,UAAMsI,QAAQ,GAAG;AACbnI,MAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsBkI,GAAG,GAAGrI,gBADpB;AAEbI,MAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuB6H,MAAM,GAAGhI;AAFzB,KAAjB;AAKAa,IAAAA,YAAY,CAAC0H,IAAI,KAAK,EAClB,GAAGA,IADe;AAElB,OAAC8E,SAAD,GAAahF;AAFK,KAAL,CAAL,CAAZ;AAKA9G,IAAAA,aAAa,CAACgH,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAb;AACA5G,IAAAA,cAAc,CAAC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,CAAC,EAAE,CAArB;AAAwBC,MAAAA,CAAC,EAAE,CAA3B;AAA8BC,MAAAA,IAAI,EAAE;AAApC,KAAD,CAAd;AACH,GA7BD;;AA+BA,QAAMwL,YAAY,GAAG,CAACC,MAAD,EAAiBR,QAAjB,KAAsC;AACvD,UAAMjJ,aAAa,GAAGD,gBAAgB,EAAtC;;AAEA,UAAM2J,gBAAgB,gBAClB,QAAC,UAAD;AAEI,MAAA,QAAQ,EAAET,QAFd;AAGI,MAAA,UAAU,EAAE,MAAMxI,gBAAgB,CAACgJ,MAAD,CAHtC;AAII,MAAA,UAAU,EAAE,MAAM/I,cAAc,CAAC+I,MAAD,CAJpC;AAKI,MAAA,OAAO,EAAE,MAAM9I,YAAY,CAAC8I,MAAD,CAL/B;AAMI,MAAA,QAAQ,EAAGN,OAAD,IAAaQ,oBAAoB,CAACF,MAAD,EAASN,OAAT,CAN/C;AAOI,MAAA,UAAU,EAAE5K,cAAc,KAAKkL;AAPnC,OACSA,MADT;AAAA;AAAA;AAAA;AAAA,YADJ;;AAYA/M,IAAAA,UAAU,CAAC8H,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,OAACiF,MAAD,GAAU;AACNnJ,QAAAA,MAAM,EAAEN,aAAa,GAAG,CADlB;AAEN6F,QAAAA,SAAS,EAAE,KAFL;AAGNnE,QAAAA,SAAS,EAAEgI,gBAHL;AAINlI,QAAAA,IAAI,EAAEyH,QAJA;AAKNtF,QAAAA,IAAI,EAAE;AALA;AAFM,KAAL,CAAL,CAAV;AAUH,GAzBD;;AA2BA,QAAMgG,oBAAoB,GAAG,CAACF,MAAD,EAAiBN,OAAjB,KAAqC;AAC9DvM,IAAAA,YAAY,CAAC6H,aAAa,IAAIA,aAAa,CAACmF,GAAd,CAAkB7F,QAAQ,IAAI;AACxD,UAAIA,QAAQ,CAACL,YAAT,KAA0B+F,MAA9B,EAAsC;AAClC,eAAO,EAAE,GAAG1F,QAAL;AAAeL,UAAAA,YAAY,EAAEyF;AAA7B,SAAP;AACH;;AACD,aAAOpF,QAAP;AACH,KAL6B,CAAlB,CAAZ;AAMArH,IAAAA,UAAU,CAACiJ,WAAW,IAAI;AACtB,YAAMC,UAAU,GAAG,EAAE,GAAGD;AAAL,OAAnB;;AACA,UAAIC,UAAU,CAAC6D,MAAD,CAAd,EAAwB;AACpB7D,QAAAA,UAAU,CAAC6D,MAAD,CAAV,CAAmBjI,IAAnB,GAA0B2H,OAA1B;AACH;;AACD,aAAOvD,UAAP;AACH,KANS,CAAV;AAOApH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAfD;;AAiBA,QAAMqL,YAAY,GAAInC,QAAD,IAAsB;AACvC,UAAMjK,cAAc,GAAGN,OAAO,CAACuK,QAAD,CAA9B;;AACA,QAAIjK,cAAJ,EAAoB;AAChBA,MAAAA,cAAc,CAAC0C,OAAf,CAAuBwH,IAAI,IAAIG,eAAe,CAAC,aAAD,EAAgBH,IAAhB,CAA9C;AACH;;AACDG,IAAAA,eAAe,CAAC,aAAD,EAAgB;AAC3BpE,MAAAA,YAAY,EAAErF,WAAW,CAACqJ,QAAD,CAAX,IAA0B,cAAaA,QAAQ,CAACoC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAuB,EADjD;AAE3BnG,MAAAA,IAAI,EAAE,YAFqB;AAG3BC,MAAAA,MAAM,EAAEmG;AAHmB,KAAhB,CAAf;AAKA3M,IAAAA,UAAU,CAACoH,IAAI,IAAI;AACf,YAAMwF,UAAU,GAAG,EAAE,GAAGxF;AAAL,OAAnB;AACA,aAAOwF,UAAU,CAACtC,QAAD,CAAjB;AACA,aAAOsC,UAAP;AACH,KAJS,CAAV;AAKA1L,IAAAA,cAAc,CAACkG,IAAI,IAAI;AACnB,YAAMyF,cAAc,GAAG,EAAE,GAAGzF;AAAL,OAAvB;AACA,aAAOyF,cAAc,CAACvC,QAAD,CAArB;AACA,aAAOuC,cAAP;AACH,KAJa,CAAd;AAKAvN,IAAAA,UAAU,CAAC8H,IAAI,IAAI;AACf,YAAMoB,UAAU,GAAG,EAAE,GAAGpB;AAAL,OAAnB;AACA,aAAOoB,UAAU,CAAC8B,QAAD,CAAjB;AACA,aAAO9B,UAAP;AACH,KAJS,CAAV;AAKAd,IAAAA,cAAc,CAACoF,UAAf,CAA0BxC,QAA1B;AACH,GA1BD;;AA4BA,QAAMyC,UAAU,GAAIlB,QAAD,IAAsB;AACrC,UAAMmB,IAAI,GAAGzN,SAAS,CAACiL,IAAV,CAAe7D,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0BuF,QAArD,CAAb;;AACA,QAAImB,IAAJ,EAAU;AACNtC,MAAAA,eAAe,CAAC,aAAD,EAAgBsC,IAAhB,CAAf;AACH;;AACDxN,IAAAA,YAAY,CAAC4H,IAAI,IAAIA,IAAI,CAACqD,MAAL,CAAY9D,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0BuF,QAAlD,CAAT,CAAZ;AACAvM,IAAAA,UAAU,CAAC8H,IAAI,IAAI;AACf,YAAMoB,UAAU,GAAG,EAAE,GAAGpB;AAAL,OAAnB;AACA,aAAOoB,UAAU,CAACqD,QAAD,CAAjB;AACA,aAAOrD,UAAP;AACH,KAJS,CAAV;AAKAd,IAAAA,cAAc,CAACoF,UAAf,CAA0BjB,QAA1B,EAXqC,CAWA;AACxC,GAZD;;AAcA,QAAMpF,yBAAyB,GAAG,MAAM;AACpC,UAAMwG,iBAAuC,GAAG;AAC5C3G,MAAAA,YAAY,EAAE,WAD8B;AAE5CC,MAAAA,IAAI,EAAE,eAFsC;AAG5CC,MAAAA,MAAM,EAAE0G;AAHoC,KAAhD;AAMA1N,IAAAA,YAAY,CAAC6H,aAAa,IAAI;AAC1B,YAAM8F,yBAAyB,GAAG9F,aAAa,CAACmD,IAAd,CAAmB7D,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0B,WAAzD,CAAlC;;AACA,UAAI,CAAC6G,yBAAL,EAAgC;AAC5B,eAAO,CAAC,GAAG9F,aAAJ,EAAmB4F,iBAAnB,CAAP;AACH;;AACD,aAAO5F,aAAP;AACH,KANW,CAAZ;AAQA,UAAM2D,UAAU,GAAGzL,SAAS,CAACwJ,MAAV,GAAmBlG,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBgJ,MAA3D;AACA,UAAMlC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWiE,UAAU,GAAGlE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAxB,CAAf;AACA,UAAMqI,GAAG,GAAG+D,UAAU,GAAGlE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAzB;AAEA,UAAMsI,QAAQ,GAAG;AACbnI,MAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsBkI,GAAG,GAAGrI,gBADpB;AAEbI,MAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuB6H,MAAM,GAAGhI;AAFzB,KAAjB;AAKAa,IAAAA,YAAY,CAAC0H,IAAI,KAAK,EAClB,GAAGA,IADe;AAElB,mBAAaF;AAFK,KAAL,CAAL,CAAZ;AAIH,GA5BD;;AA8BA,QAAMgG,aAAa,GAAG,MAAM;AACxB,UAAMtK,aAAa,GAAGD,gBAAgB,EAAtC;;AAEA,UAAMyK,SAAS,gBACX,QAAC,SAAD;AACI,MAAA,UAAU,EAAE,MAAM/J,gBAAgB,CAAC,WAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,WAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,WAAD,CAH/B;AAII,MAAA,SAAS,EAAEH,SAJf;AAKI,MAAA,gBAAgB,EAAET;AALtB;AAAA;AAAA;AAAA;AAAA,YADJ;;AAUArD,IAAAA,UAAU,CAAC8H,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,mBAAa;AACTlE,QAAAA,MAAM,EAAEN,aAAa,GAAG,CADf;AAET6F,QAAAA,SAAS,EAAE,KAFF;AAGTnE,QAAAA,SAAS,EAAE8I,SAHF;AAIThJ,QAAAA,IAAI,EAAE,WAJG;AAKTmC,QAAAA,IAAI,EAAE;AALG;AAFG,KAAL,CAAL,CAAV;AAUH,GAvBD;;AAyBA,QAAMP,aAAa,GAAIqH,OAAD,IAAqB;AACvC,UAAMC,MAAM,GAAGzK,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BsG,IAA1B,CACVxH,GAAD,IAASkB,YAAY,CAAClB,GAAD,CAAZ,CAAkBoB,IAAlB,CAAuBgE,WAAvB,OAAyCiF,OAAO,CAACjF,WAAR,EADvC,CAAf;;AAGA,QAAIkF,MAAJ,EAAY;AACR,YAAMlH,GAAG,GAAGlC,YAAY,CAACoJ,MAAD,CAAxB;AACAlK,MAAAA,SAAS,CACLgD,GAAG,CAACpD,GADC,eAEL,QAAC,GAAD,CAAK,SAAL;AACI,QAAA,UAAU,EAAE,MAAMK,gBAAgB,CAAC+C,GAAG,CAACpD,GAAL,CADtC;AAEI,QAAA,UAAU,EAAE,MAAMM,cAAc,CAAC8C,GAAG,CAACpD,GAAL,CAFpC;AAGI,QAAA,OAAO,EAAE,MAAMO,YAAY,CAAC6C,GAAG,CAACpD,GAAL;AAH/B,SAISoD,GAAG,CAACpD,GAJb;AAAA;AAAA;AAAA;AAAA,cAFK,CAAT;AASH,KAXD,MAWO;AACHuK,MAAAA,KAAK,CAAE,gBAAeF,OAAQ,cAAzB,CAAL;AACH;AACJ,GAlBD;;AAoBA,QAAM3G,oBAAoB,GAAG,MAAM;AAC/B,UAAM8G,kBAAwC,GAAG;AAC7ClH,MAAAA,YAAY,EAAE,aAD+B;AAE7CC,MAAAA,IAAI,EAAE,gBAFuC;AAG7CC,MAAAA,MAAM,EAAEmG;AAHqC,KAAjD;AAMAnN,IAAAA,YAAY,CAAC6H,aAAa,IAAI;AAC1B,YAAMoG,0BAA0B,GAAGpG,aAAa,CAACmD,IAAd,CAAmB7D,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0B,aAAzD,CAAnC;;AACA,UAAI,CAACmH,0BAAL,EAAiC;AAC7B,eAAO,CAAC,GAAGpG,aAAJ,EAAmBmG,kBAAnB,CAAP;AACH;;AACD,aAAOnG,aAAP;AACH,KANW,CAAZ;AAQArH,IAAAA,UAAU,CAACoH,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,qBAAe;AAFC,KAAL,CAAL,CAAV;AAKA,UAAM4D,UAAU,GAAGzL,SAAS,CAACwJ,MAAV,GAAmBlG,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBgJ,MAA3D;AACA,UAAMlC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWiE,UAAU,GAAGlE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAxB,CAAf;AACA,UAAMqI,GAAG,GAAG+D,UAAU,GAAGlE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAzB;AAEA,UAAMsI,QAAQ,GAAG;AACbnI,MAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsBkI,GAAG,GAAGrI,gBADpB;AAEbI,MAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuB6H,MAAM,GAAGhI;AAFzB,KAAjB;AAKAa,IAAAA,YAAY,CAAC0H,IAAI,KAAK,EAClB,GAAGA,IADe;AAElB,qBAAeF;AAFG,KAAL,CAAL,CAAZ;AAIH,GAjCD;;AAmCA,QAAMyF,cAAc,GAAG,MAAM;AACzB,UAAM/J,aAAa,GAAGD,gBAAgB,EAAtC;;AAEA,UAAM+K,gBAAgB,gBAClB,QAAC,UAAD;AACI,MAAA,QAAQ,EAAE3N,OAAO,CAAC,aAAD,CAAP,IAA0B,EADxC;AAEI,MAAA,UAAU,EAAE,MAAMsD,gBAAgB,CAAC,aAAD,CAFtC;AAGI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,aAAD,CAHpC;AAII,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,aAAD,CAJ/B;AAKI,MAAA,SAAS,EAAGgH,IAAD,IAAUG,eAAe,CAAC,aAAD,EAAgBH,IAAhB,CALxC;AAMI,MAAA,YAAY,EAAGgB,QAAD,IAAcH,oBAAoB,CAAC,aAAD,EAAgBG,QAAhB,CANpD;AAOI,MAAA,QAAQ,EAAE,CAACA,QAAD,EAAWQ,OAAX,KAAuBQ,oBAAoB,CAAChB,QAAD,EAAWQ,OAAX,CAPzD;AAQI,MAAA,SAAS,EAAE3I,SARf;AASI,MAAA,gBAAgB,EAAET;AATtB;AAAA;AAAA;AAAA;AAAA,YADJ;;AAcArD,IAAAA,UAAU,CAAC8H,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,qBAAe;AACXlE,QAAAA,MAAM,EAAEN,aAAa,GAAG,CADb;AAEX6F,QAAAA,SAAS,EAAE,KAFA;AAGXnE,QAAAA,SAAS,EAAEoJ,gBAHA;AAIXtJ,QAAAA,IAAI,EAAE,aAJK;AAKXmC,QAAAA,IAAI,EAAExG,OAAO,CAAC,aAAD,CAAP,IAA0BA,OAAO,CAAC,aAAD,CAAP,CAAuBgJ,MAAvB,GAAgC,CAA1D,GAA8D,oBAA9D,GAAqF;AALhF;AAFC,KAAL,CAAL,CAAV;AAUH,GA3BD;;AA6BA,QAAM4E,eAAe,GAAG,MAAM;AAC1B3N,IAAAA,UAAU,CAACoH,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,qBAAe;AAFC,KAAL,CAAL,CAAV;AAIH,GALD;;AAOA,QAAMwG,YAAY,GAAG,MAAM;AACvB,UAAMpG,YAA8D,GAAG,EAAvE;AACA,UAAMwD,UAAU,GAAGzL,SAAS,CAACwJ,MAAV,GAAmBlG,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBgJ,MAA3D;AACA,QAAInC,KAAK,GAAG,CAAZ;;AAEA,UAAMiH,kBAAkB,GAAG,CAAC9O,GAAD,EAAcC,IAAd,KAA+B;AACtD,aAAO6D,MAAM,CAACqH,MAAP,CAAc1C,YAAd,EAA4B2C,IAA5B,CACFC,GAAD,IAASA,GAAG,CAACrL,GAAJ,KAAYA,GAAZ,IAAmBqL,GAAG,CAACpL,IAAJ,KAAaA,IADtC,CAAP;AAGH,KAJD;;AAMA,UAAM8O,wBAAwB,GAAG,CAACC,QAAD,EAAmBC,SAAnB,KAAyC;AACtE,UAAIjP,GAAG,GAAGgP,QAAV;AACA,UAAI/O,IAAI,GAAGgP,SAAX;;AACA,aAAOH,kBAAkB,CAAC9O,GAAD,EAAMC,IAAN,CAAzB,EAAsC;AAClCD,QAAAA,GAAG,IAAIH,gBAAP;;AACA,YAAIG,GAAG,IAAIkE,MAAM,CAAC+D,WAAP,GAAqBpI,gBAAhC,EAAkD;AAC9CG,UAAAA,GAAG,GAAGD,cAAc,CAACC,GAArB;AACAC,UAAAA,IAAI,IAAIH,kBAAR;AACH;AACJ;;AACD,aAAO;AAAEE,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAP;AACH,KAXD;;AAaAO,IAAAA,SAAS,CAACwD,OAAV,CAAmB4D,QAAD,IAAc;AAC5B,UAAIA,QAAQ,CAACL,YAAT,KAA0B,WAA1B,IAAyCK,QAAQ,CAACL,YAAT,KAA0B,aAAvE,EAAsF;AAClF,cAAMO,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAnB,CAAf;AACA,cAAMqI,GAAG,GAAGL,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAApB;AACA,cAAMqP,eAAe,GAAG;AACpBlP,UAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsBkI,GAAG,GAAGrI,gBADb;AAEpBI,UAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuB6H,MAAM,GAAGhI;AAFlB,SAAxB;AAIA,cAAMqI,QAAQ,GAAG4G,wBAAwB,CAACG,eAAe,CAAClP,GAAjB,EAAsBkP,eAAe,CAACjP,IAAtC,CAAzC;AACAwI,QAAAA,YAAY,CAACb,QAAQ,CAACL,YAAV,CAAZ,GAAsCY,QAAtC;AACAN,QAAAA,KAAK;AACR;AACJ,KAZD;AAcA/D,IAAAA,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBgD,OAArB,CAA8BuH,QAAD,IAAc;AACvC,YAAMzD,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAnB,CAAf;AACA,YAAMqI,GAAG,GAAGL,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAApB;AACA,YAAMqP,eAAe,GAAG;AACpBlP,QAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsBkI,GAAG,GAAGrI,gBADb;AAEpBI,QAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuB6H,MAAM,GAAGhI;AAFlB,OAAxB;AAIA,YAAMqI,QAAQ,GAAG4G,wBAAwB,CAACG,eAAe,CAAClP,GAAjB,EAAsBkP,eAAe,CAACjP,IAAtC,CAAzC;AACAwI,MAAAA,YAAY,CAAC8C,QAAD,CAAZ,GAAyBpD,QAAzB;AACAN,MAAAA,KAAK;AACR,KAVD;AAYAY,IAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4BsG,wBAAwB,CAChD7K,MAAM,CAAC+D,WAAP,GAAqBpI,gBAArB,GAAwC,EADQ,EAEhDE,cAAc,CAACE,IAFiC,CAApD;AAKAwI,IAAAA,YAAY,CAAC,aAAD,CAAZ,GAA8BsG,wBAAwB,CAClD7K,MAAM,CAAC+D,WAAP,GAAqBpI,gBAArB,GAAwC,EADU,EAElDE,cAAc,CAACE,IAAf,GAAsBH,kBAF4B,CAAtD;AAKAa,IAAAA,YAAY,CAAC8H,YAAD,CAAZ;AACH,GA7DD;;AA+DAhL,EAAAA,SAAS,CAAC,MAAM;AACZoR,IAAAA,YAAY;AACf,GAFQ,EAEN,CAACrO,SAAD,EAAYQ,OAAZ,CAFM,CAAT;AAIA,SAAO,CAACJ,QAAD,gBACH;AAAK,IAAA,KAAK,EAAEuO,MAAM,CAACC,OAAnB;AAA4B,IAAA,MAAM,EAAE1E,UAApC;AAAgD,IAAA,UAAU,EAAEkB,cAA5D;AAA4E,IAAA,aAAa,EAAEa,iBAA3F;AAA8G,IAAA,OAAO,EAAEM,WAAvH;AAAA,eAEKjJ,MAAM,CAACC,IAAP,CAAYzD,OAAZ,EAAqBmN,GAArB,CAA0BxJ,GAAD,IAAS;AAC/B,YAAM6F,OAAO,GAAGxJ,OAAO,CAAC2D,GAAD,CAAP,CAAasB,SAA7B;AACA,UAAI,CAACuE,OAAL,EAAc,oBAAO,mBAAW,OAAM7F,GAAI,EAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACd,0BACI;AAEI,QAAA,KAAK,EAAEH,MAAM,CAACuL,MAAP,CACH,EADG,EAEH;AAAElL,UAAAA,MAAM,EAAE7D,OAAO,CAAC2D,GAAD,CAAP,CAAaE;AAAvB,SAFG,EAGH7D,OAAO,CAAC2D,GAAD,CAAP,CAAayF,SAAb,IAA0ByF,MAAM,CAACzF,SAH9B,CAFX;AAAA,+BAQKnM,KAAK,CAAC6M,YAAN,CAAmBN,OAAnB,EAA4B;AACzB7F,UAAAA,GADyB;AAEzB+B,UAAAA,UAAU,EAAE,MAAM1B,gBAAgB,CAACL,GAAD,CAFT;AAGzBiC,UAAAA,OAAO,EAAE,MAAM1B,YAAY,CAACP,GAAD;AAHF,SAA5B;AARL,SACU,OAAMA,GAAI,EADpB;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBH,KAnBA,CAFL,eAsBI;AAAK,MAAA,KAAK,EAAEkL,MAAM,CAAC3O,SAAnB;AAAA,iBACKA,SAAS,CAACiN,GAAV,CAAc,CAAC7F,QAAD,EAAW0H,CAAX,KAAiB;AAC5B,cAAMnH,QAAQ,GAAGzH,SAAS,CAACkH,QAAQ,CAACL,YAAV,CAAT,IAAoC;AACjDvH,UAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsBsP,CAAC,GAAGvH,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAL,GAAkEA,gBAD3C;AAEjDI,UAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAsB8H,IAAI,CAACC,KAAL,CAAWsH,CAAC,GAAGvH,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAf,IAA4EC;AAFvD,SAArD;AAKA,4BACI;AACI,UAAA,KAAK,EAAEgE,MAAM,CAACuL,MAAP,CAAc,EAAd,EAAkBF,MAAM,CAACI,iBAAzB,EAA4CpH,QAA5C,CADX;AAGI,UAAA,SAAS,MAHb;AAII,UAAA,WAAW,EAAGoC,CAAD,IAAOD,eAAe,CAACC,CAAD,EAAI3C,QAAQ,CAACL,YAAb,CAJvC;AAKI,UAAA,aAAa,EAAGgD,CAAD,IAAOsC,qBAAqB,CAACtC,CAAD,EAAI3C,QAAQ,CAACL,YAAb,CAL/C;AAAA,iCAOI,QAAC,eAAD;AACI,YAAA,IAAI,EAAEK,QAAQ,CAACJ,IADnB;AAEI,YAAA,YAAY,EAAEI,QAAQ,CAACL,YAF3B;AAGI,YAAA,MAAM,EAAEK,QAAQ,CAACH,MAHrB;AAII,YAAA,UAAU,EAAErF,cAAc,KAAKwF,QAAQ,CAACL,YAJ5C;AAKI,YAAA,QAAQ,EAAGyF,OAAD,IAAaQ,oBAAoB,CAAC5F,QAAQ,CAACL,YAAV,EAAwByF,OAAxB;AAL/C;AAAA;AAAA;AAAA;AAAA;AAPJ,WAESpF,QAAQ,CAACL,YAFlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAiBH,OAvBA,CADL,EAyBKzD,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqByM,GAArB,CAA0BlC,QAAD,IAAc;AACpC,YAAIA,QAAQ,KAAK,aAAjB,EAAgC,OAAO,IAAP;AAChC,cAAMiE,MAAM,GAAGxO,OAAO,CAACuK,QAAD,CAAtB;AACA,cAAMY,UAAU,GAAGjK,WAAW,CAACqJ,QAAD,CAAX,IAA0B,cAAaA,QAAQ,CAACoC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAuB,EAAjF;AACA,cAAMxF,QAAQ,GAAGzH,SAAS,CAAC6K,QAAD,CAAT,IAAuB;AACpCvL,UAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsB,CAACQ,SAAS,CAACwJ,MAAV,GAAmByF,QAAQ,CAAClE,QAAQ,CAACoC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAD,CAA3B,GAAsD,CAAvD,IAA4D5F,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAA7D,GAA0HA,gBADhH;AAEpCI,UAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAsB8H,IAAI,CAACC,KAAL,CAAW,CAACxH,SAAS,CAACwJ,MAAV,GAAmByF,QAAQ,CAAClE,QAAQ,CAACoC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAD,CAA3B,GAAsD,CAAvD,IAA4D5F,IAAI,CAACC,KAAL,CAAW,CAAC9D,MAAM,CAAC+D,WAAP,GAAqB,GAAtB,IAA6BpI,gBAAxC,CAAvE,IAAoIC;AAF5H,SAAxC;AAKA,4BACI;AACI,UAAA,KAAK,EAAEgE,MAAM,CAACuL,MAAP,CAAc,EAAd,EAAkBF,MAAM,CAACI,iBAAzB,EAA4CpH,QAA5C,CADX;AAGI,UAAA,SAAS,MAHb;AAII,UAAA,WAAW,EAAGoC,CAAD,IAAOD,eAAe,CAACC,CAAD,EAAIgB,QAAJ,CAJvC;AAKI,UAAA,aAAa,EAAGhB,CAAD,IAAOmC,uBAAuB,CAACnC,CAAD,EAAIgB,QAAJ,CALjD;AAMI,UAAA,MAAM,EAAGhB,CAAD,IAAOe,kBAAkB,CAACf,CAAD,EAAIgB,QAAJ,CANrC;AAOI,UAAA,UAAU,EAAEK,cAPhB;AAAA,iCASI,QAAC,eAAD;AACI,YAAA,IAAI,EAAC,YADT;AAEI,YAAA,YAAY,EAAEO,UAFlB;AAGI,YAAA,MAAM,EAAE,MAAMD,UAAU,CAACX,QAAD,EAAWY,UAAX,CAH5B;AAII,YAAA,UAAU,EAAE/J,cAAc,KAAKmJ,QAJnC;AAKI,YAAA,QAAQ,EAAGyB,OAAD,IAAa;AACnBV,cAAAA,kBAAkB,CAACf,QAAD,EAAWyB,OAAX,CAAlB;AACA3K,cAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AATJ,WAESkJ,QAFT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAsBH,OA/BA,CAzBL,eAyDI;AACI,QAAA,KAAK,EAAEzH,MAAM,CAACuL,MAAP,CAAc,EAAd,EAAkBF,MAAM,CAACI,iBAAzB,EAA4C7O,SAAS,CAAC,aAAD,CAArD,CADX;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,WAAW,EAAG6J,CAAD,IAAOD,eAAe,CAACC,CAAD,EAAI,aAAJ,CAJvC;AAKI,QAAA,aAAa,EAAGA,CAAD,IAAOsC,qBAAqB,CAACtC,CAAD,EAAI,aAAJ,CAL/C;AAAA,+BAOI,QAAC,eAAD;AACI,UAAA,IAAI,EAAEvJ,OAAO,CAAC,aAAD,CAAP,IAA0BA,OAAO,CAAC,aAAD,CAAP,CAAuBgJ,MAAvB,GAAgC,CAA1D,GAA8D,oBAA9D,GAAqF,gBAD/F;AAEI,UAAA,YAAY,EAAC,aAFjB;AAGI,UAAA,MAAM,EAAE4D,cAHZ;AAII,UAAA,UAAU,EAAExL,cAAc,KAAK,aAJnC;AAKI,UAAA,QAAQ,EAAG4K,OAAD,IAAaQ,oBAAoB,CAAC,aAAD,EAAgBR,OAAhB;AAL/C;AAAA;AAAA;AAAA;AAAA;AAPJ,SAEQ,aAFR;AAAA;AAAA;AAAA;AAAA,cAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,eA+FI,QAAC,OAAD;AACI,MAAA,OAAO,EAAE1M,OADb;AAEI,MAAA,cAAc,EAAEqJ,cAFpB;AAGI,MAAA,QAAQ,EAAEE,aAHd;AAII,MAAA,SAAS,EAAExF,SAJf;AAKI,MAAA,gBAAgB,EAAE3B,gBALtB;AAMI,MAAA,YAAY,EAAE8B,YANlB;AAOI,MAAA,aAAa,EAAEyC,aAPnB;AAQI,MAAA,aAAa,EAAEkH;AARnB;AAAA;AAAA;AAAA;AAAA,YA/FJ,EAyGK3M,WAAW,CAACE,OAAZ,iBACG;AAAK,MAAA,KAAK,EAAE,EAAE,GAAGyN,MAAM,CAAC3N,WAAZ;AAAyBxB,QAAAA,GAAG,EAAEwB,WAAW,CAACI,CAA1C;AAA6C3B,QAAAA,IAAI,EAAEuB,WAAW,CAACG;AAA/D,OAAZ;AAAA,gBACKH,WAAW,CAACK,IAAZ,KAAqB,SAArB,gBACG;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEsN,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAE5D,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAEqD,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAExC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBADH,GASG1L,WAAW,CAACK,IAAZ,KAAqB,QAArB,gBACA;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEsN,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAEzC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAEkC,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAE,MAAMhC,YAAY,CAAClM,WAAW,CAACoL,QAAb,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBADA,GASApL,WAAW,CAACK,IAAZ,KAAqB,MAArB,gBACA;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEsN,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAEzC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAEkC,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAE,MAAM1B,UAAU,CAACxM,WAAW,CAACoL,QAAb,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBADA,gBAUA;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEuC,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAEzC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAEkC,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAE,MAAM1B,UAAU,CAACxM,WAAW,CAACoL,QAAb,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,KAAK,EAAEuC,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAEd,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AA7BR;AAAA;AAAA;AAAA;AAAA,YA1GR;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,gBAwJH,QAAC,gBAAD;AACI,IAAA,WAAW,EAAE/N,WADjB;AAEI,IAAA,YAAY,EAAEC;AAFlB;AAAA;AAAA;AAAA;AAAA,UAxJJ;AA6JH,CAz6CD;;GAAMV,O;;KAAAA,O;AA26CN,MAAM+O,MAAqB,GAAG;AAC1BC,EAAAA,OAAO,EAAE;AACLO,IAAAA,SAAS,EAAE,MADN;AAELC,IAAAA,IAAI,EAAE,CAFD;AAGLzH,IAAAA,QAAQ,EAAE;AAHL,GADiB;AAM1BvH,EAAAA,QAAQ,EAAE;AACN+O,IAAAA,SAAS,EAAE,MADL;AAENC,IAAAA,IAAI,EAAE,CAFA;AAGNzM,IAAAA,eAAe,EAAE;AAHX,GANgB;AAW1BoM,EAAAA,iBAAiB,EAAE;AACfpH,IAAAA,QAAQ,EAAE,UADK;AAEf0H,IAAAA,MAAM,EAAE;AAFO,GAXO;AAe1BrP,EAAAA,SAAS,EAAE;AACP2H,IAAAA,QAAQ,EAAE,UADH;AAEPnI,IAAAA,GAAG,EAAE,EAFE;AAGPC,IAAAA,IAAI,EAAE;AAHC,GAfe;AAoB1ByJ,EAAAA,SAAS,EAAE;AACPoG,IAAAA,aAAa,EAAE,MADR;AAEPC,IAAAA,OAAO,EAAE;AAFF,GApBe;AAwB1BvO,EAAAA,WAAW,EAAE;AACT2G,IAAAA,QAAQ,EAAE,UADD;AAEThF,IAAAA,eAAe,EAAE,OAFR;AAGT6M,IAAAA,MAAM,EAAE,gBAHC;AAITC,IAAAA,SAAS,EAAE,4BAJF;AAKT9L,IAAAA,MAAM,EAAE;AALC,GAxBa;AA+B1BuL,EAAAA,eAAe,EAAE;AACbQ,IAAAA,OAAO,EAAE,UADI;AAEbL,IAAAA,MAAM,EAAE;AAFK;AA/BS,CAA9B;AAqCA,eAAezP,OAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport Doom from '../applications/Doom';\nimport OregonTrail from '../applications/OregonTrail';\nimport ShutdownSequence from './ShutdownSequence';\nimport ThisComputer from '../applications/ThisComputer';\nimport Wordle from '../applications/wordle';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut, { DesktopShortcutProps } from './DesktopShortcut';\nimport Scrabble from '../applications/Scrabble';\n// import Minesweeper from '../applications/MinesweeperGame/Minesweeper';\nimport Credits from '../applications/Credits';\nimport InternetExplorer from '../applications/InternetExplorer';\nimport Folder from '../applications/folder';\nimport RecycleBin from '../applications/RecycleBin';\nimport { IconName } from '../../assets/icons';\nimport Settings from '../applications/Settings';\nimport Window from './Window';\nimport bg0 from '../../assets/bg/bg0.png';\nimport TextEditor from '../applications/TextEditor';\nimport MSN from '../applications/MSN';\nimport Run from '../applications/Run';\nimport Documents from '../applications/Documents';\nimport GamesFolder from '../applications/GamesFolder';\nimport GamesText from '../applications/GamesText';\nimport Sudoku from '../applications/Sudoku';\nimport Hangman from '../applications/Hangman';\nimport Game2048 from '../applications/Game2048';\nimport TicTacToe from '../applications/TicTacToe';\nimport WhackAMole from '../applications/WhackAMole';\nimport Tetris from '../applications/Tetris';\nimport Maze from '../applications/Maze';\nimport PaintApp from '../applications/PaintApp';\nimport SnakeGame from '../applications/SnakeGame';\nimport MemoryGame from '../applications/MemoryGame';\nimport MSDOS from '../applications/MSDOS';\nimport Calculator from '../applications/Calculator';\nimport Help from '../applications/Help';\n\nexport interface DesktopProps {}\n\ntype ExtendedWindowAppProps<T> = T & WindowAppProps;\n\nconst GRID_SIZE = 100;\nconst VERTICAL_SPACING = 104;\nconst HORIZONTAL_SPACING = 100;\nconst INITIAL_OFFSET = { top: 16, left: 6 };\nconst WINDOW_OFFSET = 30;\nconst TOOLBAR_HEIGHT = 32;\n\ninterface ContextMenuState {\n    visible: boolean;\n    x: number;\n    y: number;\n    type: 'desktop' | 'folder' | 'file';\n    targetId?: string;\n}\n\nconst Desktop: React.FC<DesktopProps> = (props) => {\n    const [windows, setWindows] = useState<DesktopWindows>({});\n    const [shortcuts, setShortcuts] = useState<DesktopShortcutProps[]>([]);\n    const [positions, setPositions] = useState<{ [key: string]: { top: number; left: number } }>({});\n    const [shutdown, setShutdown] = useState(false);\n    const [numShutdowns, setNumShutdowns] = useState(1);\n    const [folders, setFolders] = useState<{[key: string]: DesktopShortcutProps[]}>({});\n    const [nextFolderId, setNextFolderId] = useState(1);\n    const [nextFileId, setNextFileId] = useState(1);\n    const [folderContents, setFolderContents] = useState<{ [key: string]: DesktopShortcutProps[] }>({});\n    const [contextMenu, setContextMenu] = useState<ContextMenuState>({ \n        visible: false, \n        x: 0, \n        y: 0, \n        type: 'desktop' \n    });\n    const [background, setBackground] = useState<string | null>(null);\n    const [theme, setTheme] = useState<string | null>(null);\n    const [folderNames, setFolderNames] = useState<{[key: string]: string}>({});\n    const [renamingFolder, setRenamingFolder] = useState<string | null>(null);\n\n    // Initialize background from localStorage on component mount\n    useEffect(() => {\n        const savedBg = localStorage.getItem('background');\n        const savedTheme = localStorage.getItem('theme');\n        if (savedBg && savedTheme) {\n            updateBackground(savedBg, savedTheme);\n        } else {\n            const defaultBg = bg0;\n            const defaultTheme = '#098684';\n            updateBackground(defaultBg, defaultTheme);\n            localStorage.setItem('background', defaultBg);\n            localStorage.setItem('theme', defaultTheme);\n        }\n    }, []);\n\n    useEffect(() => {\n        const bodyBG = document.getElementsByTagName('body')[0];\n        bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n        bodyBG.style.backgroundColor = '#c5c4c4';\n        bodyBG.style.backgroundSize = 'cover';\n        bodyBG.style.backgroundPosition = 'center';\n        bodyBG.style.backgroundRepeat = 'no-repeat';\n        bodyBG.style.height = '100vh';\n        bodyBG.style.margin = '0';\n    }, []);\n\n    const updateBackground = useCallback((background: string, theme: string) => {\n        console.log('Updating background:', { background, theme });\n        setBackground(background);\n        setTheme(theme);\n        const bodyBG = document.getElementsByTagName('body')[0];\n        bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n        bodyBG.style.backgroundColor = theme;\n        bodyBG.style.backgroundImage = `url(${background})`;\n        bodyBG.style.backgroundSize = 'cover';\n        bodyBG.style.backgroundPosition = 'center';\n        bodyBG.style.backgroundRepeat = 'no-repeat';\n        bodyBG.style.height = '100vh';\n        bodyBG.style.margin = '0';\n    }, []);\n\n    const getHighestZIndex = useCallback((): number => {\n        let highestZIndex = 0;\n        Object.keys(windows).forEach((key) => {\n            const window = windows[key];\n            if (window) {\n                if (window.zIndex > highestZIndex)\n                    highestZIndex = window.zIndex;\n            }\n        });\n        return highestZIndex;\n    }, [windows]);\n\n    const openCreditsApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'credits',\n            <Credits\n                onInteract={() => onWindowInteract('credits')}\n                onMinimize={() => minimizeWindow('credits')}\n                onClose={() => removeWindow('credits')}\n                key=\"credits\"\n            />\n        );\n    };\n\n    const openMSNApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'msn',\n            <MSN\n                onInteract={() => onWindowInteract('msn')}\n                onMinimize={() => minimizeWindow('msn')}\n                onClose={() => removeWindow('msn')}\n                key=\"msn\"\n            />\n        );\n    };\n\n    const openWordleApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'wordle',\n            <Wordle\n                onInteract={() => onWindowInteract('wordle')}\n                onMinimize={() => minimizeWindow('wordle')}\n                onClose={() => removeWindow('wordle')}\n                key=\"wordle\"\n            />\n        );\n    };\n\n    const openGamesText = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'gamesText',\n            <GamesText\n                fileName=\"Games Info\"\n                onInteract={() => onWindowInteract('gamesText')}\n                onMinimize={() => minimizeWindow('gamesText')}\n                onClose={() => removeWindow('gamesText')}\n                key=\"gamesText\"\n            />\n        );\n    };\n\n    const openTicTacToeApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'ticTacToe',\n            <TicTacToe\n                onInteract={() => onWindowInteract('ticTacToe')}\n                onMinimize={() => minimizeWindow('ticTacToe')}\n                onClose={() => removeWindow('ticTacToe')}\n                key=\"ticTacToe\"\n            />\n        );\n    };\n\n    const openWhackAMoleApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'whackAMole',\n            <WhackAMole\n                onInteract={() => onWindowInteract('whackAMole')}\n                onMinimize={() => minimizeWindow('whackAMole')}\n                onClose={() => removeWindow('whackAMole')}\n                key=\"whackAMole\"\n            />\n        );\n    };\n\n    const open2048App = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            '2048',\n            <Game2048\n                onInteract={() => onWindowInteract('2048')}\n                onMinimize={() => minimizeWindow('2048')}\n                onClose={() => removeWindow('2048')}\n                key=\"2048\"\n            />\n        );\n    };\n\n    const openTetrisApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'tetris',\n            <Tetris\n                onInteract={() => onWindowInteract('tetris')}\n                onMinimize={() => minimizeWindow('tetris')}\n                onClose={() => removeWindow('tetris')}\n                key=\"tetris\"\n            />\n        );\n    };\n\n    const openMazeApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'maze',\n            <Maze\n                onInteract={() => onWindowInteract('maze')}\n                onMinimize={() => minimizeWindow('maze')}\n                onClose={() => removeWindow('maze')}\n                key=\"maze\"\n            />\n        );\n    };\n\n    const openGamesFolder = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'gamesFolder',\n            <GamesFolder\n                onInteract={() => onWindowInteract('gamesFolder')}\n                onMinimize={() => minimizeWindow('gamesFolder')}\n                onClose={() => removeWindow('gamesFolder')}\n                openWordleApp={openWordleApp}\n                openGamesText={openGamesText}\n                openSudokuApp={() => {\n                    const highestZIndex = getHighestZIndex();\n                    addWindow(\n                        'sudoku',\n                        <Sudoku\n                            onInteract={() => onWindowInteract('sudoku')}\n                            onMinimize={() => minimizeWindow('sudoku')}\n                            onClose={() => removeWindow('sudoku')}\n                            key=\"sudoku\"\n                        />\n                    );\n                }}\n                openHangmanApp={() => {\n                    const highestZIndex = getHighestZIndex();\n                    addWindow(\n                        'hangman',\n                        <Hangman\n                            onInteract={() => onWindowInteract('hangman')}\n                            onMinimize={() => minimizeWindow('hangman')}\n                            onClose={() => removeWindow('hangman')}\n                            key=\"hangman\"\n                        />\n                    );\n                }}\n                openTicTacToeApp={openTicTacToeApp}\n                open2048App={open2048App}\n                openWhackAMoleApp={openWhackAMoleApp}\n                openTetrisApp={openTetrisApp}\n                openMazeApp={openMazeApp}\n                openPaintApp={() => {\n                    const highestZIndex = getHighestZIndex();\n                    addWindow(\n                        'paint',\n                        <PaintApp\n                            onInteract={() => onWindowInteract('paint')}\n                            onMinimize={() => minimizeWindow('paint')}\n                            onClose={() => removeWindow('paint')}\n                            key=\"paint\"\n                        />\n                    );\n                }}\n                openSnakeApp={() => {\n                    const highestZIndex = getHighestZIndex();\n                    addWindow(\n                        'snake',\n                        <SnakeGame\n                            onInteract={() => onWindowInteract('snake')}\n                            onMinimize={() => minimizeWindow('snake')}\n                            onClose={() => removeWindow('snake')}\n                            key=\"snake\"\n                        />\n                    );\n                }}\n                openMemoryGameApp={() => {\n                    const highestZIndex = getHighestZIndex();\n                    addWindow(\n                        'memoryGame',\n                        <MemoryGame\n                            onInteract={() => onWindowInteract('memoryGame')}\n                            onMinimize={() => minimizeWindow('memoryGame')}\n                            onClose={() => removeWindow('memoryGame')}\n                            key=\"memoryGame\"\n                        />\n                    );\n                }}\n                key=\"gamesFolder\"\n            />,\n            highestZIndex + 1\n        );\n    };\n\n    const openMSDOSApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'msdos',\n            <MSDOS\n                onInteract={() => onWindowInteract('msdos')}\n                onMinimize={() => minimizeWindow('msdos')}\n                onClose={() => removeWindow('msdos')}\n                key=\"msdos\"\n            />\n        );\n    };\n\n    const APPLICATIONS: {\n        [key in string]: {\n            key: string;\n            name: string;\n            shortcutIcon: IconName;\n            component: React.FC<ExtendedWindowAppProps<any>>;\n        };\n    } = {\n        // Removed the folder entry from apps since i made it seperate\n        showcase: {\n            key: 'showcase',\n            name: 'Showcase',\n            shortcutIcon: 'showcaseIcon',\n            component: ShowcaseExplorer,\n        },\n        wordle: {\n            key: 'wordle',\n            name: 'Wordle',\n            shortcutIcon: 'wordleIcon',\n            component: Wordle,\n        },\n        trail: {\n            key: 'trail',\n            name: 'The Oregon Trail',\n            shortcutIcon: 'trailIcon',\n            component: OregonTrail,\n        },\n        doom: {\n            key: 'doom',\n            name: 'Doom',\n            shortcutIcon: 'doomIcon',\n            component: Doom,\n        },\n        scrabble: {\n            key: 'scrabble',\n            name: 'Scrabble',\n            shortcutIcon: 'scrabbleIcon',\n            component: Scrabble,\n        },\n        // chess: {\n        //     key: 'chess',\n        //     name: 'Chess',\n        //     shortcutIcon: 'chessIcon',\n        //     component: Settings,\n        // },\n        internetExplorer: {\n            key: 'internetExplorer',\n            name: 'Google Chrome',\n            shortcutIcon: 'InternetExplorerIcon',\n            component: InternetExplorer,\n        },\n        credits: {\n            key: 'credits',\n            name: 'Credits',\n            shortcutIcon: 'credits',\n            component: Credits,\n        },\n        settings: {\n            key: 'settings',\n            name: 'Settings',\n            shortcutIcon: 'setting',\n            component: Settings,\n        },\n        gamesFolder: {\n            key: 'gamesFolder',\n            name: 'Games Folder',\n            shortcutIcon: 'folderIcon',\n            component: (props: ExtendedWindowAppProps<any>) => (\n                <GamesFolder\n                    onInteract={props.onInteract}\n                    onMinimize={props.onMinimize}\n                    onClose={props.onClose}\n                    openWordleApp={openWordleApp}\n                    openGamesText={openGamesText}\n                    openSudokuApp={() => {\n                        const highestZIndex = getHighestZIndex();\n                        addWindow(\n                            'sudoku',\n                            <Sudoku\n                                onInteract={() => onWindowInteract('sudoku')}\n                                onMinimize={() => minimizeWindow('sudoku')}\n                                onClose={() => removeWindow('sudoku')}\n                                key=\"sudoku\"\n                            />\n                        );\n                    }}\n                    openHangmanApp={() => {\n                        const highestZIndex = getHighestZIndex();\n                        addWindow(\n                            'hangman',\n                            <Hangman\n                                onInteract={() => onWindowInteract('hangman')}\n                                onMinimize={() => minimizeWindow('hangman')}\n                                onClose={() => removeWindow('hangman')}\n                                key=\"hangman\"\n                            />\n                        );\n                    }}\n                    openTicTacToeApp={openTicTacToeApp}\n                    open2048App={open2048App}\n                    openWhackAMoleApp={openWhackAMoleApp}\n                    openTetrisApp={openTetrisApp}\n                    openMazeApp={openMazeApp}\n                    openPaintApp={() => {\n                        const highestZIndex = getHighestZIndex();\n                        addWindow(\n                            'paint',\n                            <PaintApp\n                                onInteract={() => onWindowInteract('paint')}\n                                onMinimize={() => minimizeWindow('paint')}\n                                onClose={() => removeWindow('paint')}\n                                key=\"paint\"\n                            />\n                        );\n                    }}\n                    openSnakeApp={() => {\n                        const highestZIndex = getHighestZIndex();\n                        addWindow(\n                            'snake',\n                            <SnakeGame\n                                onInteract={() => onWindowInteract('snake')}\n                                onMinimize={() => minimizeWindow('snake')}\n                                onClose={() => removeWindow('snake')}\n                                key=\"snake\"\n                            />\n                        );\n                    }}\n                    openMemoryGameApp={() => {\n                        const highestZIndex = getHighestZIndex();\n                        addWindow(\n                            'memoryGame',\n                            <MemoryGame\n                                onInteract={() => onWindowInteract('memoryGame')}\n                                onMinimize={() => minimizeWindow('memoryGame')}\n                                onClose={() => removeWindow('memoryGame')}\n                                key=\"memoryGame\"\n                            />\n                        );\n                    }}\n                />\n            ),\n        },\n        gamesText: {\n            key: 'gamesText',\n            name: 'Games Info',\n            shortcutIcon: 'textFileIcon',\n            component: GamesText,\n        },\n        sudoku: {\n            key: 'sudoku',\n            name: 'Sudoku',\n            shortcutIcon: 'folderIcon',\n            component: Sudoku,\n        },\n        hangman: {\n            key: 'hangman',\n            name: 'Hangman',\n            shortcutIcon: 'folderIcon',\n            component: Hangman,\n        },\n        game2048: {\n            key: 'game2048',\n            name: '2048',\n            shortcutIcon: 'twentyIcon',\n            component: Game2048,\n        },\n        ticTacToe: {\n            key: 'ticTacToe',\n            name: 'Tic Tac Toe',\n            shortcutIcon: 'tictactoeIcon',\n            component: TicTacToe,\n        },\n        whackAMole: {\n            key: 'whackAMole',\n            name: 'Whack-A-Mole',\n            shortcutIcon: 'whackIcon',\n            component: WhackAMole,\n        },\n        tetris: {\n            key: 'tetris',\n            name: 'Tetris',\n            shortcutIcon: 'folderIcon',\n            component: Tetris,\n        },\n        maze: {\n            key: 'maze',\n            name: 'Maze',\n            shortcutIcon: 'folderIcon',\n            component: Maze,\n        },\n        paint: {\n            key: 'paint',\n            name: 'Paint',\n            shortcutIcon: 'paintIcon',\n            component: PaintApp,\n        },\n        snake: {\n            key: 'snake',\n            name: 'Snake',\n            shortcutIcon: 'folderIcon',\n            component: SnakeGame,\n        },\n        memoryGame: {\n            key: 'memoryGame',\n            name: 'Memory Game',\n            shortcutIcon: 'folderIcon',\n            component: MemoryGame,\n        },\n        msdos: {\n            key: 'msdos',\n            name: 'MS-DOS',\n            shortcutIcon: 'folderIcon',\n            component: MSDOS,\n        },\n        calculator: {\n            key: 'calculator',\n            name: 'Calculator',\n            shortcutIcon: 'calculatorIcon',\n            component: Calculator,\n        },\n        run: {\n            key: 'run',\n            name: 'Run',\n            shortcutIcon: 'runIcon',\n            component: (props: ExtendedWindowAppProps<any>) => (\n                <Run\n                    onInteract={props.onInteract}\n                    onMinimize={props.onMinimize}\n                    onClose={props.onClose}\n                    openAppByName={openAppByName}\n                />\n            ),\n        },\n        //msn: {\n            //key: 'msn',\n           // name: 'MSN',\n            //shortcutIcon: 'msnIcon',\n           // component: MSN,\n       // },\n        // minesweeper: {\n        //     key: 'minesweeper',\n        //     name: 'Minesweeper',\n        //     shortcutIcon: 'setting',\n        //     component: (props: ExtendedWindowAppProps<any>) => (\n        //         <Window\n        //             closeWindow={props.onClose}\n        //             minimizeWindow={props.onMinimize}\n        //             onInteract={props.onInteract}\n        //             width={400}\n        //             height={400}\n        //             top={100}\n        //             left={100}\n        //             windowTitle=\"Minesweeper\"\n        //             windowBarIcon=\"setting\"\n        //         >\n        //             <Minesweeper\n        //                 onInteract={props.onInteract}\n        //                 onMinimize={props.onMinimize}\n        //                 onClose={props.onClose}\n        //             />\n        //         </Window>\n        //     ),\n        // },\n        help: {\n            key: 'help',\n            name: 'Help',\n            shortcutIcon: 'helpIcon',\n            component: Help,\n        },\n    };\n\n    useEffect(() => {\n        if (shutdown === true) {\n            rebootDesktop();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [shutdown]);\n\n    useEffect(() => {\n        const newShortcuts: DesktopShortcutProps[] = [];\n        Object.keys(APPLICATIONS).forEach((key) => {\n            const app = APPLICATIONS[key];\n            if (key !== 'credits' && key !== 'settings' && key !== 'folder' && key !== 'msn' && key !== 'gamesFolder' && key !== 'gamesText' && key !== 'wordle' && key !== 'sudoku' && key !== 'hangman' && key !== 'game2048' && key !== 'ticTacToe' && key !== 'tetris' && key !== 'whackAMole' && key !== 'maze' && key !== 'paint' && key !== 'snake' && key !== 'memoryGame' && key !== 'msdos' && key !== 'calculator' && key !== 'run' && key !== 'help') {\n                newShortcuts.push({\n                    shortcutName: app.name,\n                    icon: app.shortcutIcon,\n                    onOpen: () => {\n                        addWindow(\n                            app.key,\n                            <app.component\n                                onInteract={() => onWindowInteract(app.key)}\n                                onMinimize={() => minimizeWindow(app.key)}\n                                onClose={() => removeWindow(app.key)}\n                                key={app.key}\n                            />\n                        );\n                    },\n                });\n            }\n        });\n\n        initializeDocumentsFolder();\n        initializeRecycleBin();\n\n        newShortcuts.forEach((shortcut, index) => {\n            const column = Math.floor(index / Math.floor((window.innerHeight - TOOLBAR_HEIGHT) / VERTICAL_SPACING));\n            const row = index % Math.floor((window.innerHeight - TOOLBAR_HEIGHT) / VERTICAL_SPACING);\n            const position = {\n                top: Math.round((INITIAL_OFFSET.top + (row * VERTICAL_SPACING)) / GRID_SIZE) * GRID_SIZE,\n                left: Math.round((INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)) / GRID_SIZE) * GRID_SIZE\n            };\n            setPositions(prev => ({\n                ...prev,\n                [shortcut.shortcutName]: position\n            }));\n            if (shortcut.shortcutName === 'Showcase') {\n                shortcut.onOpen();\n            }\n        });\n\n        setShortcuts(prevShortcuts => [...prevShortcuts, ...newShortcuts]);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        const snapToGrid = () => {\n            setPositions((prevPositions) => {\n                const newPositions = { ...prevPositions };\n                Object.keys(newPositions).forEach((key) => {\n                    newPositions[key].top = Math.round(newPositions[key].top / GRID_SIZE) * GRID_SIZE;\n                    newPositions[key].left = Math.round(newPositions[key].left / GRID_SIZE) * GRID_SIZE;\n                });\n                return newPositions;\n            });\n        };\n\n        snapToGrid();\n    }, []);\n\n    useEffect(() => {\n\n        const savedShortcuts = sessionStorage.getItem('shortcuts');\n        const savedFolders = sessionStorage.getItem('folders');\n        const savedPositions = sessionStorage.getItem('positions');\n        const savedFolderNames = sessionStorage.getItem('folderNames');\n        const savedNextFolderId = sessionStorage.getItem('nextFolderId');\n        const savedNextFileId = sessionStorage.getItem('nextFileId');\n        const savedWindows = sessionStorage.getItem('windows');\n    \n        if (savedShortcuts) {\n            const parsedShortcuts = JSON.parse(savedShortcuts);\n            parsedShortcuts.forEach((shortcut: DesktopShortcutProps) => {\n                shortcut.onOpen = () => {\n                    const app = APPLICATIONS[shortcut.shortcutName.toLowerCase()];\n                    if (app) {\n                        addWindow(\n                            app.key,\n                            <app.component\n                                onInteract={() => onWindowInteract(app.key)}\n                                onMinimize={() => minimizeWindow(app.key)}\n                                onClose={() => removeWindow(app.key)}\n                                key={app.key}\n                            />\n                        );\n                    }\n                };\n            });\n            setShortcuts(parsedShortcuts);\n        }\n        if (savedFolders) {\n            setFolders(JSON.parse(savedFolders));\n        }\n        if (savedPositions) {\n            setPositions(JSON.parse(savedPositions));\n        }\n        if (savedFolderNames) {\n            setFolderNames(JSON.parse(savedFolderNames));\n        }\n        if (savedNextFolderId) {\n            setNextFolderId(JSON.parse(savedNextFolderId));\n        }\n        if (savedNextFileId) {\n            setNextFileId(JSON.parse(savedNextFileId));\n        }\n        if (savedWindows) {\n            setWindows(JSON.parse(savedWindows));\n        }\n    }, []);\n    \n    useEffect(() => {\n\n        sessionStorage.setItem('shortcuts', JSON.stringify(shortcuts));\n        sessionStorage.setItem('folders', JSON.stringify(folders));\n        sessionStorage.setItem('positions', JSON.stringify(positions));\n        sessionStorage.setItem('folderNames', JSON.stringify(folderNames));\n        sessionStorage.setItem('nextFolderId', JSON.stringify(nextFolderId));\n        sessionStorage.setItem('nextFileId', JSON.stringify(nextFileId));\n        sessionStorage.setItem('windows', JSON.stringify(windows));\n    }, [shortcuts, folders, positions, folderNames, nextFolderId, nextFileId, windows]);\n\n    const rebootDesktop = useCallback(() => {\n        setWindows({});\n    }, []);\n\n    const removeWindow = useCallback((key: string) => {\n        // Absolute hack and a half\n        setTimeout(() => {\n            setWindows((prevWindows) => {\n                const newWindows = { ...prevWindows };\n                delete newWindows[key];\n                return newWindows;\n            });\n        }, 100);\n    }, []);\n\n    const minimizeWindow = useCallback((key: string) => {\n        setWindows((prevWindows) => {\n            const newWindows = { ...prevWindows };\n            newWindows[key].minimized = true;\n            return newWindows;\n        });\n    }, []);\n\n    const toggleMinimize = useCallback(\n        (key: string) => {\n            const newWindows = { ...windows };\n            const highestIndex = getHighestZIndex();\n            if (\n                newWindows[key].minimized ||\n                newWindows[key].zIndex === highestIndex\n            ) {\n                newWindows[key].minimized = !newWindows[key].minimized;\n            }\n            newWindows[key].zIndex = getHighestZIndex() + 1;\n            setWindows(newWindows);\n        },\n        [windows, getHighestZIndex]\n    );\n\n    const onWindowInteract = useCallback(\n        (key: string) => {\n            setWindows((prevWindows) => {\n                const newWindows = { ...prevWindows };\n                const highestZIndex = getHighestZIndex();\n                newWindows[key].zIndex = highestZIndex + 1;\n                return newWindows;\n            });\n        },\n        [getHighestZIndex]\n    );\n\n    const startShutdown = useCallback(() => {\n        setTimeout(() => {\n            setShutdown(true);\n            setNumShutdowns(numShutdowns + 1);\n        }, 600);\n    }, [numShutdowns]);\n\n    const addWindow = useCallback(\n        (key: string, element: JSX.Element, zIndex?: number) => {\n            const highestZIndex = getHighestZIndex();\n            const existingWindows = Object.keys(windows).length;\n            const top = INITIAL_OFFSET.top + (existingWindows * WINDOW_OFFSET);\n            const left = INITIAL_OFFSET.left + (existingWindows * WINDOW_OFFSET);\n\n            // Always set new windows to highest z-index + 1\n            const newZIndex = Math.max(zIndex || 0, highestZIndex + 1);\n\n            setWindows((prevState) => ({\n                ...prevState,\n                [key]: {\n                    zIndex: newZIndex,\n                    minimized: false,\n                    component: React.cloneElement(element, { updateBackground }),\n                    name: APPLICATIONS[key].name,\n                    icon: APPLICATIONS[key].shortcutIcon,\n                    top: top % window.innerHeight,\n                    left: left % window.innerWidth,\n                },\n            }));\n            onWindowInteract(key);\n        },\n        [getHighestZIndex, updateBackground, windows]\n    );\n\n    const handleDragStart = (e: React.DragEvent<HTMLDivElement>, key: string) => {\n        e.dataTransfer.setData('text/plain', key);\n    };\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        const key = e.dataTransfer.getData('text/plain');\n        const rect = e.currentTarget.getBoundingClientRect();\n        let top = e.clientY - rect.top;\n        let left = e.clientX - rect.left;\n\n        // Snap to grid\n        top = Math.round(top / GRID_SIZE) * GRID_SIZE;\n        left = Math.round(left / GRID_SIZE) * GRID_SIZE;\n\n        if (top > window.innerHeight - TOOLBAR_HEIGHT - GRID_SIZE) {\n            top = window.innerHeight - TOOLBAR_HEIGHT - GRID_SIZE;\n        }\n\n        // Check for collisions and adjust position if necessary\n        const newPosition = { top, left };\n        let collision = Object.values(positions).some(\n            (pos) => pos.top === newPosition.top && pos.left === newPosition.left\n        );\n\n        while (collision) {\n            newPosition.top += GRID_SIZE;\n            if (newPosition.top > window.innerHeight - TOOLBAR_HEIGHT - GRID_SIZE) {\n                newPosition.top = INITIAL_OFFSET.top;\n                newPosition.left += GRID_SIZE;\n            }\n            collision = Object.values(positions).some(\n                (pos) => pos.top === newPosition.top && pos.left === newPosition.left\n            );\n        }\n\n        setPositions((prevPositions) => ({\n            ...prevPositions,\n            [key]: newPosition,\n        }));\n    };\n\n    const handleDropOnFolder = (e: React.DragEvent<HTMLDivElement>, folderId: string) => {\n        const key = e.dataTransfer.getData('text/plain');\n        const item = shortcuts.find(shortcut => shortcut.shortcutName === key);\n        if (item) {\n            setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== key));\n            addItemToFolder(folderId, item);\n        }\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    };\n\n    const createNewFolder = () => {\n        const newFolderId = `folder-${nextFolderId}`;\n        const defaultName = `New Folder ${nextFolderId}`;\n        \n        setFolders(prev => ({\n            ...prev,\n            [newFolderId]: []\n        }));\n\n        setFolderNames(prev => ({\n            ...prev,\n            [newFolderId]: defaultName\n        }));\n\n        // Set initial position for the new folder\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            [newFolderId]: position\n        }));\n        \n        setNextFolderId(prev => prev + 1);\n        setContextMenu({ visible: false, x: 0, y: 0, type: 'desktop' });\n    };\n\n    const openFolder = (folderId: string, folderName: string) => {\n        const highestZIndex = getHighestZIndex();\n\n        const folderWindow = (\n            <Folder\n                key={folderId}\n                folderId={folderId}\n                folderName={folderNames[folderId] || folderName}\n                contents={folders[folderId] || []}\n                onInteract={() => onWindowInteract(folderId)}\n                onMinimize={() => minimizeWindow(folderId)}\n                onClose={() => removeWindow(folderId)}\n                onAddItem={addItemToFolder}\n                onRemoveItem={removeItemFromFolder}\n                onRename={handleFolderRename}\n                addWindow={addWindow}\n                getHighestZIndex={getHighestZIndex}\n                bringToFront={() => bringToFront(folderId)}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            [folderId]: {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: folderWindow,\n                name: folderNames[folderId] || folderName,\n                icon: 'folderIcon'\n            }\n        }));\n    };\n\n    const bringToFront = (key: string) => {\n        setWindows(prevWindows => {\n            const newWindows = { ...prevWindows };\n            const highestZIndex = getHighestZIndex();\n            newWindows[key].zIndex = highestZIndex + 1;\n            return newWindows;\n        });\n    };\n\n    const addItemToFolder = (folderId: string, item: DesktopShortcutProps) => {\n        setFolders(prev => ({\n            ...prev,\n            [folderId]: [...(prev[folderId] || []), item]\n        }));\n    };\n\n    const removeItemFromFolder = (folderId: string, itemName: string) => {\n        setFolders(prev => ({\n            [folderId]: prev[folderId].filter(item => item.shortcutName !== itemName)\n        }));\n    };\n\n    const handleContextMenu = (e: React.MouseEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        setContextMenu({ visible: true, x: e.clientX, y: e.clientY, type: 'desktop' });\n    };\n\n    const handleFolderContextMenu = (e: React.MouseEvent<HTMLDivElement>, folderId: string) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setContextMenu({ \n            visible: true, \n            x: e.clientX, \n            y: e.clientY, \n            type: 'folder',\n            targetId: folderId \n        });\n    };\n\n    const handleFileContextMenu = (e: React.MouseEvent<HTMLDivElement>, fileName: string) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setContextMenu({ \n            visible: true, \n            x: e.clientX, \n            y: e.clientY, \n            type: 'file',\n            targetId: fileName \n        });\n    };\n\n    const handleClick = () => {\n        if (contextMenu.visible) {\n            setContextMenu({ visible: false, x: 0, y: 0, type: 'desktop' });\n        }\n    };\n\n    const handleFolderRename = (folderId: string, newName: string) => {\n        setFolderNames(prev => ({\n            ...prev,\n            [folderId]: newName\n        }));\n    };\n\n    const handleRename = () => {\n        if (contextMenu.targetId) {\n            setRenamingFolder(contextMenu.targetId);\n            setContextMenu(prev => ({ ...prev, visible: false }));\n        }\n    };\n\n    const createNewTextFile = () => {\n        const newFileId = `textfile-${nextFileId}`;\n        const defaultName = `New Text File ${nextFileId}.txt`;\n\n        const newTextFileShortcut: DesktopShortcutProps = {\n            shortcutName: defaultName,\n            icon: 'textFileIcon',\n            onOpen: () => openTextFile(newFileId, defaultName)\n        };\n\n        setShortcuts(prev => [...prev, newTextFileShortcut]);\n\n        // Set initial position for the new text file\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            [newFileId]: position\n        }));\n\n        setNextFileId(prev => prev + 1);\n        setContextMenu({ visible: false, x: 0, y: 0, type: 'desktop' });\n    };\n\n    const openTextFile = (fileId: string, fileName: string) => {\n        const highestZIndex = getHighestZIndex();\n\n        const textEditorWindow = (\n            <TextEditor\n                key={fileId}\n                fileName={fileName}\n                onInteract={() => onWindowInteract(fileId)}\n                onMinimize={() => minimizeWindow(fileId)}\n                onClose={() => removeWindow(fileId)}\n                onRename={(newName) => handleTextFileRename(fileId, newName)}\n                isRenaming={renamingFolder === fileId}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            [fileId]: {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: textEditorWindow,\n                name: fileName,\n                icon: 'textFileIcon'\n            }\n        }));\n    };\n\n    const handleTextFileRename = (fileId: string, newName: string) => {\n        setShortcuts(prevShortcuts => prevShortcuts.map(shortcut => {\n            if (shortcut.shortcutName === fileId) {\n                return { ...shortcut, shortcutName: newName };\n            }\n            return shortcut;\n        }));\n        setWindows(prevWindows => {\n            const newWindows = { ...prevWindows };\n            if (newWindows[fileId]) {\n                newWindows[fileId].name = newName;\n            }\n            return newWindows;\n        });\n        setRenamingFolder(null);\n    };\n\n    const deleteFolder = (folderId: string) => {\n        const folderContents = folders[folderId];\n        if (folderContents) {\n            folderContents.forEach(item => addItemToFolder(\"Recycle Bin\", item));\n        }\n        addItemToFolder(\"Recycle Bin\", {\n            shortcutName: folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`,\n            icon: \"folderIcon\",\n            onOpen: openRecycleBin\n        });\n        setFolders(prev => {\n            const newFolders = { ...prev };\n            delete newFolders[folderId];\n            return newFolders;\n        });\n        setFolderNames(prev => {\n            const newFolderNames = { ...prev };\n            delete newFolderNames[folderId];\n            return newFolderNames;\n        });\n        setWindows(prev => {\n            const newWindows = { ...prev };\n            delete newWindows[folderId];\n            return newWindows;\n        });\n        sessionStorage.removeItem(folderId);\n    };\n\n    const deleteFile = (fileName: string) => {\n        const file = shortcuts.find(shortcut => shortcut.shortcutName === fileName);\n        if (file) {\n            addItemToFolder(\"Recycle Bin\", file);\n        }\n        setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== fileName));\n        setWindows(prev => {\n            const newWindows = { ...prev };\n            delete newWindows[fileName];\n            return newWindows;\n        });\n        sessionStorage.removeItem(fileName); // Remove from session storage\n    };\n\n    const initializeDocumentsFolder = () => {\n        const documentsShortcut: DesktopShortcutProps = {\n            shortcutName: \"Documents\",\n            icon: \"documentsIcon\",\n            onOpen: openDocuments\n        };\n\n        setShortcuts(prevShortcuts => {\n            const existingDocumentsShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Documents\");\n            if (!existingDocumentsShortcut) {\n                return [...prevShortcuts, documentsShortcut];\n            }\n            return prevShortcuts;\n        });\n\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            \"Documents\": position\n        }));\n    };\n\n    const openDocuments = () => {\n        const highestZIndex = getHighestZIndex();\n\n        const docWindow = (\n            <Documents\n                onInteract={() => onWindowInteract(\"Documents\")}\n                onMinimize={() => minimizeWindow(\"Documents\")}\n                onClose={() => removeWindow(\"Documents\")}\n                addWindow={addWindow}\n                getHighestZIndex={getHighestZIndex}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            \"Documents\": {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: docWindow,\n                name: \"Documents\",\n                icon: 'documentsIcon'\n            }\n        }));\n    };\n\n    const openAppByName = (appName: string) => {\n        const appKey = Object.keys(APPLICATIONS).find(\n            (key) => APPLICATIONS[key].name.toLowerCase() === appName.toLowerCase()\n        );\n        if (appKey) {\n            const app = APPLICATIONS[appKey];\n            addWindow(\n                app.key,\n                <app.component\n                    onInteract={() => onWindowInteract(app.key)}\n                    onMinimize={() => minimizeWindow(app.key)}\n                    onClose={() => removeWindow(app.key)}\n                    key={app.key}\n                />\n            );\n        } else {\n            alert(`Application \"${appName}\" not found.`);\n        }\n    };\n\n    const initializeRecycleBin = () => {\n        const recycleBinShortcut: DesktopShortcutProps = {\n            shortcutName: \"Recycle Bin\",\n            icon: \"recycleBinIcon\",\n            onOpen: openRecycleBin\n        };\n\n        setShortcuts(prevShortcuts => {\n            const existingRecycleBinShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Recycle Bin\");\n            if (!existingRecycleBinShortcut) {\n                return [...prevShortcuts, recycleBinShortcut];\n            }\n            return prevShortcuts;\n        });\n\n        setFolders(prev => ({\n            ...prev,\n            \"Recycle Bin\": []\n        }));\n\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            \"Recycle Bin\": position\n        }));\n    };\n\n    const openRecycleBin = () => {\n        const highestZIndex = getHighestZIndex();\n\n        const recycleBinWindow = (\n            <RecycleBin\n                contents={folders[\"Recycle Bin\"] || []}\n                onInteract={() => onWindowInteract(\"Recycle Bin\")}\n                onMinimize={() => minimizeWindow(\"Recycle Bin\")}\n                onClose={() => removeWindow(\"Recycle Bin\")}\n                onAddItem={(item) => addItemToFolder(\"Recycle Bin\", item)}\n                onRemoveItem={(itemName) => removeItemFromFolder(\"Recycle Bin\", itemName)}\n                onRename={(itemName, newName) => handleTextFileRename(itemName, newName)}\n                addWindow={addWindow}\n                getHighestZIndex={getHighestZIndex}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            \"Recycle Bin\": {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: recycleBinWindow,\n                name: \"Recycle Bin\",\n                icon: folders[\"Recycle Bin\"] && folders[\"Recycle Bin\"].length > 0 ? 'recycleBinFullIcon' : 'recycleBinIcon'\n            }\n        }));\n    };\n\n    const emptyRecycleBin = () => {\n        setFolders(prev => ({\n            ...prev,\n            \"Recycle Bin\": []\n        }));\n    };\n\n    const arrangeIcons = () => {\n        const newPositions: { [key: string]: { top: number; left: number } } = {};\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        let index = 0;\n    \n        const isPositionOccupied = (top: number, left: number) => {\n            return Object.values(newPositions).some(\n                (pos) => pos.top === top && pos.left === left\n            );\n        };\n    \n        const getNextAvailablePosition = (startTop: number, startLeft: number) => {\n            let top = startTop;\n            let left = startLeft;\n            while (isPositionOccupied(top, left)) {\n                top += VERTICAL_SPACING;\n                if (top >= window.innerHeight - VERTICAL_SPACING) {\n                    top = INITIAL_OFFSET.top;\n                    left += HORIZONTAL_SPACING;\n                }\n            }\n            return { top, left };\n        };\n    \n        shortcuts.forEach((shortcut) => {\n            if (shortcut.shortcutName !== \"Documents\" && shortcut.shortcutName !== \"Recycle Bin\") {\n                const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n                const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n                const initialPosition = {\n                    top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n                    left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n                };\n                const position = getNextAvailablePosition(initialPosition.top, initialPosition.left);\n                newPositions[shortcut.shortcutName] = position;\n                index++;\n            }\n        });\n    \n        Object.keys(folders).forEach((folderId) => {\n            const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n            const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n            const initialPosition = {\n                top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n                left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n            };\n            const position = getNextAvailablePosition(initialPosition.top, initialPosition.left);\n            newPositions[folderId] = position;\n            index++;\n        });\n    \n        newPositions[\"Documents\"] = getNextAvailablePosition(\n            window.innerHeight - VERTICAL_SPACING - 50,\n            INITIAL_OFFSET.left\n        );\n    \n        newPositions[\"Recycle Bin\"] = getNextAvailablePosition(\n            window.innerHeight - VERTICAL_SPACING - 50,\n            INITIAL_OFFSET.left + HORIZONTAL_SPACING\n        );\n    \n        setPositions(newPositions);\n    };\n\n    useEffect(() => {\n        arrangeIcons();\n    }, [shortcuts, folders]);\n\n    return !shutdown ? (\n        <div style={styles.desktop} onDrop={handleDrop} onDragOver={handleDragOver} onContextMenu={handleContextMenu} onClick={handleClick}>\n            {/* For each window in windows, loop over and render  */}\n            {Object.keys(windows).map((key) => {\n                const element = windows[key].component;\n                if (!element) return <div key={`win-${key}`}></div>;\n                return (\n                    <div\n                        key={`win-${key}`}\n                        style={Object.assign(\n                            {},\n                            { zIndex: windows[key].zIndex },\n                            windows[key].minimized && styles.minimized\n                        )}\n                    >\n                        {React.cloneElement(element, {\n                            key,\n                            onInteract: () => onWindowInteract(key),\n                            onClose: () => removeWindow(key),\n                        })}\n                    </div>\n                );\n            })}\n            <div style={styles.shortcuts}>\n                {shortcuts.map((shortcut, i) => {\n                    const position = positions[shortcut.shortcutName] || {\n                        top: INITIAL_OFFSET.top + (i % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * VERTICAL_SPACING,\n                        left: INITIAL_OFFSET.left + Math.floor(i / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n                    };\n                    \n                    return (\n                        <div\n                            style={Object.assign({}, styles.shortcutContainer, position)}\n                            key={shortcut.shortcutName}\n                            draggable\n                            onDragStart={(e) => handleDragStart(e, shortcut.shortcutName)}\n                            onContextMenu={(e) => handleFileContextMenu(e, shortcut.shortcutName)}\n                        >\n                            <DesktopShortcut\n                                icon={shortcut.icon}\n                                shortcutName={shortcut.shortcutName}\n                                onOpen={shortcut.onOpen}\n                                isRenaming={renamingFolder === shortcut.shortcutName}\n                                onRename={(newName) => handleTextFileRename(shortcut.shortcutName, newName)}\n                            />\n                        </div>\n                    );\n                })}\n                {Object.keys(folders).map((folderId) => {\n                    if (folderId === \"Recycle Bin\") return null;\n                    const folder = folders[folderId];\n                    const folderName = folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`;\n                    const position = positions[folderId] || {\n                        top: INITIAL_OFFSET.top + ((shortcuts.length + parseInt(folderId.split('-')[1]) - 1) % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * VERTICAL_SPACING,\n                        left: INITIAL_OFFSET.left + Math.floor((shortcuts.length + parseInt(folderId.split('-')[1]) - 1) / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n                    };\n                    \n                    return (\n                        <div\n                            style={Object.assign({}, styles.shortcutContainer, position)}\n                            key={folderId}\n                            draggable\n                            onDragStart={(e) => handleDragStart(e, folderId)}\n                            onContextMenu={(e) => handleFolderContextMenu(e, folderId)}\n                            onDrop={(e) => handleDropOnFolder(e, folderId)}\n                            onDragOver={handleDragOver}\n                        >\n                            <DesktopShortcut\n                                icon=\"folderIcon\"\n                                shortcutName={folderName}\n                                onOpen={() => openFolder(folderId, folderName)}\n                                isRenaming={renamingFolder === folderId}\n                                onRename={(newName) => {\n                                    handleFolderRename(folderId, newName);\n                                    setRenamingFolder(null);\n                                }}\n                            />\n                        </div>\n                    );\n                })}\n                <div\n                    style={Object.assign({}, styles.shortcutContainer, positions[\"Recycle Bin\"])}\n                    key=\"Recycle Bin\"\n                    draggable\n                    onDragStart={(e) => handleDragStart(e, \"Recycle Bin\")}\n                    onContextMenu={(e) => handleFileContextMenu(e, \"Recycle Bin\")}\n                >\n                    <DesktopShortcut\n                        icon={folders[\"Recycle Bin\"] && folders[\"Recycle Bin\"].length > 0 ? 'recycleBinFullIcon' : 'recycleBinIcon'}\n                        shortcutName=\"Recycle Bin\"\n                        onOpen={openRecycleBin}\n                        isRenaming={renamingFolder === \"Recycle Bin\"}\n                        onRename={(newName) => handleTextFileRename(\"Recycle Bin\", newName)}\n                    />\n                </div>\n            </div>\n            <Toolbar\n                windows={windows}\n                toggleMinimize={toggleMinimize}\n                shutdown={startShutdown}\n                addWindow={addWindow}\n                updateBackground={updateBackground}\n                removeWindow={removeWindow}\n                openAppByName={openAppByName}\n                openDocuments={openDocuments}\n            />\n            {contextMenu.visible && (\n                <div style={{ ...styles.contextMenu, top: contextMenu.y, left: contextMenu.x }}>\n                    {contextMenu.type === 'desktop' ? (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={createNewFolder}>\n                                New Folder\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={createNewTextFile}>\n                                New Text File\n                            </div>\n                        </>\n                    ) : contextMenu.type === 'folder' ? (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={handleRename}>\n                                Rename\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={() => deleteFolder(contextMenu.targetId!)}>\n                                Delete\n                            </div>\n                        </>\n                    ) : contextMenu.type === 'file' ? (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={handleRename}>\n                                Rename\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={() => deleteFile(contextMenu.targetId!)}>\n                                Delete\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={handleRename}>\n                                Rename\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={() => deleteFile(contextMenu.targetId!)}>\n                                Delete\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={emptyRecycleBin}>\n                                Empty Recycle Bin\n                            </div>\n                        </>\n                    )}\n                </div>\n            )}\n        </div>\n    ) : (\n        <ShutdownSequence\n            setShutdown={setShutdown}\n            numShutdowns={numShutdowns}\n        />\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    desktop: {\n        minHeight: '100%',\n        flex: 1,\n        position: 'relative',\n    },\n    shutdown: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: '#1d2e2f',\n    },\n    shortcutContainer: {\n        position: 'absolute',\n        cursor: 'move',\n    },\n    shortcuts: {\n        position: 'absolute',\n        top: 16,\n        left: 6,\n    },\n    minimized: {\n        pointerEvents: 'none',\n        opacity: 0,\n    },\n    contextMenu: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        border: '1px solid #ccc',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n        zIndex: 1000,\n    },\n    contextMenuItem: {\n        padding: '8px 12px',\n        cursor: 'pointer',\n    },\n};\n\nexport default Desktop;"]},"metadata":{},"sourceType":"module"}