{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/inner-web/src/components/os/Desktop.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport Doom from '../applications/Doom';\nimport OregonTrail from '../applications/OregonTrail';\nimport ShutdownSequence from './ShutdownSequence';\nimport Wordle from '../applications/wordle';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut from './DesktopShortcut';\nimport Scrabble from '../applications/Scrabble'; // import Minesweeper from '../applications/MinesweeperGame/Minesweeper';\n\nimport Credits from '../applications/Credits';\nimport InternetExplorer from '../applications/InternetExplorer';\nimport Folder from '../applications/folder';\nimport RecycleBin from '../applications/RecycleBin';\nimport Settings from '../applications/Settings';\nimport bg0 from '../../assets/bg/bg0.png';\nimport TextEditor from '../applications/TextEditor';\nimport MSN from '../applications/MSN';\nimport Documents from '../applications/Documents';\nimport GamesFolder from '../applications/GamesFolder';\nimport GamesText from '../applications/GamesText';\nimport Sudoku from '../applications/Sudoku';\nimport Hangman from '../applications/Hangman';\nimport Game2048 from '../applications/Game2048';\nimport TicTacToe from '../applications/TicTacToe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 100;\nconst VERTICAL_SPACING = 104;\nconst HORIZONTAL_SPACING = 100;\nconst INITIAL_OFFSET = {\n  top: 16,\n  left: 6\n};\nconst WINDOW_OFFSET = 30;\n\nconst Desktop = props => {\n  _s();\n\n  const [windows, setWindows] = useState({});\n  const [shortcuts, setShortcuts] = useState([]);\n  const [positions, setPositions] = useState({});\n  const [shutdown, setShutdown] = useState(false);\n  const [numShutdowns, setNumShutdowns] = useState(1);\n  const [folders, setFolders] = useState({});\n  const [nextFolderId, setNextFolderId] = useState(1);\n  const [nextFileId, setNextFileId] = useState(1);\n  const [folderContents, setFolderContents] = useState({});\n  const [contextMenu, setContextMenu] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    type: 'desktop'\n  });\n  const [background, setBackground] = useState(null);\n  const [theme, setTheme] = useState(null);\n  const [folderNames, setFolderNames] = useState({});\n  const [renamingFolder, setRenamingFolder] = useState(null); // Initialize background from localStorage on component mount\n\n  useEffect(() => {\n    const savedBg = localStorage.getItem('background');\n    const savedTheme = localStorage.getItem('theme');\n\n    if (savedBg && savedTheme) {\n      updateBackground(savedBg, savedTheme);\n    } else {\n      const defaultBg = bg0;\n      const defaultTheme = '#098684';\n      updateBackground(defaultBg, defaultTheme);\n      localStorage.setItem('background', defaultBg);\n      localStorage.setItem('theme', defaultTheme);\n    }\n  }, []);\n  useEffect(() => {\n    const bodyBG = document.getElementsByTagName('body')[0];\n    bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n    bodyBG.style.backgroundColor = '#c5c4c4';\n    bodyBG.style.backgroundSize = 'cover';\n    bodyBG.style.backgroundPosition = 'center';\n    bodyBG.style.backgroundRepeat = 'no-repeat';\n    bodyBG.style.height = '100vh';\n    bodyBG.style.margin = '0';\n  }, []);\n  const updateBackground = useCallback((background, theme) => {\n    console.log('Updating background:', {\n      background,\n      theme\n    });\n    setBackground(background);\n    setTheme(theme);\n    const bodyBG = document.getElementsByTagName('body')[0];\n    bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n    bodyBG.style.backgroundColor = theme;\n    bodyBG.style.backgroundImage = `url(${background})`;\n    bodyBG.style.backgroundSize = 'cover';\n    bodyBG.style.backgroundPosition = 'center';\n    bodyBG.style.backgroundRepeat = 'no-repeat';\n    bodyBG.style.height = '100vh';\n    bodyBG.style.margin = '0';\n  }, []);\n  const getHighestZIndex = useCallback(() => {\n    let highestZIndex = 0;\n    Object.keys(windows).forEach(key => {\n      const window = windows[key];\n\n      if (window) {\n        if (window.zIndex > highestZIndex) highestZIndex = window.zIndex;\n      }\n    });\n    return highestZIndex;\n  }, [windows]);\n\n  const openCreditsApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('credits', /*#__PURE__*/_jsxDEV(Credits, {\n      onInteract: () => onWindowInteract('credits'),\n      onMinimize: () => minimizeWindow('credits'),\n      onClose: () => removeWindow('credits')\n    }, \"credits\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openMSNApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('msn', /*#__PURE__*/_jsxDEV(MSN, {\n      onInteract: () => onWindowInteract('msn'),\n      onMinimize: () => minimizeWindow('msn'),\n      onClose: () => removeWindow('msn')\n    }, \"msn\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openWordleApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('wordle', /*#__PURE__*/_jsxDEV(Wordle, {\n      onInteract: () => onWindowInteract('wordle'),\n      onMinimize: () => minimizeWindow('wordle'),\n      onClose: () => removeWindow('wordle')\n    }, \"wordle\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openGamesText = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('gamesText', /*#__PURE__*/_jsxDEV(GamesText, {\n      fileName: \"Games Info\",\n      onInteract: () => onWindowInteract('gamesText'),\n      onMinimize: () => minimizeWindow('gamesText'),\n      onClose: () => removeWindow('gamesText')\n    }, \"gamesText\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openTicTacToeApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('ticTacToe', /*#__PURE__*/_jsxDEV(TicTacToe, {\n      onInteract: () => onWindowInteract('ticTacToe'),\n      onMinimize: () => minimizeWindow('ticTacToe'),\n      onClose: () => removeWindow('ticTacToe')\n    }, \"ticTacToe\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this));\n  };\n\n  const APPLICATIONS = {\n    // Removed the folder entry from apps since i made it seperate\n    showcase: {\n      key: 'showcase',\n      name: 'Showcase',\n      shortcutIcon: 'showcaseIcon',\n      component: ShowcaseExplorer\n    },\n    wordle: {\n      key: 'wordle',\n      name: 'Wordle',\n      shortcutIcon: 'wordleIcon',\n      component: Wordle\n    },\n    trail: {\n      key: 'trail',\n      name: 'The Oregon Trail',\n      shortcutIcon: 'trailIcon',\n      component: OregonTrail\n    },\n    doom: {\n      key: 'doom',\n      name: 'Doom',\n      shortcutIcon: 'doomIcon',\n      component: Doom\n    },\n    scrabble: {\n      key: 'scrabble',\n      name: 'Scrabble',\n      shortcutIcon: 'scrabbleIcon',\n      component: Scrabble\n    },\n    // chess: {\n    //     key: 'chess',\n    //     name: 'Chess',\n    //     shortcutIcon: 'chessIcon',\n    //     component: Settings,\n    // },\n    internetExplorer: {\n      key: 'internetExplorer',\n      name: 'Google Chrome',\n      shortcutIcon: 'InternetExplorerIcon',\n      component: InternetExplorer\n    },\n    credits: {\n      key: 'credits',\n      name: 'Credits',\n      shortcutIcon: 'credits',\n      component: Credits\n    },\n    settings: {\n      key: 'settings',\n      name: 'Settings',\n      shortcutIcon: 'setting',\n      component: Settings\n    },\n    gamesFolder: {\n      key: 'gamesFolder',\n      name: 'Games Folder',\n      shortcutIcon: 'folderIcon',\n      component: props => /*#__PURE__*/_jsxDEV(GamesFolder, {\n        onInteract: props.onInteract,\n        onMinimize: props.onMinimize,\n        onClose: props.onClose,\n        openWordleApp: openWordleApp,\n        openGamesText: openGamesText,\n        openSudokuApp: () => {\n          const highestZIndex = getHighestZIndex();\n          addWindow('sudoku', /*#__PURE__*/_jsxDEV(Sudoku, {\n            onInteract: () => onWindowInteract('sudoku'),\n            onMinimize: () => minimizeWindow('sudoku'),\n            onClose: () => removeWindow('sudoku')\n          }, \"sudoku\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this));\n        },\n        openHangmanApp: () => {\n          const highestZIndex = getHighestZIndex();\n          addWindow('hangman', /*#__PURE__*/_jsxDEV(Hangman, {\n            onInteract: () => onWindowInteract('hangman'),\n            onMinimize: () => minimizeWindow('hangman'),\n            onClose: () => removeWindow('hangman')\n          }, \"hangman\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this));\n        },\n        openTicTacToeApp: openTicTacToeApp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)\n    },\n    gamesText: {\n      key: 'gamesText',\n      name: 'Games Info',\n      shortcutIcon: 'textFileIcon',\n      component: GamesText\n    },\n    sudoku: {\n      key: 'sudoku',\n      name: 'Sudoku',\n      shortcutIcon: 'folderIcon',\n      component: Sudoku\n    },\n    hangman: {\n      key: 'hangman',\n      name: 'Hangman',\n      shortcutIcon: 'folderIcon',\n      component: Hangman\n    },\n    game2048: {\n      key: 'game2048',\n      name: '2048',\n      shortcutIcon: 'folderIcon',\n      component: Game2048\n    },\n    ticTacToe: {\n      key: 'ticTacToe',\n      name: 'Tic Tac Toe',\n      shortcutIcon: 'folderIcon',\n      component: TicTacToe\n    } //msn: {\n    //key: 'msn',\n    // name: 'MSN',\n    //shortcutIcon: 'msnIcon',\n    // component: MSN,\n    // },\n    // minesweeper: {\n    //     key: 'minesweeper',\n    //     name: 'Minesweeper',\n    //     shortcutIcon: 'setting',\n    //     component: (props: ExtendedWindowAppProps<any>) => (\n    //         <Window\n    //             closeWindow={props.onClose}\n    //             minimizeWindow={props.onMinimize}\n    //             onInteract={props.onInteract}\n    //             width={400}\n    //             height={400}\n    //             top={100}\n    //             left={100}\n    //             windowTitle=\"Minesweeper\"\n    //             windowBarIcon=\"setting\"\n    //         >\n    //             <Minesweeper\n    //                 onInteract={props.onInteract}\n    //                 onMinimize={props.onMinimize}\n    //                 onClose={props.onClose}\n    //             />\n    //         </Window>\n    //     ),\n    // },\n\n  };\n  useEffect(() => {\n    if (shutdown === true) {\n      rebootDesktop();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [shutdown]);\n  useEffect(() => {\n    const newShortcuts = [];\n    Object.keys(APPLICATIONS).forEach(key => {\n      const app = APPLICATIONS[key];\n\n      if (key !== 'credits' && key !== 'settings' && key !== 'folder' && key !== 'msn' && key !== 'gamesFolder' && key !== 'gamesText' && key !== 'wordle' && key !== 'sudoku' && key !== 'hangman' && key !== 'game2048' && key !== 'ticTacToe') {\n        newShortcuts.push({\n          shortcutName: app.name,\n          icon: app.shortcutIcon,\n          onOpen: () => {\n            addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n              onInteract: () => onWindowInteract(app.key),\n              onMinimize: () => minimizeWindow(app.key),\n              onClose: () => removeWindow(app.key)\n            }, app.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 29\n            }, this));\n          }\n        });\n      }\n    });\n    initializeDocumentsFolder();\n    initializeRecycleBin();\n    newShortcuts.forEach(shortcut => {\n      if (shortcut.shortcutName === 'Showcase') {\n        shortcut.onOpen();\n      }\n    });\n    setShortcuts(prevShortcuts => [...prevShortcuts, ...newShortcuts]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    const savedShortcuts = sessionStorage.getItem('shortcuts');\n    const savedFolders = sessionStorage.getItem('folders');\n    const savedPositions = sessionStorage.getItem('positions');\n    const savedFolderNames = sessionStorage.getItem('folderNames');\n    const savedNextFolderId = sessionStorage.getItem('nextFolderId');\n    const savedNextFileId = sessionStorage.getItem('nextFileId');\n    const savedWindows = sessionStorage.getItem('windows');\n\n    if (savedShortcuts) {\n      const parsedShortcuts = JSON.parse(savedShortcuts);\n      parsedShortcuts.forEach(shortcut => {\n        shortcut.onOpen = () => {\n          const app = APPLICATIONS[shortcut.shortcutName.toLowerCase()];\n\n          if (app) {\n            addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n              onInteract: () => onWindowInteract(app.key),\n              onMinimize: () => minimizeWindow(app.key),\n              onClose: () => removeWindow(app.key)\n            }, app.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this));\n          }\n        };\n      });\n      setShortcuts(parsedShortcuts);\n    }\n\n    if (savedFolders) {\n      setFolders(JSON.parse(savedFolders));\n    }\n\n    if (savedPositions) {\n      setPositions(JSON.parse(savedPositions));\n    }\n\n    if (savedFolderNames) {\n      setFolderNames(JSON.parse(savedFolderNames));\n    }\n\n    if (savedNextFolderId) {\n      setNextFolderId(JSON.parse(savedNextFolderId));\n    }\n\n    if (savedNextFileId) {\n      setNextFileId(JSON.parse(savedNextFileId));\n    }\n\n    if (savedWindows) {\n      setWindows(JSON.parse(savedWindows));\n    }\n  }, []);\n  useEffect(() => {\n    sessionStorage.setItem('shortcuts', JSON.stringify(shortcuts));\n    sessionStorage.setItem('folders', JSON.stringify(folders));\n    sessionStorage.setItem('positions', JSON.stringify(positions));\n    sessionStorage.setItem('folderNames', JSON.stringify(folderNames));\n    sessionStorage.setItem('nextFolderId', JSON.stringify(nextFolderId));\n    sessionStorage.setItem('nextFileId', JSON.stringify(nextFileId));\n    sessionStorage.setItem('windows', JSON.stringify(windows));\n  }, [shortcuts, folders, positions, folderNames, nextFolderId, nextFileId, windows]);\n  const rebootDesktop = useCallback(() => {\n    setWindows({});\n  }, []);\n  const removeWindow = useCallback(key => {\n    // Absolute hack and a half\n    setTimeout(() => {\n      setWindows(prevWindows => {\n        const newWindows = { ...prevWindows\n        };\n        delete newWindows[key];\n        return newWindows;\n      });\n    }, 100);\n  }, []);\n  const minimizeWindow = useCallback(key => {\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n      newWindows[key].minimized = true;\n      return newWindows;\n    });\n  }, []);\n  const toggleMinimize = useCallback(key => {\n    const newWindows = { ...windows\n    };\n    const highestIndex = getHighestZIndex();\n\n    if (newWindows[key].minimized || newWindows[key].zIndex === highestIndex) {\n      newWindows[key].minimized = !newWindows[key].minimized;\n    }\n\n    newWindows[key].zIndex = getHighestZIndex() + 1;\n    setWindows(newWindows);\n  }, [windows, getHighestZIndex]);\n  const onWindowInteract = useCallback(key => {\n    setWindows(prevWindows => ({ ...prevWindows,\n      [key]: { ...prevWindows[key],\n        zIndex: 1 + getHighestZIndex()\n      }\n    }));\n  }, [setWindows, getHighestZIndex]);\n  const startShutdown = useCallback(() => {\n    setTimeout(() => {\n      setShutdown(true);\n      setNumShutdowns(numShutdowns + 1);\n    }, 600);\n  }, [numShutdowns]);\n  const addWindow = useCallback((key, element, zIndex) => {\n    const highestZIndex = getHighestZIndex();\n    const existingWindows = Object.keys(windows).length;\n    const top = INITIAL_OFFSET.top + existingWindows * WINDOW_OFFSET;\n    const left = INITIAL_OFFSET.left + existingWindows * WINDOW_OFFSET; // Always set new windows to highest z-index + 1\n\n    const newZIndex = Math.max(zIndex || 0, highestZIndex + 1);\n    setWindows(prevState => ({ ...prevState,\n      [key]: {\n        zIndex: newZIndex,\n        minimized: false,\n        component: /*#__PURE__*/React.cloneElement(element, {\n          updateBackground\n        }),\n        name: APPLICATIONS[key].name,\n        icon: APPLICATIONS[key].shortcutIcon,\n        top: top % window.innerHeight,\n        left: left % window.innerWidth\n      }\n    }));\n  }, [getHighestZIndex, updateBackground, windows]);\n\n  const handleDragStart = (e, key) => {\n    e.dataTransfer.setData('text/plain', key);\n  };\n\n  const handleDrop = e => {\n    const key = e.dataTransfer.getData('text/plain');\n    const rect = e.currentTarget.getBoundingClientRect();\n    let top = e.clientY - rect.top;\n    let left = e.clientX - rect.left; // Snap to grid\n\n    top = Math.round(top / GRID_SIZE) * GRID_SIZE;\n    left = Math.round(left / GRID_SIZE) * GRID_SIZE; // Check for collisions and adjust position if necessary\n\n    const newPosition = {\n      top,\n      left\n    };\n    const collision = Object.values(positions).some(pos => pos.top === newPosition.top && pos.left === newPosition.left);\n\n    if (collision) {\n      newPosition.top += GRID_SIZE;\n    }\n\n    setPositions(prevPositions => ({ ...prevPositions,\n      [key]: newPosition\n    }));\n  };\n\n  const handleDropOnFolder = (e, folderId) => {\n    const key = e.dataTransfer.getData('text/plain');\n    const item = shortcuts.find(shortcut => shortcut.shortcutName === key);\n\n    if (item) {\n      setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== key));\n      addItemToFolder(folderId, item);\n    }\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n\n  const createNewFolder = () => {\n    const newFolderId = `folder-${nextFolderId}`;\n    const defaultName = `New Folder ${nextFolderId}`;\n    setFolders(prev => ({ ...prev,\n      [newFolderId]: []\n    }));\n    setFolderNames(prev => ({ ...prev,\n      [newFolderId]: defaultName\n    })); // Set initial position for the new folder\n\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      [newFolderId]: position\n    }));\n    setNextFolderId(prev => prev + 1);\n    setContextMenu({\n      visible: false,\n      x: 0,\n      y: 0,\n      type: 'desktop'\n    });\n  };\n\n  const openFolder = (folderId, folderName) => {\n    const highestZIndex = getHighestZIndex();\n\n    const folderWindow = /*#__PURE__*/_jsxDEV(Folder, {\n      folderId: folderId,\n      folderName: folderNames[folderId] || folderName,\n      contents: folders[folderId] || [],\n      onInteract: () => onWindowInteract(folderId),\n      onMinimize: () => minimizeWindow(folderId),\n      onClose: () => removeWindow(folderId),\n      onAddItem: addItemToFolder,\n      onRemoveItem: removeItemFromFolder,\n      onRename: handleFolderRename,\n      addWindow: addWindow,\n      getHighestZIndex: getHighestZIndex,\n      bringToFront: () => bringToFront(folderId)\n    }, folderId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      [folderId]: {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: folderWindow,\n        name: folderNames[folderId] || folderName,\n        icon: 'folderIcon'\n      }\n    }));\n  };\n\n  const bringToFront = key => {\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n      const highestZIndex = getHighestZIndex();\n      newWindows[key].zIndex = highestZIndex + 1;\n      return newWindows;\n    });\n  };\n\n  const addItemToFolder = (folderId, item) => {\n    setFolders(prev => ({ ...prev,\n      [folderId]: [...(prev[folderId] || []), item]\n    }));\n  };\n\n  const removeItemFromFolder = (folderId, itemName) => {\n    setFolders(prev => ({\n      [folderId]: prev[folderId].filter(item => item.shortcutName !== itemName)\n    }));\n  };\n\n  const handleContextMenu = e => {\n    e.preventDefault();\n    setContextMenu({\n      visible: true,\n      x: e.clientX,\n      y: e.clientY,\n      type: 'desktop'\n    });\n  };\n\n  const handleFolderContextMenu = (e, folderId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setContextMenu({\n      visible: true,\n      x: e.clientX,\n      y: e.clientY,\n      type: 'folder',\n      targetId: folderId\n    });\n  };\n\n  const handleFileContextMenu = (e, fileName) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setContextMenu({\n      visible: true,\n      x: e.clientX,\n      y: e.clientY,\n      type: 'file',\n      targetId: fileName\n    });\n  };\n\n  const handleClick = () => {\n    if (contextMenu.visible) {\n      setContextMenu({\n        visible: false,\n        x: 0,\n        y: 0,\n        type: 'desktop'\n      });\n    }\n  };\n\n  const handleFolderRename = (folderId, newName) => {\n    setFolderNames(prev => ({ ...prev,\n      [folderId]: newName\n    }));\n  };\n\n  const handleRename = () => {\n    if (contextMenu.targetId) {\n      setRenamingFolder(contextMenu.targetId);\n      setContextMenu(prev => ({ ...prev,\n        visible: false\n      }));\n    }\n  };\n\n  const createNewTextFile = () => {\n    const newFileId = `textfile-${nextFileId}`;\n    const defaultName = `New Text File ${nextFileId}.txt`;\n    const newTextFileShortcut = {\n      shortcutName: defaultName,\n      icon: 'textFileIcon',\n      onOpen: () => openTextFile(newFileId, defaultName)\n    };\n    setShortcuts(prev => [...prev, newTextFileShortcut]); // Set initial position for the new text file\n\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      [newFileId]: position\n    }));\n    setNextFileId(prev => prev + 1);\n    setContextMenu({\n      visible: false,\n      x: 0,\n      y: 0,\n      type: 'desktop'\n    });\n  };\n\n  const openTextFile = (fileId, fileName) => {\n    const highestZIndex = getHighestZIndex();\n\n    const textEditorWindow = /*#__PURE__*/_jsxDEV(TextEditor, {\n      fileName: fileName,\n      onInteract: () => onWindowInteract(fileId),\n      onMinimize: () => minimizeWindow(fileId),\n      onClose: () => removeWindow(fileId),\n      onRename: newName => handleTextFileRename(fileId, newName),\n      isRenaming: renamingFolder === fileId\n    }, fileId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      [fileId]: {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: textEditorWindow,\n        name: fileName,\n        icon: 'textFileIcon'\n      }\n    }));\n  };\n\n  const handleTextFileRename = (fileId, newName) => {\n    setShortcuts(prevShortcuts => prevShortcuts.map(shortcut => {\n      if (shortcut.shortcutName === fileId) {\n        return { ...shortcut,\n          shortcutName: newName\n        };\n      }\n\n      return shortcut;\n    }));\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n\n      if (newWindows[fileId]) {\n        newWindows[fileId].name = newName;\n      }\n\n      return newWindows;\n    });\n    setRenamingFolder(null);\n  };\n\n  const deleteFolder = folderId => {\n    const folderContents = folders[folderId];\n\n    if (folderContents) {\n      folderContents.forEach(item => addItemToFolder(\"Recycle Bin\", item));\n    }\n\n    addItemToFolder(\"Recycle Bin\", {\n      shortcutName: folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`,\n      icon: \"folderIcon\",\n      onOpen: openRecycleBin\n    });\n    setFolders(prev => {\n      const newFolders = { ...prev\n      };\n      delete newFolders[folderId];\n      return newFolders;\n    });\n    setFolderNames(prev => {\n      const newFolderNames = { ...prev\n      };\n      delete newFolderNames[folderId];\n      return newFolderNames;\n    });\n    setWindows(prev => {\n      const newWindows = { ...prev\n      };\n      delete newWindows[folderId];\n      return newWindows;\n    });\n    sessionStorage.removeItem(folderId);\n  };\n\n  const deleteFile = fileName => {\n    const file = shortcuts.find(shortcut => shortcut.shortcutName === fileName);\n\n    if (file) {\n      addItemToFolder(\"Recycle Bin\", file);\n    }\n\n    setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== fileName));\n    setWindows(prev => {\n      const newWindows = { ...prev\n      };\n      delete newWindows[fileName];\n      return newWindows;\n    });\n    sessionStorage.removeItem(fileName); // Remove from session storage\n  };\n\n  const initializeDocumentsFolder = () => {\n    const documentsShortcut = {\n      shortcutName: \"Documents\",\n      icon: \"documentsIcon\",\n      onOpen: openDocuments\n    };\n    setShortcuts(prevShortcuts => {\n      const existingDocumentsShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Documents\");\n\n      if (!existingDocumentsShortcut) {\n        return [...prevShortcuts, documentsShortcut];\n      }\n\n      return prevShortcuts;\n    });\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      \"Documents\": position\n    }));\n  };\n\n  const openDocuments = () => {\n    const highestZIndex = getHighestZIndex();\n\n    const docWindow = /*#__PURE__*/_jsxDEV(Documents, {\n      onInteract: () => onWindowInteract(\"Documents\"),\n      onMinimize: () => minimizeWindow(\"Documents\"),\n      onClose: () => removeWindow(\"Documents\"),\n      addWindow: addWindow,\n      getHighestZIndex: getHighestZIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      \"Documents\": {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: docWindow,\n        name: \"Documents\",\n        icon: 'documentsIcon'\n      }\n    }));\n  };\n\n  const openAppByName = appName => {\n    const appKey = Object.keys(APPLICATIONS).find(key => APPLICATIONS[key].name.toLowerCase() === appName.toLowerCase());\n\n    if (appKey) {\n      const app = APPLICATIONS[appKey];\n      addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n        onInteract: () => onWindowInteract(app.key),\n        onMinimize: () => minimizeWindow(app.key),\n        onClose: () => removeWindow(app.key)\n      }, app.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 17\n      }, this));\n    } else {\n      alert(`Application \"${appName}\" not found.`);\n    }\n  };\n\n  const initializeRecycleBin = () => {\n    const recycleBinShortcut = {\n      shortcutName: \"Recycle Bin\",\n      icon: \"recycleBinIcon\",\n      onOpen: openRecycleBin\n    };\n    setShortcuts(prevShortcuts => {\n      const existingRecycleBinShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Recycle Bin\");\n\n      if (!existingRecycleBinShortcut) {\n        return [...prevShortcuts, recycleBinShortcut];\n      }\n\n      return prevShortcuts;\n    });\n    setFolders(prev => ({ ...prev,\n      \"Recycle Bin\": []\n    }));\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      \"Recycle Bin\": position\n    }));\n  };\n\n  const openRecycleBin = () => {\n    const highestZIndex = getHighestZIndex();\n\n    const recycleBinWindow = /*#__PURE__*/_jsxDEV(RecycleBin, {\n      contents: folders[\"Recycle Bin\"] || [],\n      onInteract: () => onWindowInteract(\"Recycle Bin\"),\n      onMinimize: () => minimizeWindow(\"Recycle Bin\"),\n      onClose: () => removeWindow(\"Recycle Bin\"),\n      onAddItem: item => addItemToFolder(\"Recycle Bin\", item),\n      onRemoveItem: itemName => removeItemFromFolder(\"Recycle Bin\", itemName),\n      onRename: (itemName, newName) => handleTextFileRename(itemName, newName),\n      addWindow: addWindow,\n      getHighestZIndex: getHighestZIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      \"Recycle Bin\": {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: recycleBinWindow,\n        name: \"Recycle Bin\",\n        icon: folders[\"Recycle Bin\"] && folders[\"Recycle Bin\"].length > 0 ? 'recycleBinFullIcon' : 'recycleBinIcon'\n      }\n    }));\n  };\n\n  const emptyRecycleBin = () => {\n    setFolders(prev => ({ ...prev,\n      \"Recycle Bin\": []\n    }));\n  };\n\n  const arrangeIcons = () => {\n    const newPositions = {};\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    let index = 0;\n    shortcuts.forEach(shortcut => {\n      if (shortcut.shortcutName !== \"Documents\" && shortcut.shortcutName !== \"Recycle Bin\") {\n        const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n        newPositions[shortcut.shortcutName] = {\n          top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n          left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n        };\n        index++;\n      }\n    });\n    Object.keys(folders).forEach(folderId => {\n      const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n      const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n      newPositions[folderId] = {\n        top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n        left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n      };\n      index++;\n    });\n    newPositions[\"Documents\"] = {\n      top: window.innerHeight - VERTICAL_SPACING - 50,\n      left: INITIAL_OFFSET.left\n    };\n    newPositions[\"Recycle Bin\"] = {\n      top: window.innerHeight - VERTICAL_SPACING - 50,\n      left: INITIAL_OFFSET.left + HORIZONTAL_SPACING\n    };\n    setPositions(newPositions);\n  };\n\n  useEffect(() => {\n    arrangeIcons();\n  }, [shortcuts, folders]);\n  return !shutdown ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.desktop,\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    onContextMenu: handleContextMenu,\n    onClick: handleClick,\n    children: [Object.keys(windows).map(key => {\n      const element = windows[key].component;\n      if (!element) return /*#__PURE__*/_jsxDEV(\"div\", {}, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 38\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: Object.assign({}, {\n          zIndex: windows[key].zIndex\n        }, windows[key].minimized && styles.minimized),\n        children: /*#__PURE__*/React.cloneElement(element, {\n          key,\n          onInteract: () => onWindowInteract(key),\n          onClose: () => removeWindow(key)\n        })\n      }, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.shortcuts,\n      children: [shortcuts.map((shortcut, i) => {\n        const position = positions[shortcut.shortcutName] || {\n          top: INITIAL_OFFSET.top + i % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING) * VERTICAL_SPACING,\n          left: INITIAL_OFFSET.left + Math.floor(i / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: Object.assign({}, styles.shortcutContainer, position),\n          draggable: true,\n          onDragStart: e => handleDragStart(e, shortcut.shortcutName),\n          onContextMenu: e => handleFileContextMenu(e, shortcut.shortcutName),\n          children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n            icon: shortcut.icon,\n            shortcutName: shortcut.shortcutName,\n            onOpen: shortcut.onOpen,\n            isRenaming: renamingFolder === shortcut.shortcutName,\n            onRename: newName => handleTextFileRename(shortcut.shortcutName, newName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 29\n          }, this)\n        }, shortcut.shortcutName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 25\n        }, this);\n      }), Object.keys(folders).map(folderId => {\n        if (folderId === \"Recycle Bin\") return null;\n        const folder = folders[folderId];\n        const folderName = folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`;\n        const position = positions[folderId] || {\n          top: INITIAL_OFFSET.top + (shortcuts.length + parseInt(folderId.split('-')[1]) - 1) % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING) * VERTICAL_SPACING,\n          left: INITIAL_OFFSET.left + Math.floor((shortcuts.length + parseInt(folderId.split('-')[1]) - 1) / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: Object.assign({}, styles.shortcutContainer, position),\n          draggable: true,\n          onDragStart: e => handleDragStart(e, folderId),\n          onContextMenu: e => handleFolderContextMenu(e, folderId),\n          onDrop: e => handleDropOnFolder(e, folderId),\n          onDragOver: handleDragOver,\n          children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n            icon: \"folderIcon\",\n            shortcutName: folderName,\n            onOpen: () => openFolder(folderId, folderName),\n            isRenaming: renamingFolder === folderId,\n            onRename: newName => {\n              handleFolderRename(folderId, newName);\n              setRenamingFolder(null);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 29\n          }, this)\n        }, folderId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: Object.assign({}, styles.shortcutContainer, positions[\"Recycle Bin\"]),\n        draggable: true,\n        onDragStart: e => handleDragStart(e, \"Recycle Bin\"),\n        onContextMenu: e => handleFileContextMenu(e, \"Recycle Bin\"),\n        children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n          icon: folders[\"Recycle Bin\"] && folders[\"Recycle Bin\"].length > 0 ? 'recycleBinFullIcon' : 'recycleBinIcon',\n          shortcutName: \"Recycle Bin\",\n          onOpen: openRecycleBin,\n          isRenaming: renamingFolder === \"Recycle Bin\",\n          onRename: newName => handleTextFileRename(\"Recycle Bin\", newName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 21\n        }, this)\n      }, \"Recycle Bin\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      windows: windows,\n      toggleMinimize: toggleMinimize,\n      shutdown: startShutdown,\n      addWindow: addWindow,\n      updateBackground: updateBackground,\n      removeWindow: removeWindow,\n      openAppByName: openAppByName // Pass the method to Toolbar\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1126,\n      columnNumber: 13\n    }, this), contextMenu.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: { ...styles.contextMenu,\n        top: contextMenu.y,\n        left: contextMenu.x\n      },\n      children: contextMenu.type === 'desktop' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: createNewFolder,\n          children: \"New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: createNewTextFile,\n          children: \"New Text File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : contextMenu.type === 'folder' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: handleRename,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1148,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: () => deleteFolder(contextMenu.targetId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : contextMenu.type === 'file' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: handleRename,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1157,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: () => deleteFile(contextMenu.targetId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: handleRename,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: () => deleteFile(contextMenu.targetId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: emptyRecycleBin,\n          children: \"Empty Recycle Bin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1031,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(ShutdownSequence, {\n    setShutdown: setShutdown,\n    numShutdowns: numShutdowns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1181,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Desktop, \"Dkbe7zAjCb4HBADO8h0u+dIdz8s=\");\n\n_c = Desktop;\nconst styles = {\n  desktop: {\n    minHeight: '100%',\n    flex: 1,\n    position: 'relative'\n  },\n  shutdown: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: '#1d2e2f'\n  },\n  shortcutContainer: {\n    position: 'absolute',\n    cursor: 'move'\n  },\n  shortcuts: {\n    position: 'absolute',\n    top: 16,\n    left: 6\n  },\n  minimized: {\n    pointerEvents: 'none',\n    opacity: 0\n  },\n  contextMenu: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n    zIndex: 1000\n  },\n  contextMenuItem: {\n    padding: '8px 12px',\n    cursor: 'pointer'\n  }\n};\nexport default Desktop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Desktop\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/inner-web/src/components/os/Desktop.tsx"],"names":["React","useCallback","useEffect","useState","ShowcaseExplorer","Doom","OregonTrail","ShutdownSequence","Wordle","Toolbar","DesktopShortcut","Scrabble","Credits","InternetExplorer","Folder","RecycleBin","Settings","bg0","TextEditor","MSN","Documents","GamesFolder","GamesText","Sudoku","Hangman","Game2048","TicTacToe","GRID_SIZE","VERTICAL_SPACING","HORIZONTAL_SPACING","INITIAL_OFFSET","top","left","WINDOW_OFFSET","Desktop","props","windows","setWindows","shortcuts","setShortcuts","positions","setPositions","shutdown","setShutdown","numShutdowns","setNumShutdowns","folders","setFolders","nextFolderId","setNextFolderId","nextFileId","setNextFileId","folderContents","setFolderContents","contextMenu","setContextMenu","visible","x","y","type","background","setBackground","theme","setTheme","folderNames","setFolderNames","renamingFolder","setRenamingFolder","savedBg","localStorage","getItem","savedTheme","updateBackground","defaultBg","defaultTheme","setItem","bodyBG","document","getElementsByTagName","style","transition","backgroundColor","backgroundSize","backgroundPosition","backgroundRepeat","height","margin","console","log","backgroundImage","getHighestZIndex","highestZIndex","Object","keys","forEach","key","window","zIndex","openCreditsApp","addWindow","onWindowInteract","minimizeWindow","removeWindow","openMSNApp","openWordleApp","openGamesText","openTicTacToeApp","APPLICATIONS","showcase","name","shortcutIcon","component","wordle","trail","doom","scrabble","internetExplorer","credits","settings","gamesFolder","onInteract","onMinimize","onClose","gamesText","sudoku","hangman","game2048","ticTacToe","rebootDesktop","newShortcuts","app","push","shortcutName","icon","onOpen","initializeDocumentsFolder","initializeRecycleBin","shortcut","prevShortcuts","savedShortcuts","sessionStorage","savedFolders","savedPositions","savedFolderNames","savedNextFolderId","savedNextFileId","savedWindows","parsedShortcuts","JSON","parse","toLowerCase","stringify","setTimeout","prevWindows","newWindows","minimized","toggleMinimize","highestIndex","startShutdown","element","existingWindows","length","newZIndex","Math","max","prevState","cloneElement","innerHeight","innerWidth","handleDragStart","e","dataTransfer","setData","handleDrop","getData","rect","currentTarget","getBoundingClientRect","clientY","clientX","round","newPosition","collision","values","some","pos","prevPositions","handleDropOnFolder","folderId","item","find","prev","filter","addItemToFolder","handleDragOver","preventDefault","createNewFolder","newFolderId","defaultName","totalItems","column","floor","row","position","openFolder","folderName","folderWindow","removeItemFromFolder","handleFolderRename","bringToFront","itemName","handleContextMenu","handleFolderContextMenu","stopPropagation","targetId","handleFileContextMenu","fileName","handleClick","newName","handleRename","createNewTextFile","newFileId","newTextFileShortcut","openTextFile","fileId","textEditorWindow","handleTextFileRename","map","deleteFolder","split","openRecycleBin","newFolders","newFolderNames","removeItem","deleteFile","file","documentsShortcut","openDocuments","existingDocumentsShortcut","docWindow","openAppByName","appName","appKey","alert","recycleBinShortcut","existingRecycleBinShortcut","recycleBinWindow","emptyRecycleBin","arrangeIcons","newPositions","index","styles","desktop","assign","i","shortcutContainer","folder","parseInt","contextMenuItem","minHeight","flex","cursor","pointerEvents","opacity","border","boxShadow","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AAEA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAAsD,mBAAtD;AACA,OAAOC,QAAP,MAAqB,0BAArB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAMA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,gBAAgB,GAAG,GAAzB;AACA,MAAMC,kBAAkB,GAAG,GAA3B;AACA,MAAMC,cAAc,GAAG;AAAEC,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAAvB;AACA,MAAMC,aAAa,GAAG,EAAtB;;AAUA,MAAMC,OAA+B,GAAIC,KAAD,IAAW;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAiB,EAAjB,CAAtC;AACA,QAAM,CAACmC,SAAD,EAAYC,YAAZ,IAA4BpC,QAAQ,CAAyB,EAAzB,CAA1C;AACA,QAAM,CAACqC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CAAmD,EAAnD,CAA1C;AACA,QAAM,CAACuC,QAAD,EAAWC,WAAX,IAA0BxC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACyC,YAAD,EAAeC,eAAf,IAAkC1C,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC2C,OAAD,EAAUC,UAAV,IAAwB5C,QAAQ,CAA0C,EAA1C,CAAtC;AACA,QAAM,CAAC6C,YAAD,EAAeC,eAAf,IAAkC9C,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC+C,UAAD,EAAaC,aAAb,IAA8BhD,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACiD,cAAD,EAAiBC,iBAAjB,IAAsClD,QAAQ,CAA4C,EAA5C,CAApD;AACA,QAAM,CAACmD,WAAD,EAAcC,cAAd,IAAgCpD,QAAQ,CAAmB;AAC7DqD,IAAAA,OAAO,EAAE,KADoD;AAE7DC,IAAAA,CAAC,EAAE,CAF0D;AAG7DC,IAAAA,CAAC,EAAE,CAH0D;AAI7DC,IAAAA,IAAI,EAAE;AAJuD,GAAnB,CAA9C;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1D,QAAQ,CAAgB,IAAhB,CAA5C;AACA,QAAM,CAAC2D,KAAD,EAAQC,QAAR,IAAoB5D,QAAQ,CAAgB,IAAhB,CAAlC;AACA,QAAM,CAAC6D,WAAD,EAAcC,cAAd,IAAgC9D,QAAQ,CAA0B,EAA1B,CAA9C;AACA,QAAM,CAAC+D,cAAD,EAAiBC,iBAAjB,IAAsChE,QAAQ,CAAgB,IAAhB,CAApD,CAnB+C,CAqB/C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkE,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAhB;AACA,UAAMC,UAAU,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnB;;AACA,QAAIF,OAAO,IAAIG,UAAf,EAA2B;AACvBC,MAAAA,gBAAgB,CAACJ,OAAD,EAAUG,UAAV,CAAhB;AACH,KAFD,MAEO;AACH,YAAME,SAAS,GAAGxD,GAAlB;AACA,YAAMyD,YAAY,GAAG,SAArB;AACAF,MAAAA,gBAAgB,CAACC,SAAD,EAAYC,YAAZ,CAAhB;AACAL,MAAAA,YAAY,CAACM,OAAb,CAAqB,YAArB,EAAmCF,SAAnC;AACAJ,MAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BD,YAA9B;AACH;AACJ,GAZQ,EAYN,EAZM,CAAT;AAcAxE,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0E,MAAM,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAf;AACAF,IAAAA,MAAM,CAACG,KAAP,CAAaC,UAAb,GAA0B,8CAA1B;AACAJ,IAAAA,MAAM,CAACG,KAAP,CAAaE,eAAb,GAA+B,SAA/B;AACAL,IAAAA,MAAM,CAACG,KAAP,CAAaG,cAAb,GAA8B,OAA9B;AACAN,IAAAA,MAAM,CAACG,KAAP,CAAaI,kBAAb,GAAkC,QAAlC;AACAP,IAAAA,MAAM,CAACG,KAAP,CAAaK,gBAAb,GAAgC,WAAhC;AACAR,IAAAA,MAAM,CAACG,KAAP,CAAaM,MAAb,GAAsB,OAAtB;AACAT,IAAAA,MAAM,CAACG,KAAP,CAAaO,MAAb,GAAsB,GAAtB;AACH,GATQ,EASN,EATM,CAAT;AAWA,QAAMd,gBAAgB,GAAGvE,WAAW,CAAC,CAAC2D,UAAD,EAAqBE,KAArB,KAAuC;AACxEyB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC;AAAE5B,MAAAA,UAAF;AAAcE,MAAAA;AAAd,KAApC;AACAD,IAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,UAAMc,MAAM,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAf;AACAF,IAAAA,MAAM,CAACG,KAAP,CAAaC,UAAb,GAA0B,8CAA1B;AACAJ,IAAAA,MAAM,CAACG,KAAP,CAAaE,eAAb,GAA+BnB,KAA/B;AACAc,IAAAA,MAAM,CAACG,KAAP,CAAaU,eAAb,GAAgC,OAAM7B,UAAW,GAAjD;AACAgB,IAAAA,MAAM,CAACG,KAAP,CAAaG,cAAb,GAA8B,OAA9B;AACAN,IAAAA,MAAM,CAACG,KAAP,CAAaI,kBAAb,GAAkC,QAAlC;AACAP,IAAAA,MAAM,CAACG,KAAP,CAAaK,gBAAb,GAAgC,WAAhC;AACAR,IAAAA,MAAM,CAACG,KAAP,CAAaM,MAAb,GAAsB,OAAtB;AACAT,IAAAA,MAAM,CAACG,KAAP,CAAaO,MAAb,GAAsB,GAAtB;AACH,GAbmC,EAajC,EAbiC,CAApC;AAeA,QAAMI,gBAAgB,GAAGzF,WAAW,CAAC,MAAc;AAC/C,QAAI0F,aAAa,GAAG,CAApB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYzD,OAAZ,EAAqB0D,OAArB,CAA8BC,GAAD,IAAS;AAClC,YAAMC,MAAM,GAAG5D,OAAO,CAAC2D,GAAD,CAAtB;;AACA,UAAIC,MAAJ,EAAY;AACR,YAAIA,MAAM,CAACC,MAAP,GAAgBN,aAApB,EACIA,aAAa,GAAGK,MAAM,CAACC,MAAvB;AACP;AACJ,KAND;AAOA,WAAON,aAAP;AACH,GAVmC,EAUjC,CAACvD,OAAD,CAViC,CAApC;;AAYA,QAAM8D,cAAc,GAAG,MAAM;AACzB,UAAMP,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,SADK,eAEL,QAAC,OAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,SAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,SAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,SAAD;AAH/B,OAIQ,SAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMZ,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,KADK,eAEL,QAAC,GAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,KAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,KAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD;AAH/B,OAIQ,KAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAME,aAAa,GAAG,MAAM;AACxB,UAAMb,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,QADK,eAEL,QAAC,MAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,QAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,QAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,QAAD;AAH/B,OAIQ,QAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMG,aAAa,GAAG,MAAM;AACxB,UAAMd,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,WADK,eAEL,QAAC,SAAD;AACI,MAAA,QAAQ,EAAC,YADb;AAEI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,WAAD,CAFtC;AAGI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,WAAD,CAHpC;AAII,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,WAAD;AAJ/B,OAKQ,WALR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AAUH,GAZD;;AAcA,QAAMI,gBAAgB,GAAG,MAAM;AAC3B,UAAMf,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,IAAAA,SAAS,CACL,WADK,eAEL,QAAC,SAAD;AACI,MAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,WAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,WAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,WAAD;AAH/B,OAIQ,WAJR;AAAA;AAAA;AAAA;AAAA,YAFK,CAAT;AASH,GAXD;;AAaA,QAAMK,YAOL,GAAG;AACA;AACAC,IAAAA,QAAQ,EAAE;AACNb,MAAAA,GAAG,EAAE,UADC;AAENc,MAAAA,IAAI,EAAE,UAFA;AAGNC,MAAAA,YAAY,EAAE,cAHR;AAINC,MAAAA,SAAS,EAAE3G;AAJL,KAFV;AAQA4G,IAAAA,MAAM,EAAE;AACJjB,MAAAA,GAAG,EAAE,QADD;AAEJc,MAAAA,IAAI,EAAE,QAFF;AAGJC,MAAAA,YAAY,EAAE,YAHV;AAIJC,MAAAA,SAAS,EAAEvG;AAJP,KARR;AAcAyG,IAAAA,KAAK,EAAE;AACHlB,MAAAA,GAAG,EAAE,OADF;AAEHc,MAAAA,IAAI,EAAE,kBAFH;AAGHC,MAAAA,YAAY,EAAE,WAHX;AAIHC,MAAAA,SAAS,EAAEzG;AAJR,KAdP;AAoBA4G,IAAAA,IAAI,EAAE;AACFnB,MAAAA,GAAG,EAAE,MADH;AAEFc,MAAAA,IAAI,EAAE,MAFJ;AAGFC,MAAAA,YAAY,EAAE,UAHZ;AAIFC,MAAAA,SAAS,EAAE1G;AAJT,KApBN;AA0BA8G,IAAAA,QAAQ,EAAE;AACNpB,MAAAA,GAAG,EAAE,UADC;AAENc,MAAAA,IAAI,EAAE,UAFA;AAGNC,MAAAA,YAAY,EAAE,cAHR;AAINC,MAAAA,SAAS,EAAEpG;AAJL,KA1BV;AAgCA;AACA;AACA;AACA;AACA;AACA;AACAyG,IAAAA,gBAAgB,EAAE;AACdrB,MAAAA,GAAG,EAAE,kBADS;AAEdc,MAAAA,IAAI,EAAE,eAFQ;AAGdC,MAAAA,YAAY,EAAE,sBAHA;AAIdC,MAAAA,SAAS,EAAElG;AAJG,KAtClB;AA4CAwG,IAAAA,OAAO,EAAE;AACLtB,MAAAA,GAAG,EAAE,SADA;AAELc,MAAAA,IAAI,EAAE,SAFD;AAGLC,MAAAA,YAAY,EAAE,SAHT;AAILC,MAAAA,SAAS,EAAEnG;AAJN,KA5CT;AAkDA0G,IAAAA,QAAQ,EAAE;AACNvB,MAAAA,GAAG,EAAE,UADC;AAENc,MAAAA,IAAI,EAAE,UAFA;AAGNC,MAAAA,YAAY,EAAE,SAHR;AAINC,MAAAA,SAAS,EAAE/F;AAJL,KAlDV;AAwDAuG,IAAAA,WAAW,EAAE;AACTxB,MAAAA,GAAG,EAAE,aADI;AAETc,MAAAA,IAAI,EAAE,cAFG;AAGTC,MAAAA,YAAY,EAAE,YAHL;AAITC,MAAAA,SAAS,EAAG5E,KAAD,iBACP,QAAC,WAAD;AACI,QAAA,UAAU,EAAEA,KAAK,CAACqF,UADtB;AAEI,QAAA,UAAU,EAAErF,KAAK,CAACsF,UAFtB;AAGI,QAAA,OAAO,EAAEtF,KAAK,CAACuF,OAHnB;AAII,QAAA,aAAa,EAAElB,aAJnB;AAKI,QAAA,aAAa,EAAEC,aALnB;AAMI,QAAA,aAAa,EAAE,MAAM;AACjB,gBAAMd,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,UAAAA,SAAS,CACL,QADK,eAEL,QAAC,MAAD;AACI,YAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,QAAD,CADtC;AAEI,YAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,QAAD,CAFpC;AAGI,YAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,QAAD;AAH/B,aAIQ,QAJR;AAAA;AAAA;AAAA;AAAA,kBAFK,CAAT;AASH,SAjBL;AAkBI,QAAA,cAAc,EAAE,MAAM;AAClB,gBAAMX,aAAa,GAAGD,gBAAgB,EAAtC;AACAS,UAAAA,SAAS,CACL,SADK,eAEL,QAAC,OAAD;AACI,YAAA,UAAU,EAAE,MAAMC,gBAAgB,CAAC,SAAD,CADtC;AAEI,YAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,SAAD,CAFpC;AAGI,YAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,SAAD;AAH/B,aAIQ,SAJR;AAAA;AAAA;AAAA;AAAA,kBAFK,CAAT;AASH,SA7BL;AA8BI,QAAA,gBAAgB,EAAEI;AA9BtB;AAAA;AAAA;AAAA;AAAA;AALK,KAxDb;AA+FAiB,IAAAA,SAAS,EAAE;AACP5B,MAAAA,GAAG,EAAE,WADE;AAEPc,MAAAA,IAAI,EAAE,YAFC;AAGPC,MAAAA,YAAY,EAAE,cAHP;AAIPC,MAAAA,SAAS,EAAEzF;AAJJ,KA/FX;AAqGAsG,IAAAA,MAAM,EAAE;AACJ7B,MAAAA,GAAG,EAAE,QADD;AAEJc,MAAAA,IAAI,EAAE,QAFF;AAGJC,MAAAA,YAAY,EAAE,YAHV;AAIJC,MAAAA,SAAS,EAAExF;AAJP,KArGR;AA2GAsG,IAAAA,OAAO,EAAE;AACL9B,MAAAA,GAAG,EAAE,SADA;AAELc,MAAAA,IAAI,EAAE,SAFD;AAGLC,MAAAA,YAAY,EAAE,YAHT;AAILC,MAAAA,SAAS,EAAEvF;AAJN,KA3GT;AAiHAsG,IAAAA,QAAQ,EAAE;AACN/B,MAAAA,GAAG,EAAE,UADC;AAENc,MAAAA,IAAI,EAAE,MAFA;AAGNC,MAAAA,YAAY,EAAE,YAHR;AAINC,MAAAA,SAAS,EAAEtF;AAJL,KAjHV;AAuHAsG,IAAAA,SAAS,EAAE;AACPhC,MAAAA,GAAG,EAAE,WADE;AAEPc,MAAAA,IAAI,EAAE,aAFC;AAGPC,MAAAA,YAAY,EAAE,YAHP;AAIPC,MAAAA,SAAS,EAAErF;AAJJ,KAvHX,CA6HA;AACI;AACD;AACC;AACD;AACJ;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1JA,GAPJ;AAoKAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIwC,QAAQ,KAAK,IAAjB,EAAuB;AACnBsF,MAAAA,aAAa;AAChB,KAHW,CAIZ;;AACH,GALQ,EAKN,CAACtF,QAAD,CALM,CAAT;AAOAxC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM+H,YAAoC,GAAG,EAA7C;AACArC,IAAAA,MAAM,CAACC,IAAP,CAAYc,YAAZ,EAA0Bb,OAA1B,CAAmCC,GAAD,IAAS;AACvC,YAAMmC,GAAG,GAAGvB,YAAY,CAACZ,GAAD,CAAxB;;AACA,UAAIA,GAAG,KAAK,SAAR,IAAqBA,GAAG,KAAK,UAA7B,IAA2CA,GAAG,KAAK,QAAnD,IAA+DA,GAAG,KAAK,KAAvE,IAAgFA,GAAG,KAAK,aAAxF,IAAyGA,GAAG,KAAK,WAAjH,IAAgIA,GAAG,KAAK,QAAxI,IAAoJA,GAAG,KAAK,QAA5J,IAAwKA,GAAG,KAAK,SAAhL,IAA6LA,GAAG,KAAK,UAArM,IAAmNA,GAAG,KAAK,WAA/N,EAA4O;AACxOkC,QAAAA,YAAY,CAACE,IAAb,CAAkB;AACdC,UAAAA,YAAY,EAAEF,GAAG,CAACrB,IADJ;AAEdwB,UAAAA,IAAI,EAAEH,GAAG,CAACpB,YAFI;AAGdwB,UAAAA,MAAM,EAAE,MAAM;AACVnC,YAAAA,SAAS,CACL+B,GAAG,CAACnC,GADC,eAEL,QAAC,GAAD,CAAK,SAAL;AACI,cAAA,UAAU,EAAE,MAAMK,gBAAgB,CAAC8B,GAAG,CAACnC,GAAL,CADtC;AAEI,cAAA,UAAU,EAAE,MAAMM,cAAc,CAAC6B,GAAG,CAACnC,GAAL,CAFpC;AAGI,cAAA,OAAO,EAAE,MAAMO,YAAY,CAAC4B,GAAG,CAACnC,GAAL;AAH/B,eAISmC,GAAG,CAACnC,GAJb;AAAA;AAAA;AAAA;AAAA,oBAFK,CAAT;AASH;AAba,SAAlB;AAeH;AACJ,KAnBD;AAqBAwC,IAAAA,yBAAyB;AACzBC,IAAAA,oBAAoB;AAEpBP,IAAAA,YAAY,CAACnC,OAAb,CAAsB2C,QAAD,IAAc;AAC/B,UAAIA,QAAQ,CAACL,YAAT,KAA0B,UAA9B,EAA0C;AACtCK,QAAAA,QAAQ,CAACH,MAAT;AACH;AACJ,KAJD;AAMA/F,IAAAA,YAAY,CAACmG,aAAa,IAAI,CAAC,GAAGA,aAAJ,EAAmB,GAAGT,YAAtB,CAAlB,CAAZ,CAhCY,CAiCZ;AACH,GAlCQ,EAkCN,EAlCM,CAAT;AAoCA/H,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMyI,cAAc,GAAGC,cAAc,CAACtE,OAAf,CAAuB,WAAvB,CAAvB;AACA,UAAMuE,YAAY,GAAGD,cAAc,CAACtE,OAAf,CAAuB,SAAvB,CAArB;AACA,UAAMwE,cAAc,GAAGF,cAAc,CAACtE,OAAf,CAAuB,WAAvB,CAAvB;AACA,UAAMyE,gBAAgB,GAAGH,cAAc,CAACtE,OAAf,CAAuB,aAAvB,CAAzB;AACA,UAAM0E,iBAAiB,GAAGJ,cAAc,CAACtE,OAAf,CAAuB,cAAvB,CAA1B;AACA,UAAM2E,eAAe,GAAGL,cAAc,CAACtE,OAAf,CAAuB,YAAvB,CAAxB;AACA,UAAM4E,YAAY,GAAGN,cAAc,CAACtE,OAAf,CAAuB,SAAvB,CAArB;;AAEA,QAAIqE,cAAJ,EAAoB;AAChB,YAAMQ,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWV,cAAX,CAAxB;AACAQ,MAAAA,eAAe,CAACrD,OAAhB,CAAyB2C,QAAD,IAAoC;AACxDA,QAAAA,QAAQ,CAACH,MAAT,GAAkB,MAAM;AACpB,gBAAMJ,GAAG,GAAGvB,YAAY,CAAC8B,QAAQ,CAACL,YAAT,CAAsBkB,WAAtB,EAAD,CAAxB;;AACA,cAAIpB,GAAJ,EAAS;AACL/B,YAAAA,SAAS,CACL+B,GAAG,CAACnC,GADC,eAEL,QAAC,GAAD,CAAK,SAAL;AACI,cAAA,UAAU,EAAE,MAAMK,gBAAgB,CAAC8B,GAAG,CAACnC,GAAL,CADtC;AAEI,cAAA,UAAU,EAAE,MAAMM,cAAc,CAAC6B,GAAG,CAACnC,GAAL,CAFpC;AAGI,cAAA,OAAO,EAAE,MAAMO,YAAY,CAAC4B,GAAG,CAACnC,GAAL;AAH/B,eAISmC,GAAG,CAACnC,GAJb;AAAA;AAAA;AAAA;AAAA,oBAFK,CAAT;AASH;AACJ,SAbD;AAcH,OAfD;AAgBAxD,MAAAA,YAAY,CAAC4G,eAAD,CAAZ;AACH;;AACD,QAAIN,YAAJ,EAAkB;AACd9F,MAAAA,UAAU,CAACqG,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAD,CAAV;AACH;;AACD,QAAIC,cAAJ,EAAoB;AAChBrG,MAAAA,YAAY,CAAC2G,IAAI,CAACC,KAAL,CAAWP,cAAX,CAAD,CAAZ;AACH;;AACD,QAAIC,gBAAJ,EAAsB;AAClB9E,MAAAA,cAAc,CAACmF,IAAI,CAACC,KAAL,CAAWN,gBAAX,CAAD,CAAd;AACH;;AACD,QAAIC,iBAAJ,EAAuB;AACnB/F,MAAAA,eAAe,CAACmG,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAD,CAAf;AACH;;AACD,QAAIC,eAAJ,EAAqB;AACjB9F,MAAAA,aAAa,CAACiG,IAAI,CAACC,KAAL,CAAWJ,eAAX,CAAD,CAAb;AACH;;AACD,QAAIC,YAAJ,EAAkB;AACd7G,MAAAA,UAAU,CAAC+G,IAAI,CAACC,KAAL,CAAWH,YAAX,CAAD,CAAV;AACH;AACJ,GAhDQ,EAgDN,EAhDM,CAAT;AAkDAhJ,EAAAA,SAAS,CAAC,MAAM;AAEZ0I,IAAAA,cAAc,CAACjE,OAAf,CAAuB,WAAvB,EAAoCyE,IAAI,CAACG,SAAL,CAAejH,SAAf,CAApC;AACAsG,IAAAA,cAAc,CAACjE,OAAf,CAAuB,SAAvB,EAAkCyE,IAAI,CAACG,SAAL,CAAezG,OAAf,CAAlC;AACA8F,IAAAA,cAAc,CAACjE,OAAf,CAAuB,WAAvB,EAAoCyE,IAAI,CAACG,SAAL,CAAe/G,SAAf,CAApC;AACAoG,IAAAA,cAAc,CAACjE,OAAf,CAAuB,aAAvB,EAAsCyE,IAAI,CAACG,SAAL,CAAevF,WAAf,CAAtC;AACA4E,IAAAA,cAAc,CAACjE,OAAf,CAAuB,cAAvB,EAAuCyE,IAAI,CAACG,SAAL,CAAevG,YAAf,CAAvC;AACA4F,IAAAA,cAAc,CAACjE,OAAf,CAAuB,YAAvB,EAAqCyE,IAAI,CAACG,SAAL,CAAerG,UAAf,CAArC;AACA0F,IAAAA,cAAc,CAACjE,OAAf,CAAuB,SAAvB,EAAkCyE,IAAI,CAACG,SAAL,CAAenH,OAAf,CAAlC;AACH,GATQ,EASN,CAACE,SAAD,EAAYQ,OAAZ,EAAqBN,SAArB,EAAgCwB,WAAhC,EAA6ChB,YAA7C,EAA2DE,UAA3D,EAAuEd,OAAvE,CATM,CAAT;AAWA,QAAM4F,aAAa,GAAG/H,WAAW,CAAC,MAAM;AACpCoC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAFgC,EAE9B,EAF8B,CAAjC;AAIA,QAAMiE,YAAY,GAAGrG,WAAW,CAAE8F,GAAD,IAAiB;AAC9C;AACAyD,IAAAA,UAAU,CAAC,MAAM;AACbnH,MAAAA,UAAU,CAAEoH,WAAD,IAAiB;AACxB,cAAMC,UAAU,GAAG,EAAE,GAAGD;AAAL,SAAnB;AACA,eAAOC,UAAU,CAAC3D,GAAD,CAAjB;AACA,eAAO2D,UAAP;AACH,OAJS,CAAV;AAKH,KANS,EAMP,GANO,CAAV;AAOH,GAT+B,EAS7B,EAT6B,CAAhC;AAWA,QAAMrD,cAAc,GAAGpG,WAAW,CAAE8F,GAAD,IAAiB;AAChD1D,IAAAA,UAAU,CAAEoH,WAAD,IAAiB;AACxB,YAAMC,UAAU,GAAG,EAAE,GAAGD;AAAL,OAAnB;AACAC,MAAAA,UAAU,CAAC3D,GAAD,CAAV,CAAgB4D,SAAhB,GAA4B,IAA5B;AACA,aAAOD,UAAP;AACH,KAJS,CAAV;AAKH,GANiC,EAM/B,EAN+B,CAAlC;AAQA,QAAME,cAAc,GAAG3J,WAAW,CAC7B8F,GAAD,IAAiB;AACb,UAAM2D,UAAU,GAAG,EAAE,GAAGtH;AAAL,KAAnB;AACA,UAAMyH,YAAY,GAAGnE,gBAAgB,EAArC;;AACA,QACIgE,UAAU,CAAC3D,GAAD,CAAV,CAAgB4D,SAAhB,IACAD,UAAU,CAAC3D,GAAD,CAAV,CAAgBE,MAAhB,KAA2B4D,YAF/B,EAGE;AACEH,MAAAA,UAAU,CAAC3D,GAAD,CAAV,CAAgB4D,SAAhB,GAA4B,CAACD,UAAU,CAAC3D,GAAD,CAAV,CAAgB4D,SAA7C;AACH;;AACDD,IAAAA,UAAU,CAAC3D,GAAD,CAAV,CAAgBE,MAAhB,GAAyBP,gBAAgB,KAAK,CAA9C;AACArD,IAAAA,UAAU,CAACqH,UAAD,CAAV;AACH,GAZ6B,EAa9B,CAACtH,OAAD,EAAUsD,gBAAV,CAb8B,CAAlC;AAgBA,QAAMU,gBAAgB,GAAGnG,WAAW,CAC/B8F,GAAD,IAAiB;AACb1D,IAAAA,UAAU,CAAEoH,WAAD,KAAkB,EACzB,GAAGA,WADsB;AAEzB,OAAC1D,GAAD,GAAO,EACH,GAAG0D,WAAW,CAAC1D,GAAD,CADX;AAEHE,QAAAA,MAAM,EAAE,IAAIP,gBAAgB;AAFzB;AAFkB,KAAlB,CAAD,CAAV;AAOH,GAT+B,EAUhC,CAACrD,UAAD,EAAaqD,gBAAb,CAVgC,CAApC;AAaA,QAAMoE,aAAa,GAAG7J,WAAW,CAAC,MAAM;AACpCuJ,IAAAA,UAAU,CAAC,MAAM;AACb7G,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACH,KAHS,EAGP,GAHO,CAAV;AAIH,GALgC,EAK9B,CAACA,YAAD,CAL8B,CAAjC;AAOA,QAAMuD,SAAS,GAAGlG,WAAW,CACzB,CAAC8F,GAAD,EAAcgE,OAAd,EAAoC9D,MAApC,KAAwD;AACpD,UAAMN,aAAa,GAAGD,gBAAgB,EAAtC;AACA,UAAMsE,eAAe,GAAGpE,MAAM,CAACC,IAAP,CAAYzD,OAAZ,EAAqB6H,MAA7C;AACA,UAAMlI,GAAG,GAAGD,cAAc,CAACC,GAAf,GAAsBiI,eAAe,GAAG/H,aAApD;AACA,UAAMD,IAAI,GAAGF,cAAc,CAACE,IAAf,GAAuBgI,eAAe,GAAG/H,aAAtD,CAJoD,CAMpD;;AACA,UAAMiI,SAAS,GAAGC,IAAI,CAACC,GAAL,CAASnE,MAAM,IAAI,CAAnB,EAAsBN,aAAa,GAAG,CAAtC,CAAlB;AAEAtD,IAAAA,UAAU,CAAEgI,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvB,OAACtE,GAAD,GAAO;AACHE,QAAAA,MAAM,EAAEiE,SADL;AAEHP,QAAAA,SAAS,EAAE,KAFR;AAGH5C,QAAAA,SAAS,eAAE/G,KAAK,CAACsK,YAAN,CAAmBP,OAAnB,EAA4B;AAAEvF,UAAAA;AAAF,SAA5B,CAHR;AAIHqC,QAAAA,IAAI,EAAEF,YAAY,CAACZ,GAAD,CAAZ,CAAkBc,IAJrB;AAKHwB,QAAAA,IAAI,EAAE1B,YAAY,CAACZ,GAAD,CAAZ,CAAkBe,YALrB;AAMH/E,QAAAA,GAAG,EAAEA,GAAG,GAAGiE,MAAM,CAACuE,WANf;AAOHvI,QAAAA,IAAI,EAAEA,IAAI,GAAGgE,MAAM,CAACwE;AAPjB;AAFgB,KAAhB,CAAD,CAAV;AAYH,GAtBwB,EAuBzB,CAAC9E,gBAAD,EAAmBlB,gBAAnB,EAAqCpC,OAArC,CAvByB,CAA7B;;AA0BA,QAAMqI,eAAe,GAAG,CAACC,CAAD,EAAqC3E,GAArC,KAAqD;AACzE2E,IAAAA,CAAC,CAACC,YAAF,CAAeC,OAAf,CAAuB,YAAvB,EAAqC7E,GAArC;AACH,GAFD;;AAIA,QAAM8E,UAAU,GAAIH,CAAD,IAAwC;AACvD,UAAM3E,GAAG,GAAG2E,CAAC,CAACC,YAAF,CAAeG,OAAf,CAAuB,YAAvB,CAAZ;AACA,UAAMC,IAAI,GAAGL,CAAC,CAACM,aAAF,CAAgBC,qBAAhB,EAAb;AACA,QAAIlJ,GAAG,GAAG2I,CAAC,CAACQ,OAAF,GAAYH,IAAI,CAAChJ,GAA3B;AACA,QAAIC,IAAI,GAAG0I,CAAC,CAACS,OAAF,GAAYJ,IAAI,CAAC/I,IAA5B,CAJuD,CAMvD;;AACAD,IAAAA,GAAG,GAAGoI,IAAI,CAACiB,KAAL,CAAWrJ,GAAG,GAAGJ,SAAjB,IAA8BA,SAApC;AACAK,IAAAA,IAAI,GAAGmI,IAAI,CAACiB,KAAL,CAAWpJ,IAAI,GAAGL,SAAlB,IAA+BA,SAAtC,CARuD,CAUvD;;AACA,UAAM0J,WAAW,GAAG;AAAEtJ,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAApB;AACA,UAAMsJ,SAAS,GAAG1F,MAAM,CAAC2F,MAAP,CAAc/I,SAAd,EAAyBgJ,IAAzB,CACbC,GAAD,IAASA,GAAG,CAAC1J,GAAJ,KAAYsJ,WAAW,CAACtJ,GAAxB,IAA+B0J,GAAG,CAACzJ,IAAJ,KAAaqJ,WAAW,CAACrJ,IADnD,CAAlB;;AAIA,QAAIsJ,SAAJ,EAAe;AACXD,MAAAA,WAAW,CAACtJ,GAAZ,IAAmBJ,SAAnB;AACH;;AAEDc,IAAAA,YAAY,CAAEiJ,aAAD,KAAoB,EAC7B,GAAGA,aAD0B;AAE7B,OAAC3F,GAAD,GAAOsF;AAFsB,KAApB,CAAD,CAAZ;AAIH,GAxBD;;AA0BA,QAAMM,kBAAkB,GAAG,CAACjB,CAAD,EAAqCkB,QAArC,KAA0D;AACjF,UAAM7F,GAAG,GAAG2E,CAAC,CAACC,YAAF,CAAeG,OAAf,CAAuB,YAAvB,CAAZ;AACA,UAAMe,IAAI,GAAGvJ,SAAS,CAACwJ,IAAV,CAAerD,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0BrC,GAArD,CAAb;;AACA,QAAI8F,IAAJ,EAAU;AACNtJ,MAAAA,YAAY,CAACwJ,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYvD,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0BrC,GAAlD,CAAT,CAAZ;AACAkG,MAAAA,eAAe,CAACL,QAAD,EAAWC,IAAX,CAAf;AACH;AACJ,GAPD;;AASA,QAAMK,cAAc,GAAIxB,CAAD,IAAwC;AAC3DA,IAAAA,CAAC,CAACyB,cAAF;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMC,WAAW,GAAI,UAASrJ,YAAa,EAA3C;AACA,UAAMsJ,WAAW,GAAI,cAAatJ,YAAa,EAA/C;AAEAD,IAAAA,UAAU,CAACgJ,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,OAACM,WAAD,GAAe;AAFC,KAAL,CAAL,CAAV;AAKApI,IAAAA,cAAc,CAAC8H,IAAI,KAAK,EACpB,GAAGA,IADiB;AAEpB,OAACM,WAAD,GAAeC;AAFK,KAAL,CAAL,CAAd,CAT0B,CAc1B;;AACA,UAAMC,UAAU,GAAGjK,SAAS,CAAC2H,MAAV,GAAmBrE,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBmH,MAA3D;AACA,UAAMuC,MAAM,GAAGrC,IAAI,CAACsC,KAAL,CAAWF,UAAU,GAAGpC,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAxB,CAAf;AACA,UAAM8K,GAAG,GAAGH,UAAU,GAAGpC,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAzB;AAEA,UAAM+K,QAAQ,GAAG;AACb5K,MAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsB2K,GAAG,GAAG9K,gBADpB;AAEbI,MAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuBwK,MAAM,GAAG3K;AAFzB,KAAjB;AAKAY,IAAAA,YAAY,CAACsJ,IAAI,KAAK,EAClB,GAAGA,IADe;AAElB,OAACM,WAAD,GAAeM;AAFG,KAAL,CAAL,CAAZ;AAKA1J,IAAAA,eAAe,CAAC8I,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAf;AACAxI,IAAAA,cAAc,CAAC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,CAAC,EAAE,CAArB;AAAwBC,MAAAA,CAAC,EAAE,CAA3B;AAA8BC,MAAAA,IAAI,EAAE;AAApC,KAAD,CAAd;AACH,GA/BD;;AAiCA,QAAMiJ,UAAU,GAAG,CAAChB,QAAD,EAAmBiB,UAAnB,KAA0C;AACzD,UAAMlH,aAAa,GAAGD,gBAAgB,EAAtC;;AAEA,UAAMoH,YAAY,gBACd,QAAC,MAAD;AAEI,MAAA,QAAQ,EAAElB,QAFd;AAGI,MAAA,UAAU,EAAE5H,WAAW,CAAC4H,QAAD,CAAX,IAAyBiB,UAHzC;AAII,MAAA,QAAQ,EAAE/J,OAAO,CAAC8I,QAAD,CAAP,IAAqB,EAJnC;AAKI,MAAA,UAAU,EAAE,MAAMxF,gBAAgB,CAACwF,QAAD,CALtC;AAMI,MAAA,UAAU,EAAE,MAAMvF,cAAc,CAACuF,QAAD,CANpC;AAOI,MAAA,OAAO,EAAE,MAAMtF,YAAY,CAACsF,QAAD,CAP/B;AAQI,MAAA,SAAS,EAAEK,eARf;AASI,MAAA,YAAY,EAAEc,oBATlB;AAUI,MAAA,QAAQ,EAAEC,kBAVd;AAWI,MAAA,SAAS,EAAE7G,SAXf;AAYI,MAAA,gBAAgB,EAAET,gBAZtB;AAaI,MAAA,YAAY,EAAE,MAAMuH,YAAY,CAACrB,QAAD;AAbpC,OACSA,QADT;AAAA;AAAA;AAAA;AAAA,YADJ;;AAkBAvJ,IAAAA,UAAU,CAAC0J,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,OAACH,QAAD,GAAY;AACR3F,QAAAA,MAAM,EAAEN,aAAa,GAAG,CADhB;AAERgE,QAAAA,SAAS,EAAE,KAFH;AAGR5C,QAAAA,SAAS,EAAE+F,YAHH;AAIRjG,QAAAA,IAAI,EAAE7C,WAAW,CAAC4H,QAAD,CAAX,IAAyBiB,UAJvB;AAKRxE,QAAAA,IAAI,EAAE;AALE;AAFI,KAAL,CAAL,CAAV;AAUH,GA/BD;;AAiCA,QAAM4E,YAAY,GAAIlH,GAAD,IAAiB;AAClC1D,IAAAA,UAAU,CAACoH,WAAW,IAAI;AACtB,YAAMC,UAAU,GAAG,EAAE,GAAGD;AAAL,OAAnB;AACA,YAAM9D,aAAa,GAAGD,gBAAgB,EAAtC;AACAgE,MAAAA,UAAU,CAAC3D,GAAD,CAAV,CAAgBE,MAAhB,GAAyBN,aAAa,GAAG,CAAzC;AACA,aAAO+D,UAAP;AACH,KALS,CAAV;AAMH,GAPD;;AASA,QAAMuC,eAAe,GAAG,CAACL,QAAD,EAAmBC,IAAnB,KAAkD;AACtE9I,IAAAA,UAAU,CAACgJ,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,OAACH,QAAD,GAAY,CAAC,IAAIG,IAAI,CAACH,QAAD,CAAJ,IAAkB,EAAtB,CAAD,EAA4BC,IAA5B;AAFI,KAAL,CAAL,CAAV;AAIH,GALD;;AAOA,QAAMkB,oBAAoB,GAAG,CAACnB,QAAD,EAAmBsB,QAAnB,KAAwC;AACjEnK,IAAAA,UAAU,CAACgJ,IAAI,KAAK;AAChB,OAACH,QAAD,GAAYG,IAAI,CAACH,QAAD,CAAJ,CAAeI,MAAf,CAAsBH,IAAI,IAAIA,IAAI,CAACzD,YAAL,KAAsB8E,QAApD;AADI,KAAL,CAAL,CAAV;AAGH,GAJD;;AAMA,QAAMC,iBAAiB,GAAIzC,CAAD,IAAyC;AAC/DA,IAAAA,CAAC,CAACyB,cAAF;AACA5I,IAAAA,cAAc,CAAC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,CAAC,EAAEiH,CAAC,CAACS,OAAtB;AAA+BzH,MAAAA,CAAC,EAAEgH,CAAC,CAACQ,OAApC;AAA6CvH,MAAAA,IAAI,EAAE;AAAnD,KAAD,CAAd;AACH,GAHD;;AAKA,QAAMyJ,uBAAuB,GAAG,CAAC1C,CAAD,EAAsCkB,QAAtC,KAA2D;AACvFlB,IAAAA,CAAC,CAACyB,cAAF;AACAzB,IAAAA,CAAC,CAAC2C,eAAF;AACA9J,IAAAA,cAAc,CAAC;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,CAAC,EAAEiH,CAAC,CAACS,OAFM;AAGXzH,MAAAA,CAAC,EAAEgH,CAAC,CAACQ,OAHM;AAIXvH,MAAAA,IAAI,EAAE,QAJK;AAKX2J,MAAAA,QAAQ,EAAE1B;AALC,KAAD,CAAd;AAOH,GAVD;;AAYA,QAAM2B,qBAAqB,GAAG,CAAC7C,CAAD,EAAsC8C,QAAtC,KAA2D;AACrF9C,IAAAA,CAAC,CAACyB,cAAF;AACAzB,IAAAA,CAAC,CAAC2C,eAAF;AACA9J,IAAAA,cAAc,CAAC;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,CAAC,EAAEiH,CAAC,CAACS,OAFM;AAGXzH,MAAAA,CAAC,EAAEgH,CAAC,CAACQ,OAHM;AAIXvH,MAAAA,IAAI,EAAE,MAJK;AAKX2J,MAAAA,QAAQ,EAAEE;AALC,KAAD,CAAd;AAOH,GAVD;;AAYA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAInK,WAAW,CAACE,OAAhB,EAAyB;AACrBD,MAAAA,cAAc,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,CAAC,EAAE,CAArB;AAAwBC,QAAAA,CAAC,EAAE,CAA3B;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OAAD,CAAd;AACH;AACJ,GAJD;;AAMA,QAAMqJ,kBAAkB,GAAG,CAACpB,QAAD,EAAmB8B,OAAnB,KAAuC;AAC9DzJ,IAAAA,cAAc,CAAC8H,IAAI,KAAK,EACpB,GAAGA,IADiB;AAEpB,OAACH,QAAD,GAAY8B;AAFQ,KAAL,CAAL,CAAd;AAIH,GALD;;AAOA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIrK,WAAW,CAACgK,QAAhB,EAA0B;AACtBnJ,MAAAA,iBAAiB,CAACb,WAAW,CAACgK,QAAb,CAAjB;AACA/J,MAAAA,cAAc,CAACwI,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWvI,QAAAA,OAAO,EAAE;AAApB,OAAL,CAAL,CAAd;AACH;AACJ,GALD;;AAOA,QAAMoK,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,SAAS,GAAI,YAAW3K,UAAW,EAAzC;AACA,UAAMoJ,WAAW,GAAI,iBAAgBpJ,UAAW,MAAhD;AAEA,UAAM4K,mBAAyC,GAAG;AAC9C1F,MAAAA,YAAY,EAAEkE,WADgC;AAE9CjE,MAAAA,IAAI,EAAE,cAFwC;AAG9CC,MAAAA,MAAM,EAAE,MAAMyF,YAAY,CAACF,SAAD,EAAYvB,WAAZ;AAHoB,KAAlD;AAMA/J,IAAAA,YAAY,CAACwJ,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU+B,mBAAV,CAAT,CAAZ,CAV4B,CAY5B;;AACA,UAAMvB,UAAU,GAAGjK,SAAS,CAAC2H,MAAV,GAAmBrE,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBmH,MAA3D;AACA,UAAMuC,MAAM,GAAGrC,IAAI,CAACsC,KAAL,CAAWF,UAAU,GAAGpC,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAxB,CAAf;AACA,UAAM8K,GAAG,GAAGH,UAAU,GAAGpC,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAzB;AAEA,UAAM+K,QAAQ,GAAG;AACb5K,MAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsB2K,GAAG,GAAG9K,gBADpB;AAEbI,MAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuBwK,MAAM,GAAG3K;AAFzB,KAAjB;AAKAY,IAAAA,YAAY,CAACsJ,IAAI,KAAK,EAClB,GAAGA,IADe;AAElB,OAAC8B,SAAD,GAAalB;AAFK,KAAL,CAAL,CAAZ;AAKAxJ,IAAAA,aAAa,CAAC4I,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAb;AACAxI,IAAAA,cAAc,CAAC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,CAAC,EAAE,CAArB;AAAwBC,MAAAA,CAAC,EAAE,CAA3B;AAA8BC,MAAAA,IAAI,EAAE;AAApC,KAAD,CAAd;AACH,GA7BD;;AA+BA,QAAMoK,YAAY,GAAG,CAACC,MAAD,EAAiBR,QAAjB,KAAsC;AACvD,UAAM7H,aAAa,GAAGD,gBAAgB,EAAtC;;AAEA,UAAMuI,gBAAgB,gBAClB,QAAC,UAAD;AAEI,MAAA,QAAQ,EAAET,QAFd;AAGI,MAAA,UAAU,EAAE,MAAMpH,gBAAgB,CAAC4H,MAAD,CAHtC;AAII,MAAA,UAAU,EAAE,MAAM3H,cAAc,CAAC2H,MAAD,CAJpC;AAKI,MAAA,OAAO,EAAE,MAAM1H,YAAY,CAAC0H,MAAD,CAL/B;AAMI,MAAA,QAAQ,EAAGN,OAAD,IAAaQ,oBAAoB,CAACF,MAAD,EAASN,OAAT,CAN/C;AAOI,MAAA,UAAU,EAAExJ,cAAc,KAAK8J;AAPnC,OACSA,MADT;AAAA;AAAA;AAAA;AAAA,YADJ;;AAYA3L,IAAAA,UAAU,CAAC0J,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,OAACiC,MAAD,GAAU;AACN/H,QAAAA,MAAM,EAAEN,aAAa,GAAG,CADlB;AAENgE,QAAAA,SAAS,EAAE,KAFL;AAGN5C,QAAAA,SAAS,EAAEkH,gBAHL;AAINpH,QAAAA,IAAI,EAAE2G,QAJA;AAKNnF,QAAAA,IAAI,EAAE;AALA;AAFM,KAAL,CAAL,CAAV;AAUH,GAzBD;;AA2BA,QAAM6F,oBAAoB,GAAG,CAACF,MAAD,EAAiBN,OAAjB,KAAqC;AAC9DnL,IAAAA,YAAY,CAACmG,aAAa,IAAIA,aAAa,CAACyF,GAAd,CAAkB1F,QAAQ,IAAI;AACxD,UAAIA,QAAQ,CAACL,YAAT,KAA0B4F,MAA9B,EAAsC;AAClC,eAAO,EAAE,GAAGvF,QAAL;AAAeL,UAAAA,YAAY,EAAEsF;AAA7B,SAAP;AACH;;AACD,aAAOjF,QAAP;AACH,KAL6B,CAAlB,CAAZ;AAMApG,IAAAA,UAAU,CAACoH,WAAW,IAAI;AACtB,YAAMC,UAAU,GAAG,EAAE,GAAGD;AAAL,OAAnB;;AACA,UAAIC,UAAU,CAACsE,MAAD,CAAd,EAAwB;AACpBtE,QAAAA,UAAU,CAACsE,MAAD,CAAV,CAAmBnH,IAAnB,GAA0B6G,OAA1B;AACH;;AACD,aAAOhE,UAAP;AACH,KANS,CAAV;AAOAvF,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAfD;;AAiBA,QAAMiK,YAAY,GAAIxC,QAAD,IAAsB;AACvC,UAAMxI,cAAc,GAAGN,OAAO,CAAC8I,QAAD,CAA9B;;AACA,QAAIxI,cAAJ,EAAoB;AAChBA,MAAAA,cAAc,CAAC0C,OAAf,CAAuB+F,IAAI,IAAII,eAAe,CAAC,aAAD,EAAgBJ,IAAhB,CAA9C;AACH;;AACDI,IAAAA,eAAe,CAAC,aAAD,EAAgB;AAC3B7D,MAAAA,YAAY,EAAEpE,WAAW,CAAC4H,QAAD,CAAX,IAA0B,cAAaA,QAAQ,CAACyC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAuB,EADjD;AAE3BhG,MAAAA,IAAI,EAAE,YAFqB;AAG3BC,MAAAA,MAAM,EAAEgG;AAHmB,KAAhB,CAAf;AAKAvL,IAAAA,UAAU,CAACgJ,IAAI,IAAI;AACf,YAAMwC,UAAU,GAAG,EAAE,GAAGxC;AAAL,OAAnB;AACA,aAAOwC,UAAU,CAAC3C,QAAD,CAAjB;AACA,aAAO2C,UAAP;AACH,KAJS,CAAV;AAKAtK,IAAAA,cAAc,CAAC8H,IAAI,IAAI;AACnB,YAAMyC,cAAc,GAAG,EAAE,GAAGzC;AAAL,OAAvB;AACA,aAAOyC,cAAc,CAAC5C,QAAD,CAArB;AACA,aAAO4C,cAAP;AACH,KAJa,CAAd;AAKAnM,IAAAA,UAAU,CAAC0J,IAAI,IAAI;AACf,YAAMrC,UAAU,GAAG,EAAE,GAAGqC;AAAL,OAAnB;AACA,aAAOrC,UAAU,CAACkC,QAAD,CAAjB;AACA,aAAOlC,UAAP;AACH,KAJS,CAAV;AAKAd,IAAAA,cAAc,CAAC6F,UAAf,CAA0B7C,QAA1B;AACH,GA1BD;;AA4BA,QAAM8C,UAAU,GAAIlB,QAAD,IAAsB;AACrC,UAAMmB,IAAI,GAAGrM,SAAS,CAACwJ,IAAV,CAAerD,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0BoF,QAArD,CAAb;;AACA,QAAImB,IAAJ,EAAU;AACN1C,MAAAA,eAAe,CAAC,aAAD,EAAgB0C,IAAhB,CAAf;AACH;;AACDpM,IAAAA,YAAY,CAACwJ,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYvD,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0BoF,QAAlD,CAAT,CAAZ;AACAnL,IAAAA,UAAU,CAAC0J,IAAI,IAAI;AACf,YAAMrC,UAAU,GAAG,EAAE,GAAGqC;AAAL,OAAnB;AACA,aAAOrC,UAAU,CAAC8D,QAAD,CAAjB;AACA,aAAO9D,UAAP;AACH,KAJS,CAAV;AAKAd,IAAAA,cAAc,CAAC6F,UAAf,CAA0BjB,QAA1B,EAXqC,CAWA;AACxC,GAZD;;AAcA,QAAMjF,yBAAyB,GAAG,MAAM;AACpC,UAAMqG,iBAAuC,GAAG;AAC5CxG,MAAAA,YAAY,EAAE,WAD8B;AAE5CC,MAAAA,IAAI,EAAE,eAFsC;AAG5CC,MAAAA,MAAM,EAAEuG;AAHoC,KAAhD;AAMAtM,IAAAA,YAAY,CAACmG,aAAa,IAAI;AAC1B,YAAMoG,yBAAyB,GAAGpG,aAAa,CAACoD,IAAd,CAAmBrD,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0B,WAAzD,CAAlC;;AACA,UAAI,CAAC0G,yBAAL,EAAgC;AAC5B,eAAO,CAAC,GAAGpG,aAAJ,EAAmBkG,iBAAnB,CAAP;AACH;;AACD,aAAOlG,aAAP;AACH,KANW,CAAZ;AAQA,UAAM6D,UAAU,GAAGjK,SAAS,CAAC2H,MAAV,GAAmBrE,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBmH,MAA3D;AACA,UAAMuC,MAAM,GAAGrC,IAAI,CAACsC,KAAL,CAAWF,UAAU,GAAGpC,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAxB,CAAf;AACA,UAAM8K,GAAG,GAAGH,UAAU,GAAGpC,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAzB;AAEA,UAAM+K,QAAQ,GAAG;AACb5K,MAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsB2K,GAAG,GAAG9K,gBADpB;AAEbI,MAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuBwK,MAAM,GAAG3K;AAFzB,KAAjB;AAKAY,IAAAA,YAAY,CAACsJ,IAAI,KAAK,EAClB,GAAGA,IADe;AAElB,mBAAaY;AAFK,KAAL,CAAL,CAAZ;AAIH,GA5BD;;AA8BA,QAAMkC,aAAa,GAAG,MAAM;AACxB,UAAMlJ,aAAa,GAAGD,gBAAgB,EAAtC;;AAEA,UAAMqJ,SAAS,gBACX,QAAC,SAAD;AACI,MAAA,UAAU,EAAE,MAAM3I,gBAAgB,CAAC,WAAD,CADtC;AAEI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,WAAD,CAFpC;AAGI,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,WAAD,CAH/B;AAII,MAAA,SAAS,EAAEH,SAJf;AAKI,MAAA,gBAAgB,EAAET;AALtB;AAAA;AAAA;AAAA;AAAA,YADJ;;AAUArD,IAAAA,UAAU,CAAC0J,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,mBAAa;AACT9F,QAAAA,MAAM,EAAEN,aAAa,GAAG,CADf;AAETgE,QAAAA,SAAS,EAAE,KAFF;AAGT5C,QAAAA,SAAS,EAAEgI,SAHF;AAITlI,QAAAA,IAAI,EAAE,WAJG;AAKTwB,QAAAA,IAAI,EAAE;AALG;AAFG,KAAL,CAAL,CAAV;AAUH,GAvBD;;AAyBA,QAAM2G,aAAa,GAAIC,OAAD,IAAqB;AACvC,UAAMC,MAAM,GAAGtJ,MAAM,CAACC,IAAP,CAAYc,YAAZ,EAA0BmF,IAA1B,CACV/F,GAAD,IAASY,YAAY,CAACZ,GAAD,CAAZ,CAAkBc,IAAlB,CAAuByC,WAAvB,OAAyC2F,OAAO,CAAC3F,WAAR,EADvC,CAAf;;AAGA,QAAI4F,MAAJ,EAAY;AACR,YAAMhH,GAAG,GAAGvB,YAAY,CAACuI,MAAD,CAAxB;AACA/I,MAAAA,SAAS,CACL+B,GAAG,CAACnC,GADC,eAEL,QAAC,GAAD,CAAK,SAAL;AACI,QAAA,UAAU,EAAE,MAAMK,gBAAgB,CAAC8B,GAAG,CAACnC,GAAL,CADtC;AAEI,QAAA,UAAU,EAAE,MAAMM,cAAc,CAAC6B,GAAG,CAACnC,GAAL,CAFpC;AAGI,QAAA,OAAO,EAAE,MAAMO,YAAY,CAAC4B,GAAG,CAACnC,GAAL;AAH/B,SAISmC,GAAG,CAACnC,GAJb;AAAA;AAAA;AAAA;AAAA,cAFK,CAAT;AASH,KAXD,MAWO;AACHoJ,MAAAA,KAAK,CAAE,gBAAeF,OAAQ,cAAzB,CAAL;AACH;AACJ,GAlBD;;AAoBA,QAAMzG,oBAAoB,GAAG,MAAM;AAC/B,UAAM4G,kBAAwC,GAAG;AAC7ChH,MAAAA,YAAY,EAAE,aAD+B;AAE7CC,MAAAA,IAAI,EAAE,gBAFuC;AAG7CC,MAAAA,MAAM,EAAEgG;AAHqC,KAAjD;AAMA/L,IAAAA,YAAY,CAACmG,aAAa,IAAI;AAC1B,YAAM2G,0BAA0B,GAAG3G,aAAa,CAACoD,IAAd,CAAmBrD,QAAQ,IAAIA,QAAQ,CAACL,YAAT,KAA0B,aAAzD,CAAnC;;AACA,UAAI,CAACiH,0BAAL,EAAiC;AAC7B,eAAO,CAAC,GAAG3G,aAAJ,EAAmB0G,kBAAnB,CAAP;AACH;;AACD,aAAO1G,aAAP;AACH,KANW,CAAZ;AAQA3F,IAAAA,UAAU,CAACgJ,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,qBAAe;AAFC,KAAL,CAAL,CAAV;AAKA,UAAMQ,UAAU,GAAGjK,SAAS,CAAC2H,MAAV,GAAmBrE,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBmH,MAA3D;AACA,UAAMuC,MAAM,GAAGrC,IAAI,CAACsC,KAAL,CAAWF,UAAU,GAAGpC,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAxB,CAAf;AACA,UAAM8K,GAAG,GAAGH,UAAU,GAAGpC,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAzB;AAEA,UAAM+K,QAAQ,GAAG;AACb5K,MAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsB2K,GAAG,GAAG9K,gBADpB;AAEbI,MAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuBwK,MAAM,GAAG3K;AAFzB,KAAjB;AAKAY,IAAAA,YAAY,CAACsJ,IAAI,KAAK,EAClB,GAAGA,IADe;AAElB,qBAAeY;AAFG,KAAL,CAAL,CAAZ;AAIH,GAjCD;;AAmCA,QAAM2B,cAAc,GAAG,MAAM;AACzB,UAAM3I,aAAa,GAAGD,gBAAgB,EAAtC;;AAEA,UAAM4J,gBAAgB,gBAClB,QAAC,UAAD;AACI,MAAA,QAAQ,EAAExM,OAAO,CAAC,aAAD,CAAP,IAA0B,EADxC;AAEI,MAAA,UAAU,EAAE,MAAMsD,gBAAgB,CAAC,aAAD,CAFtC;AAGI,MAAA,UAAU,EAAE,MAAMC,cAAc,CAAC,aAAD,CAHpC;AAII,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,aAAD,CAJ/B;AAKI,MAAA,SAAS,EAAGuF,IAAD,IAAUI,eAAe,CAAC,aAAD,EAAgBJ,IAAhB,CALxC;AAMI,MAAA,YAAY,EAAGqB,QAAD,IAAcH,oBAAoB,CAAC,aAAD,EAAgBG,QAAhB,CANpD;AAOI,MAAA,QAAQ,EAAE,CAACA,QAAD,EAAWQ,OAAX,KAAuBQ,oBAAoB,CAAChB,QAAD,EAAWQ,OAAX,CAPzD;AAQI,MAAA,SAAS,EAAEvH,SARf;AASI,MAAA,gBAAgB,EAAET;AATtB;AAAA;AAAA;AAAA;AAAA,YADJ;;AAcArD,IAAAA,UAAU,CAAC0J,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,qBAAe;AACX9F,QAAAA,MAAM,EAAEN,aAAa,GAAG,CADb;AAEXgE,QAAAA,SAAS,EAAE,KAFA;AAGX5C,QAAAA,SAAS,EAAEuI,gBAHA;AAIXzI,QAAAA,IAAI,EAAE,aAJK;AAKXwB,QAAAA,IAAI,EAAEvF,OAAO,CAAC,aAAD,CAAP,IAA0BA,OAAO,CAAC,aAAD,CAAP,CAAuBmH,MAAvB,GAAgC,CAA1D,GAA8D,oBAA9D,GAAqF;AALhF;AAFC,KAAL,CAAL,CAAV;AAUH,GA3BD;;AA6BA,QAAMsF,eAAe,GAAG,MAAM;AAC1BxM,IAAAA,UAAU,CAACgJ,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhB,qBAAe;AAFC,KAAL,CAAL,CAAV;AAIH,GALD;;AAOA,QAAMyD,YAAY,GAAG,MAAM;AACvB,UAAMC,YAA8D,GAAG,EAAvE;AACA,UAAMlD,UAAU,GAAGjK,SAAS,CAAC2H,MAAV,GAAmBrE,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBmH,MAA3D;AACA,QAAIyF,KAAK,GAAG,CAAZ;AAEApN,IAAAA,SAAS,CAACwD,OAAV,CAAmB2C,QAAD,IAAc;AAC5B,UAAIA,QAAQ,CAACL,YAAT,KAA0B,WAA1B,IAAyCK,QAAQ,CAACL,YAAT,KAA0B,aAAvE,EAAsF;AAClF,cAAMoE,MAAM,GAAGrC,IAAI,CAACsC,KAAL,CAAWiD,KAAK,GAAGvF,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAnB,CAAf;AACA,cAAM8K,GAAG,GAAGgD,KAAK,GAAGvF,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAApB;AACA6N,QAAAA,YAAY,CAAChH,QAAQ,CAACL,YAAV,CAAZ,GAAsC;AAClCrG,UAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsB2K,GAAG,GAAG9K,gBADC;AAElCI,UAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuBwK,MAAM,GAAG3K;AAFJ,SAAtC;AAIA6N,QAAAA,KAAK;AACR;AACJ,KAVD;AAYA9J,IAAAA,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBgD,OAArB,CAA8B8F,QAAD,IAAc;AACvC,YAAMY,MAAM,GAAGrC,IAAI,CAACsC,KAAL,CAAWiD,KAAK,GAAGvF,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAnB,CAAf;AACA,YAAM8K,GAAG,GAAGgD,KAAK,GAAGvF,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAApB;AACA6N,MAAAA,YAAY,CAAC7D,QAAD,CAAZ,GAAyB;AACrB7J,QAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsB2K,GAAG,GAAG9K,gBADZ;AAErBI,QAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAuBwK,MAAM,GAAG3K;AAFjB,OAAzB;AAIA6N,MAAAA,KAAK;AACR,KARD;AAUAD,IAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4B;AACxB1N,MAAAA,GAAG,EAAEiE,MAAM,CAACuE,WAAP,GAAqB3I,gBAArB,GAAwC,EADrB;AAExBI,MAAAA,IAAI,EAAEF,cAAc,CAACE;AAFG,KAA5B;AAKAyN,IAAAA,YAAY,CAAC,aAAD,CAAZ,GAA8B;AAC1B1N,MAAAA,GAAG,EAAEiE,MAAM,CAACuE,WAAP,GAAqB3I,gBAArB,GAAwC,EADnB;AAE1BI,MAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAsBH;AAFF,KAA9B;AAKAY,IAAAA,YAAY,CAACgN,YAAD,CAAZ;AACH,GAtCD;;AAwCAvP,EAAAA,SAAS,CAAC,MAAM;AACZsP,IAAAA,YAAY;AACf,GAFQ,EAEN,CAAClN,SAAD,EAAYQ,OAAZ,CAFM,CAAT;AAIA,SAAO,CAACJ,QAAD,gBACH;AAAK,IAAA,KAAK,EAAEiN,MAAM,CAACC,OAAnB;AAA4B,IAAA,MAAM,EAAE/E,UAApC;AAAgD,IAAA,UAAU,EAAEqB,cAA5D;AAA4E,IAAA,aAAa,EAAEiB,iBAA3F;AAA8G,IAAA,OAAO,EAAEM,WAAvH;AAAA,eAEK7H,MAAM,CAACC,IAAP,CAAYzD,OAAZ,EAAqB+L,GAArB,CAA0BpI,GAAD,IAAS;AAC/B,YAAMgE,OAAO,GAAG3H,OAAO,CAAC2D,GAAD,CAAP,CAAagB,SAA7B;AACA,UAAI,CAACgD,OAAL,EAAc,oBAAO,mBAAW,OAAMhE,GAAI,EAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACd,0BACI;AAEI,QAAA,KAAK,EAAEH,MAAM,CAACiK,MAAP,CACH,EADG,EAEH;AAAE5J,UAAAA,MAAM,EAAE7D,OAAO,CAAC2D,GAAD,CAAP,CAAaE;AAAvB,SAFG,EAGH7D,OAAO,CAAC2D,GAAD,CAAP,CAAa4D,SAAb,IAA0BgG,MAAM,CAAChG,SAH9B,CAFX;AAAA,+BAQK3J,KAAK,CAACsK,YAAN,CAAmBP,OAAnB,EAA4B;AACzBhE,UAAAA,GADyB;AAEzByB,UAAAA,UAAU,EAAE,MAAMpB,gBAAgB,CAACL,GAAD,CAFT;AAGzB2B,UAAAA,OAAO,EAAE,MAAMpB,YAAY,CAACP,GAAD;AAHF,SAA5B;AARL,SACU,OAAMA,GAAI,EADpB;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBH,KAnBA,CAFL,eAsBI;AAAK,MAAA,KAAK,EAAE4J,MAAM,CAACrN,SAAnB;AAAA,iBACKA,SAAS,CAAC6L,GAAV,CAAc,CAAC1F,QAAD,EAAWqH,CAAX,KAAiB;AAC5B,cAAMnD,QAAQ,GAAGnK,SAAS,CAACiG,QAAQ,CAACL,YAAV,CAAT,IAAoC;AACjDrG,UAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsB+N,CAAC,GAAG3F,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAL,GAAkEA,gBAD3C;AAEjDI,UAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAsBmI,IAAI,CAACsC,KAAL,CAAWqD,CAAC,GAAG3F,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAf,IAA4EC;AAFvD,SAArD;AAKA,4BACI;AACI,UAAA,KAAK,EAAE+D,MAAM,CAACiK,MAAP,CAAc,EAAd,EAAkBF,MAAM,CAACI,iBAAzB,EAA4CpD,QAA5C,CADX;AAGI,UAAA,SAAS,MAHb;AAII,UAAA,WAAW,EAAGjC,CAAD,IAAOD,eAAe,CAACC,CAAD,EAAIjC,QAAQ,CAACL,YAAb,CAJvC;AAKI,UAAA,aAAa,EAAGsC,CAAD,IAAO6C,qBAAqB,CAAC7C,CAAD,EAAIjC,QAAQ,CAACL,YAAb,CAL/C;AAAA,iCAOI,QAAC,eAAD;AACI,YAAA,IAAI,EAAEK,QAAQ,CAACJ,IADnB;AAEI,YAAA,YAAY,EAAEI,QAAQ,CAACL,YAF3B;AAGI,YAAA,MAAM,EAAEK,QAAQ,CAACH,MAHrB;AAII,YAAA,UAAU,EAAEpE,cAAc,KAAKuE,QAAQ,CAACL,YAJ5C;AAKI,YAAA,QAAQ,EAAGsF,OAAD,IAAaQ,oBAAoB,CAACzF,QAAQ,CAACL,YAAV,EAAwBsF,OAAxB;AAL/C;AAAA;AAAA;AAAA;AAAA;AAPJ,WAESjF,QAAQ,CAACL,YAFlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAiBH,OAvBA,CADL,EAyBKxC,MAAM,CAACC,IAAP,CAAY/C,OAAZ,EAAqBqL,GAArB,CAA0BvC,QAAD,IAAc;AACpC,YAAIA,QAAQ,KAAK,aAAjB,EAAgC,OAAO,IAAP;AAChC,cAAMoE,MAAM,GAAGlN,OAAO,CAAC8I,QAAD,CAAtB;AACA,cAAMiB,UAAU,GAAG7I,WAAW,CAAC4H,QAAD,CAAX,IAA0B,cAAaA,QAAQ,CAACyC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAuB,EAAjF;AACA,cAAM1B,QAAQ,GAAGnK,SAAS,CAACoJ,QAAD,CAAT,IAAuB;AACpC7J,UAAAA,GAAG,EAAED,cAAc,CAACC,GAAf,GAAsB,CAACO,SAAS,CAAC2H,MAAV,GAAmBgG,QAAQ,CAACrE,QAAQ,CAACyC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAD,CAA3B,GAAsD,CAAvD,IAA4DlE,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAA7D,GAA0HA,gBADhH;AAEpCI,UAAAA,IAAI,EAAEF,cAAc,CAACE,IAAf,GAAsBmI,IAAI,CAACsC,KAAL,CAAW,CAACnK,SAAS,CAAC2H,MAAV,GAAmBgG,QAAQ,CAACrE,QAAQ,CAACyC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAD,CAA3B,GAAsD,CAAvD,IAA4DlE,IAAI,CAACsC,KAAL,CAAW,CAACzG,MAAM,CAACuE,WAAP,GAAqB,GAAtB,IAA6B3I,gBAAxC,CAAvE,IAAoIC;AAF5H,SAAxC;AAKA,4BACI;AACI,UAAA,KAAK,EAAE+D,MAAM,CAACiK,MAAP,CAAc,EAAd,EAAkBF,MAAM,CAACI,iBAAzB,EAA4CpD,QAA5C,CADX;AAGI,UAAA,SAAS,MAHb;AAII,UAAA,WAAW,EAAGjC,CAAD,IAAOD,eAAe,CAACC,CAAD,EAAIkB,QAAJ,CAJvC;AAKI,UAAA,aAAa,EAAGlB,CAAD,IAAO0C,uBAAuB,CAAC1C,CAAD,EAAIkB,QAAJ,CALjD;AAMI,UAAA,MAAM,EAAGlB,CAAD,IAAOiB,kBAAkB,CAACjB,CAAD,EAAIkB,QAAJ,CANrC;AAOI,UAAA,UAAU,EAAEM,cAPhB;AAAA,iCASI,QAAC,eAAD;AACI,YAAA,IAAI,EAAC,YADT;AAEI,YAAA,YAAY,EAAEW,UAFlB;AAGI,YAAA,MAAM,EAAE,MAAMD,UAAU,CAAChB,QAAD,EAAWiB,UAAX,CAH5B;AAII,YAAA,UAAU,EAAE3I,cAAc,KAAK0H,QAJnC;AAKI,YAAA,QAAQ,EAAG8B,OAAD,IAAa;AACnBV,cAAAA,kBAAkB,CAACpB,QAAD,EAAW8B,OAAX,CAAlB;AACAvJ,cAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AATJ,WAESyH,QAFT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAsBH,OA/BA,CAzBL,eAyDI;AACI,QAAA,KAAK,EAAEhG,MAAM,CAACiK,MAAP,CAAc,EAAd,EAAkBF,MAAM,CAACI,iBAAzB,EAA4CvN,SAAS,CAAC,aAAD,CAArD,CADX;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,WAAW,EAAGkI,CAAD,IAAOD,eAAe,CAACC,CAAD,EAAI,aAAJ,CAJvC;AAKI,QAAA,aAAa,EAAGA,CAAD,IAAO6C,qBAAqB,CAAC7C,CAAD,EAAI,aAAJ,CAL/C;AAAA,+BAOI,QAAC,eAAD;AACI,UAAA,IAAI,EAAE5H,OAAO,CAAC,aAAD,CAAP,IAA0BA,OAAO,CAAC,aAAD,CAAP,CAAuBmH,MAAvB,GAAgC,CAA1D,GAA8D,oBAA9D,GAAqF,gBAD/F;AAEI,UAAA,YAAY,EAAC,aAFjB;AAGI,UAAA,MAAM,EAAEqE,cAHZ;AAII,UAAA,UAAU,EAAEpK,cAAc,KAAK,aAJnC;AAKI,UAAA,QAAQ,EAAGwJ,OAAD,IAAaQ,oBAAoB,CAAC,aAAD,EAAgBR,OAAhB;AAL/C;AAAA;AAAA;AAAA;AAAA;AAPJ,SAEQ,aAFR;AAAA;AAAA;AAAA;AAAA,cAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,eA+FI,QAAC,OAAD;AACI,MAAA,OAAO,EAAEtL,OADb;AAEI,MAAA,cAAc,EAAEwH,cAFpB;AAGI,MAAA,QAAQ,EAAEE,aAHd;AAII,MAAA,SAAS,EAAE3D,SAJf;AAKI,MAAA,gBAAgB,EAAE3B,gBALtB;AAMI,MAAA,YAAY,EAAE8B,YANlB;AAOI,MAAA,aAAa,EAAE0I,aAPnB,CAOkC;;AAPlC;AAAA;AAAA;AAAA;AAAA,YA/FJ,EAwGK1L,WAAW,CAACE,OAAZ,iBACG;AAAK,MAAA,KAAK,EAAE,EAAE,GAAGmM,MAAM,CAACrM,WAAZ;AAAyBvB,QAAAA,GAAG,EAAEuB,WAAW,CAACI,CAA1C;AAA6C1B,QAAAA,IAAI,EAAEsB,WAAW,CAACG;AAA/D,OAAZ;AAAA,gBACKH,WAAW,CAACK,IAAZ,KAAqB,SAArB,gBACG;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEgM,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAE9D,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAEuD,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAEtC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBADH,GASGtK,WAAW,CAACK,IAAZ,KAAqB,QAArB,gBACA;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEgM,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAEvC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAEgC,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAE,MAAM9B,YAAY,CAAC9K,WAAW,CAACgK,QAAb,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBADA,GASAhK,WAAW,CAACK,IAAZ,KAAqB,MAArB,gBACA;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEgM,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAEvC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAEgC,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAE,MAAMxB,UAAU,CAACpL,WAAW,CAACgK,QAAb,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBADA,gBAUA;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEqC,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAEvC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAEgC,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAE,MAAMxB,UAAU,CAACpL,WAAW,CAACgK,QAAb,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,KAAK,EAAEqC,MAAM,CAACO,eAAnB;AAAoC,UAAA,OAAO,EAAEX,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AA7BR;AAAA;AAAA;AAAA;AAAA,YAzGR;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,gBAuJH,QAAC,gBAAD;AACI,IAAA,WAAW,EAAE5M,WADjB;AAEI,IAAA,YAAY,EAAEC;AAFlB;AAAA;AAAA;AAAA;AAAA,UAvJJ;AA4JH,CAhnCD;;GAAMV,O;;KAAAA,O;AAknCN,MAAMyN,MAAqB,GAAG;AAC1BC,EAAAA,OAAO,EAAE;AACLO,IAAAA,SAAS,EAAE,MADN;AAELC,IAAAA,IAAI,EAAE,CAFD;AAGLzD,IAAAA,QAAQ,EAAE;AAHL,GADiB;AAM1BjK,EAAAA,QAAQ,EAAE;AACNyN,IAAAA,SAAS,EAAE,MADL;AAENC,IAAAA,IAAI,EAAE,CAFA;AAGNnL,IAAAA,eAAe,EAAE;AAHX,GANgB;AAW1B8K,EAAAA,iBAAiB,EAAE;AACfpD,IAAAA,QAAQ,EAAE,UADK;AAEf0D,IAAAA,MAAM,EAAE;AAFO,GAXO;AAe1B/N,EAAAA,SAAS,EAAE;AACPqK,IAAAA,QAAQ,EAAE,UADH;AAEP5K,IAAAA,GAAG,EAAE,EAFE;AAGPC,IAAAA,IAAI,EAAE;AAHC,GAfe;AAoB1B2H,EAAAA,SAAS,EAAE;AACP2G,IAAAA,aAAa,EAAE,MADR;AAEPC,IAAAA,OAAO,EAAE;AAFF,GApBe;AAwB1BjN,EAAAA,WAAW,EAAE;AACTqJ,IAAAA,QAAQ,EAAE,UADD;AAET1H,IAAAA,eAAe,EAAE,OAFR;AAGTuL,IAAAA,MAAM,EAAE,gBAHC;AAITC,IAAAA,SAAS,EAAE,4BAJF;AAKTxK,IAAAA,MAAM,EAAE;AALC,GAxBa;AA+B1BiK,EAAAA,eAAe,EAAE;AACbQ,IAAAA,OAAO,EAAE,UADI;AAEbL,IAAAA,MAAM,EAAE;AAFK;AA/BS,CAA9B;AAqCA,eAAenO,OAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport Doom from '../applications/Doom';\nimport OregonTrail from '../applications/OregonTrail';\nimport ShutdownSequence from './ShutdownSequence';\nimport ThisComputer from '../applications/ThisComputer';\nimport Wordle from '../applications/wordle';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut, { DesktopShortcutProps } from './DesktopShortcut';\nimport Scrabble from '../applications/Scrabble';\n// import Minesweeper from '../applications/MinesweeperGame/Minesweeper';\nimport Credits from '../applications/Credits';\nimport InternetExplorer from '../applications/InternetExplorer';\nimport Folder from '../applications/folder';\nimport RecycleBin from '../applications/RecycleBin';\nimport { IconName } from '../../assets/icons';\nimport Settings from '../applications/Settings';\nimport Window from './Window';\nimport bg0 from '../../assets/bg/bg0.png';\nimport TextEditor from '../applications/TextEditor';\nimport MSN from '../applications/MSN';\nimport Run from '../applications/Run';\nimport Documents from '../applications/Documents';\nimport GamesFolder from '../applications/GamesFolder';\nimport GamesText from '../applications/GamesText';\nimport Sudoku from '../applications/Sudoku';\nimport Hangman from '../applications/Hangman';\nimport Game2048 from '../applications/Game2048';\nimport TicTacToe from '../applications/TicTacToe';\n\nexport interface DesktopProps {}\n\ntype ExtendedWindowAppProps<T> = T & WindowAppProps;\n\nconst GRID_SIZE = 100;\nconst VERTICAL_SPACING = 104;\nconst HORIZONTAL_SPACING = 100;\nconst INITIAL_OFFSET = { top: 16, left: 6 };\nconst WINDOW_OFFSET = 30;\n\ninterface ContextMenuState {\n    visible: boolean;\n    x: number;\n    y: number;\n    type: 'desktop' | 'folder' | 'file';\n    targetId?: string;\n}\n\nconst Desktop: React.FC<DesktopProps> = (props) => {\n    const [windows, setWindows] = useState<DesktopWindows>({});\n    const [shortcuts, setShortcuts] = useState<DesktopShortcutProps[]>([]);\n    const [positions, setPositions] = useState<{ [key: string]: { top: number; left: number } }>({});\n    const [shutdown, setShutdown] = useState(false);\n    const [numShutdowns, setNumShutdowns] = useState(1);\n    const [folders, setFolders] = useState<{[key: string]: DesktopShortcutProps[]}>({});\n    const [nextFolderId, setNextFolderId] = useState(1);\n    const [nextFileId, setNextFileId] = useState(1);\n    const [folderContents, setFolderContents] = useState<{ [key: string]: DesktopShortcutProps[] }>({});\n    const [contextMenu, setContextMenu] = useState<ContextMenuState>({ \n        visible: false, \n        x: 0, \n        y: 0, \n        type: 'desktop' \n    });\n    const [background, setBackground] = useState<string | null>(null);\n    const [theme, setTheme] = useState<string | null>(null);\n    const [folderNames, setFolderNames] = useState<{[key: string]: string}>({});\n    const [renamingFolder, setRenamingFolder] = useState<string | null>(null);\n\n    // Initialize background from localStorage on component mount\n    useEffect(() => {\n        const savedBg = localStorage.getItem('background');\n        const savedTheme = localStorage.getItem('theme');\n        if (savedBg && savedTheme) {\n            updateBackground(savedBg, savedTheme);\n        } else {\n            const defaultBg = bg0;\n            const defaultTheme = '#098684';\n            updateBackground(defaultBg, defaultTheme);\n            localStorage.setItem('background', defaultBg);\n            localStorage.setItem('theme', defaultTheme);\n        }\n    }, []);\n\n    useEffect(() => {\n        const bodyBG = document.getElementsByTagName('body')[0];\n        bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n        bodyBG.style.backgroundColor = '#c5c4c4';\n        bodyBG.style.backgroundSize = 'cover';\n        bodyBG.style.backgroundPosition = 'center';\n        bodyBG.style.backgroundRepeat = 'no-repeat';\n        bodyBG.style.height = '100vh';\n        bodyBG.style.margin = '0';\n    }, []);\n\n    const updateBackground = useCallback((background: string, theme: string) => {\n        console.log('Updating background:', { background, theme });\n        setBackground(background);\n        setTheme(theme);\n        const bodyBG = document.getElementsByTagName('body')[0];\n        bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n        bodyBG.style.backgroundColor = theme;\n        bodyBG.style.backgroundImage = `url(${background})`;\n        bodyBG.style.backgroundSize = 'cover';\n        bodyBG.style.backgroundPosition = 'center';\n        bodyBG.style.backgroundRepeat = 'no-repeat';\n        bodyBG.style.height = '100vh';\n        bodyBG.style.margin = '0';\n    }, []);\n\n    const getHighestZIndex = useCallback((): number => {\n        let highestZIndex = 0;\n        Object.keys(windows).forEach((key) => {\n            const window = windows[key];\n            if (window) {\n                if (window.zIndex > highestZIndex)\n                    highestZIndex = window.zIndex;\n            }\n        });\n        return highestZIndex;\n    }, [windows]);\n\n    const openCreditsApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'credits',\n            <Credits\n                onInteract={() => onWindowInteract('credits')}\n                onMinimize={() => minimizeWindow('credits')}\n                onClose={() => removeWindow('credits')}\n                key=\"credits\"\n            />\n        );\n    };\n\n    const openMSNApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'msn',\n            <MSN\n                onInteract={() => onWindowInteract('msn')}\n                onMinimize={() => minimizeWindow('msn')}\n                onClose={() => removeWindow('msn')}\n                key=\"msn\"\n            />\n        );\n    };\n\n    const openWordleApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'wordle',\n            <Wordle\n                onInteract={() => onWindowInteract('wordle')}\n                onMinimize={() => minimizeWindow('wordle')}\n                onClose={() => removeWindow('wordle')}\n                key=\"wordle\"\n            />\n        );\n    };\n\n    const openGamesText = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'gamesText',\n            <GamesText\n                fileName=\"Games Info\"\n                onInteract={() => onWindowInteract('gamesText')}\n                onMinimize={() => minimizeWindow('gamesText')}\n                onClose={() => removeWindow('gamesText')}\n                key=\"gamesText\"\n            />\n        );\n    };\n\n    const openTicTacToeApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'ticTacToe',\n            <TicTacToe\n                onInteract={() => onWindowInteract('ticTacToe')}\n                onMinimize={() => minimizeWindow('ticTacToe')}\n                onClose={() => removeWindow('ticTacToe')}\n                key=\"ticTacToe\"\n            />\n        );\n    };\n\n    const APPLICATIONS: {\n        [key in string]: {\n            key: string;\n            name: string;\n            shortcutIcon: IconName;\n            component: React.FC<ExtendedWindowAppProps<any>>;\n        };\n    } = {\n        // Removed the folder entry from apps since i made it seperate\n        showcase: {\n            key: 'showcase',\n            name: 'Showcase',\n            shortcutIcon: 'showcaseIcon',\n            component: ShowcaseExplorer,\n        },\n        wordle: {\n            key: 'wordle',\n            name: 'Wordle',\n            shortcutIcon: 'wordleIcon',\n            component: Wordle,\n        },\n        trail: {\n            key: 'trail',\n            name: 'The Oregon Trail',\n            shortcutIcon: 'trailIcon',\n            component: OregonTrail,\n        },\n        doom: {\n            key: 'doom',\n            name: 'Doom',\n            shortcutIcon: 'doomIcon',\n            component: Doom,\n        },\n        scrabble: {\n            key: 'scrabble',\n            name: 'Scrabble',\n            shortcutIcon: 'scrabbleIcon',\n            component: Scrabble,\n        },\n        // chess: {\n        //     key: 'chess',\n        //     name: 'Chess',\n        //     shortcutIcon: 'chessIcon',\n        //     component: Settings,\n        // },\n        internetExplorer: {\n            key: 'internetExplorer',\n            name: 'Google Chrome',\n            shortcutIcon: 'InternetExplorerIcon',\n            component: InternetExplorer,\n        },\n        credits: {\n            key: 'credits',\n            name: 'Credits',\n            shortcutIcon: 'credits',\n            component: Credits,\n        },\n        settings: {\n            key: 'settings',\n            name: 'Settings',\n            shortcutIcon: 'setting',\n            component: Settings,\n        },\n        gamesFolder: {\n            key: 'gamesFolder',\n            name: 'Games Folder',\n            shortcutIcon: 'folderIcon',\n            component: (props: ExtendedWindowAppProps<any>) => (\n                <GamesFolder\n                    onInteract={props.onInteract}\n                    onMinimize={props.onMinimize}\n                    onClose={props.onClose}\n                    openWordleApp={openWordleApp}\n                    openGamesText={openGamesText}\n                    openSudokuApp={() => {\n                        const highestZIndex = getHighestZIndex();\n                        addWindow(\n                            'sudoku',\n                            <Sudoku\n                                onInteract={() => onWindowInteract('sudoku')}\n                                onMinimize={() => minimizeWindow('sudoku')}\n                                onClose={() => removeWindow('sudoku')}\n                                key=\"sudoku\"\n                            />\n                        );\n                    }}\n                    openHangmanApp={() => {\n                        const highestZIndex = getHighestZIndex();\n                        addWindow(\n                            'hangman',\n                            <Hangman\n                                onInteract={() => onWindowInteract('hangman')}\n                                onMinimize={() => minimizeWindow('hangman')}\n                                onClose={() => removeWindow('hangman')}\n                                key=\"hangman\"\n                            />\n                        );\n                    }}\n                    openTicTacToeApp={openTicTacToeApp}\n                />\n            ),\n        },\n        gamesText: {\n            key: 'gamesText',\n            name: 'Games Info',\n            shortcutIcon: 'textFileIcon',\n            component: GamesText,\n        },\n        sudoku: {\n            key: 'sudoku',\n            name: 'Sudoku',\n            shortcutIcon: 'folderIcon',\n            component: Sudoku,\n        },\n        hangman: {\n            key: 'hangman',\n            name: 'Hangman',\n            shortcutIcon: 'folderIcon',\n            component: Hangman,\n        },\n        game2048: {\n            key: 'game2048',\n            name: '2048',\n            shortcutIcon: 'folderIcon',\n            component: Game2048,\n        },\n        ticTacToe: {\n            key: 'ticTacToe',\n            name: 'Tic Tac Toe',\n            shortcutIcon: 'folderIcon',\n            component: TicTacToe,\n        },\n        //msn: {\n            //key: 'msn',\n           // name: 'MSN',\n            //shortcutIcon: 'msnIcon',\n           // component: MSN,\n       // },\n        // minesweeper: {\n        //     key: 'minesweeper',\n        //     name: 'Minesweeper',\n        //     shortcutIcon: 'setting',\n        //     component: (props: ExtendedWindowAppProps<any>) => (\n        //         <Window\n        //             closeWindow={props.onClose}\n        //             minimizeWindow={props.onMinimize}\n        //             onInteract={props.onInteract}\n        //             width={400}\n        //             height={400}\n        //             top={100}\n        //             left={100}\n        //             windowTitle=\"Minesweeper\"\n        //             windowBarIcon=\"setting\"\n        //         >\n        //             <Minesweeper\n        //                 onInteract={props.onInteract}\n        //                 onMinimize={props.onMinimize}\n        //                 onClose={props.onClose}\n        //             />\n        //         </Window>\n        //     ),\n        // },\n    };\n\n    useEffect(() => {\n        if (shutdown === true) {\n            rebootDesktop();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [shutdown]);\n\n    useEffect(() => {\n        const newShortcuts: DesktopShortcutProps[] = [];\n        Object.keys(APPLICATIONS).forEach((key) => {\n            const app = APPLICATIONS[key];\n            if (key !== 'credits' && key !== 'settings' && key !== 'folder' && key !== 'msn' && key !== 'gamesFolder' && key !== 'gamesText' && key !== 'wordle' && key !== 'sudoku' && key !== 'hangman' && key !== 'game2048' && key !== 'ticTacToe') {\n                newShortcuts.push({\n                    shortcutName: app.name,\n                    icon: app.shortcutIcon,\n                    onOpen: () => {\n                        addWindow(\n                            app.key,\n                            <app.component\n                                onInteract={() => onWindowInteract(app.key)}\n                                onMinimize={() => minimizeWindow(app.key)}\n                                onClose={() => removeWindow(app.key)}\n                                key={app.key}\n                            />\n                        );\n                    },\n                });\n            }\n        });\n\n        initializeDocumentsFolder();\n        initializeRecycleBin();\n\n        newShortcuts.forEach((shortcut) => {\n            if (shortcut.shortcutName === 'Showcase') {\n                shortcut.onOpen();\n            }\n        });\n\n        setShortcuts(prevShortcuts => [...prevShortcuts, ...newShortcuts]);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n\n        const savedShortcuts = sessionStorage.getItem('shortcuts');\n        const savedFolders = sessionStorage.getItem('folders');\n        const savedPositions = sessionStorage.getItem('positions');\n        const savedFolderNames = sessionStorage.getItem('folderNames');\n        const savedNextFolderId = sessionStorage.getItem('nextFolderId');\n        const savedNextFileId = sessionStorage.getItem('nextFileId');\n        const savedWindows = sessionStorage.getItem('windows');\n    \n        if (savedShortcuts) {\n            const parsedShortcuts = JSON.parse(savedShortcuts);\n            parsedShortcuts.forEach((shortcut: DesktopShortcutProps) => {\n                shortcut.onOpen = () => {\n                    const app = APPLICATIONS[shortcut.shortcutName.toLowerCase()];\n                    if (app) {\n                        addWindow(\n                            app.key,\n                            <app.component\n                                onInteract={() => onWindowInteract(app.key)}\n                                onMinimize={() => minimizeWindow(app.key)}\n                                onClose={() => removeWindow(app.key)}\n                                key={app.key}\n                            />\n                        );\n                    }\n                };\n            });\n            setShortcuts(parsedShortcuts);\n        }\n        if (savedFolders) {\n            setFolders(JSON.parse(savedFolders));\n        }\n        if (savedPositions) {\n            setPositions(JSON.parse(savedPositions));\n        }\n        if (savedFolderNames) {\n            setFolderNames(JSON.parse(savedFolderNames));\n        }\n        if (savedNextFolderId) {\n            setNextFolderId(JSON.parse(savedNextFolderId));\n        }\n        if (savedNextFileId) {\n            setNextFileId(JSON.parse(savedNextFileId));\n        }\n        if (savedWindows) {\n            setWindows(JSON.parse(savedWindows));\n        }\n    }, []);\n    \n    useEffect(() => {\n\n        sessionStorage.setItem('shortcuts', JSON.stringify(shortcuts));\n        sessionStorage.setItem('folders', JSON.stringify(folders));\n        sessionStorage.setItem('positions', JSON.stringify(positions));\n        sessionStorage.setItem('folderNames', JSON.stringify(folderNames));\n        sessionStorage.setItem('nextFolderId', JSON.stringify(nextFolderId));\n        sessionStorage.setItem('nextFileId', JSON.stringify(nextFileId));\n        sessionStorage.setItem('windows', JSON.stringify(windows));\n    }, [shortcuts, folders, positions, folderNames, nextFolderId, nextFileId, windows]);\n\n    const rebootDesktop = useCallback(() => {\n        setWindows({});\n    }, []);\n\n    const removeWindow = useCallback((key: string) => {\n        // Absolute hack and a half\n        setTimeout(() => {\n            setWindows((prevWindows) => {\n                const newWindows = { ...prevWindows };\n                delete newWindows[key];\n                return newWindows;\n            });\n        }, 100);\n    }, []);\n\n    const minimizeWindow = useCallback((key: string) => {\n        setWindows((prevWindows) => {\n            const newWindows = { ...prevWindows };\n            newWindows[key].minimized = true;\n            return newWindows;\n        });\n    }, []);\n\n    const toggleMinimize = useCallback(\n        (key: string) => {\n            const newWindows = { ...windows };\n            const highestIndex = getHighestZIndex();\n            if (\n                newWindows[key].minimized ||\n                newWindows[key].zIndex === highestIndex\n            ) {\n                newWindows[key].minimized = !newWindows[key].minimized;\n            }\n            newWindows[key].zIndex = getHighestZIndex() + 1;\n            setWindows(newWindows);\n        },\n        [windows, getHighestZIndex]\n    );\n\n    const onWindowInteract = useCallback(\n        (key: string) => {\n            setWindows((prevWindows) => ({\n                ...prevWindows,\n                [key]: {\n                    ...prevWindows[key],\n                    zIndex: 1 + getHighestZIndex(),\n                },\n            }));\n        },\n        [setWindows, getHighestZIndex]\n    );\n\n    const startShutdown = useCallback(() => {\n        setTimeout(() => {\n            setShutdown(true);\n            setNumShutdowns(numShutdowns + 1);\n        }, 600);\n    }, [numShutdowns]);\n\n    const addWindow = useCallback(\n        (key: string, element: JSX.Element, zIndex?: number) => {\n            const highestZIndex = getHighestZIndex();\n            const existingWindows = Object.keys(windows).length;\n            const top = INITIAL_OFFSET.top + (existingWindows * WINDOW_OFFSET);\n            const left = INITIAL_OFFSET.left + (existingWindows * WINDOW_OFFSET);\n\n            // Always set new windows to highest z-index + 1\n            const newZIndex = Math.max(zIndex || 0, highestZIndex + 1);\n\n            setWindows((prevState) => ({\n                ...prevState,\n                [key]: {\n                    zIndex: newZIndex,\n                    minimized: false,\n                    component: React.cloneElement(element, { updateBackground }),\n                    name: APPLICATIONS[key].name,\n                    icon: APPLICATIONS[key].shortcutIcon,\n                    top: top % window.innerHeight,\n                    left: left % window.innerWidth,\n                },\n            }));\n        },\n        [getHighestZIndex, updateBackground, windows]\n    );\n\n    const handleDragStart = (e: React.DragEvent<HTMLDivElement>, key: string) => {\n        e.dataTransfer.setData('text/plain', key);\n    };\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        const key = e.dataTransfer.getData('text/plain');\n        const rect = e.currentTarget.getBoundingClientRect();\n        let top = e.clientY - rect.top;\n        let left = e.clientX - rect.left;\n\n        // Snap to grid\n        top = Math.round(top / GRID_SIZE) * GRID_SIZE;\n        left = Math.round(left / GRID_SIZE) * GRID_SIZE;\n\n        // Check for collisions and adjust position if necessary\n        const newPosition = { top, left };\n        const collision = Object.values(positions).some(\n            (pos) => pos.top === newPosition.top && pos.left === newPosition.left\n        );\n\n        if (collision) {\n            newPosition.top += GRID_SIZE;\n        }\n\n        setPositions((prevPositions) => ({\n            ...prevPositions,\n            [key]: newPosition,\n        }));\n    };\n\n    const handleDropOnFolder = (e: React.DragEvent<HTMLDivElement>, folderId: string) => {\n        const key = e.dataTransfer.getData('text/plain');\n        const item = shortcuts.find(shortcut => shortcut.shortcutName === key);\n        if (item) {\n            setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== key));\n            addItemToFolder(folderId, item);\n        }\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    };\n\n    const createNewFolder = () => {\n        const newFolderId = `folder-${nextFolderId}`;\n        const defaultName = `New Folder ${nextFolderId}`;\n        \n        setFolders(prev => ({\n            ...prev,\n            [newFolderId]: []\n        }));\n\n        setFolderNames(prev => ({\n            ...prev,\n            [newFolderId]: defaultName\n        }));\n\n        // Set initial position for the new folder\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            [newFolderId]: position\n        }));\n        \n        setNextFolderId(prev => prev + 1);\n        setContextMenu({ visible: false, x: 0, y: 0, type: 'desktop' });\n    };\n\n    const openFolder = (folderId: string, folderName: string) => {\n        const highestZIndex = getHighestZIndex();\n\n        const folderWindow = (\n            <Folder\n                key={folderId}\n                folderId={folderId}\n                folderName={folderNames[folderId] || folderName}\n                contents={folders[folderId] || []}\n                onInteract={() => onWindowInteract(folderId)}\n                onMinimize={() => minimizeWindow(folderId)}\n                onClose={() => removeWindow(folderId)}\n                onAddItem={addItemToFolder}\n                onRemoveItem={removeItemFromFolder}\n                onRename={handleFolderRename}\n                addWindow={addWindow}\n                getHighestZIndex={getHighestZIndex}\n                bringToFront={() => bringToFront(folderId)}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            [folderId]: {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: folderWindow,\n                name: folderNames[folderId] || folderName,\n                icon: 'folderIcon'\n            }\n        }));\n    };\n\n    const bringToFront = (key: string) => {\n        setWindows(prevWindows => {\n            const newWindows = { ...prevWindows };\n            const highestZIndex = getHighestZIndex();\n            newWindows[key].zIndex = highestZIndex + 1;\n            return newWindows;\n        });\n    };\n\n    const addItemToFolder = (folderId: string, item: DesktopShortcutProps) => {\n        setFolders(prev => ({\n            ...prev,\n            [folderId]: [...(prev[folderId] || []), item]\n        }));\n    };\n\n    const removeItemFromFolder = (folderId: string, itemName: string) => {\n        setFolders(prev => ({\n            [folderId]: prev[folderId].filter(item => item.shortcutName !== itemName)\n        }));\n    };\n\n    const handleContextMenu = (e: React.MouseEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        setContextMenu({ visible: true, x: e.clientX, y: e.clientY, type: 'desktop' });\n    };\n\n    const handleFolderContextMenu = (e: React.MouseEvent<HTMLDivElement>, folderId: string) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setContextMenu({ \n            visible: true, \n            x: e.clientX, \n            y: e.clientY, \n            type: 'folder',\n            targetId: folderId \n        });\n    };\n\n    const handleFileContextMenu = (e: React.MouseEvent<HTMLDivElement>, fileName: string) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setContextMenu({ \n            visible: true, \n            x: e.clientX, \n            y: e.clientY, \n            type: 'file',\n            targetId: fileName \n        });\n    };\n\n    const handleClick = () => {\n        if (contextMenu.visible) {\n            setContextMenu({ visible: false, x: 0, y: 0, type: 'desktop' });\n        }\n    };\n\n    const handleFolderRename = (folderId: string, newName: string) => {\n        setFolderNames(prev => ({\n            ...prev,\n            [folderId]: newName\n        }));\n    };\n\n    const handleRename = () => {\n        if (contextMenu.targetId) {\n            setRenamingFolder(contextMenu.targetId);\n            setContextMenu(prev => ({ ...prev, visible: false }));\n        }\n    };\n\n    const createNewTextFile = () => {\n        const newFileId = `textfile-${nextFileId}`;\n        const defaultName = `New Text File ${nextFileId}.txt`;\n\n        const newTextFileShortcut: DesktopShortcutProps = {\n            shortcutName: defaultName,\n            icon: 'textFileIcon',\n            onOpen: () => openTextFile(newFileId, defaultName)\n        };\n\n        setShortcuts(prev => [...prev, newTextFileShortcut]);\n\n        // Set initial position for the new text file\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            [newFileId]: position\n        }));\n\n        setNextFileId(prev => prev + 1);\n        setContextMenu({ visible: false, x: 0, y: 0, type: 'desktop' });\n    };\n\n    const openTextFile = (fileId: string, fileName: string) => {\n        const highestZIndex = getHighestZIndex();\n\n        const textEditorWindow = (\n            <TextEditor\n                key={fileId}\n                fileName={fileName}\n                onInteract={() => onWindowInteract(fileId)}\n                onMinimize={() => minimizeWindow(fileId)}\n                onClose={() => removeWindow(fileId)}\n                onRename={(newName) => handleTextFileRename(fileId, newName)}\n                isRenaming={renamingFolder === fileId}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            [fileId]: {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: textEditorWindow,\n                name: fileName,\n                icon: 'textFileIcon'\n            }\n        }));\n    };\n\n    const handleTextFileRename = (fileId: string, newName: string) => {\n        setShortcuts(prevShortcuts => prevShortcuts.map(shortcut => {\n            if (shortcut.shortcutName === fileId) {\n                return { ...shortcut, shortcutName: newName };\n            }\n            return shortcut;\n        }));\n        setWindows(prevWindows => {\n            const newWindows = { ...prevWindows };\n            if (newWindows[fileId]) {\n                newWindows[fileId].name = newName;\n            }\n            return newWindows;\n        });\n        setRenamingFolder(null);\n    };\n\n    const deleteFolder = (folderId: string) => {\n        const folderContents = folders[folderId];\n        if (folderContents) {\n            folderContents.forEach(item => addItemToFolder(\"Recycle Bin\", item));\n        }\n        addItemToFolder(\"Recycle Bin\", {\n            shortcutName: folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`,\n            icon: \"folderIcon\",\n            onOpen: openRecycleBin\n        });\n        setFolders(prev => {\n            const newFolders = { ...prev };\n            delete newFolders[folderId];\n            return newFolders;\n        });\n        setFolderNames(prev => {\n            const newFolderNames = { ...prev };\n            delete newFolderNames[folderId];\n            return newFolderNames;\n        });\n        setWindows(prev => {\n            const newWindows = { ...prev };\n            delete newWindows[folderId];\n            return newWindows;\n        });\n        sessionStorage.removeItem(folderId);\n    };\n\n    const deleteFile = (fileName: string) => {\n        const file = shortcuts.find(shortcut => shortcut.shortcutName === fileName);\n        if (file) {\n            addItemToFolder(\"Recycle Bin\", file);\n        }\n        setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== fileName));\n        setWindows(prev => {\n            const newWindows = { ...prev };\n            delete newWindows[fileName];\n            return newWindows;\n        });\n        sessionStorage.removeItem(fileName); // Remove from session storage\n    };\n\n    const initializeDocumentsFolder = () => {\n        const documentsShortcut: DesktopShortcutProps = {\n            shortcutName: \"Documents\",\n            icon: \"documentsIcon\",\n            onOpen: openDocuments\n        };\n\n        setShortcuts(prevShortcuts => {\n            const existingDocumentsShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Documents\");\n            if (!existingDocumentsShortcut) {\n                return [...prevShortcuts, documentsShortcut];\n            }\n            return prevShortcuts;\n        });\n\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            \"Documents\": position\n        }));\n    };\n\n    const openDocuments = () => {\n        const highestZIndex = getHighestZIndex();\n\n        const docWindow = (\n            <Documents\n                onInteract={() => onWindowInteract(\"Documents\")}\n                onMinimize={() => minimizeWindow(\"Documents\")}\n                onClose={() => removeWindow(\"Documents\")}\n                addWindow={addWindow}\n                getHighestZIndex={getHighestZIndex}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            \"Documents\": {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: docWindow,\n                name: \"Documents\",\n                icon: 'documentsIcon'\n            }\n        }));\n    };\n\n    const openAppByName = (appName: string) => {\n        const appKey = Object.keys(APPLICATIONS).find(\n            (key) => APPLICATIONS[key].name.toLowerCase() === appName.toLowerCase()\n        );\n        if (appKey) {\n            const app = APPLICATIONS[appKey];\n            addWindow(\n                app.key,\n                <app.component\n                    onInteract={() => onWindowInteract(app.key)}\n                    onMinimize={() => minimizeWindow(app.key)}\n                    onClose={() => removeWindow(app.key)}\n                    key={app.key}\n                />\n            );\n        } else {\n            alert(`Application \"${appName}\" not found.`);\n        }\n    };\n\n    const initializeRecycleBin = () => {\n        const recycleBinShortcut: DesktopShortcutProps = {\n            shortcutName: \"Recycle Bin\",\n            icon: \"recycleBinIcon\",\n            onOpen: openRecycleBin\n        };\n\n        setShortcuts(prevShortcuts => {\n            const existingRecycleBinShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Recycle Bin\");\n            if (!existingRecycleBinShortcut) {\n                return [...prevShortcuts, recycleBinShortcut];\n            }\n            return prevShortcuts;\n        });\n\n        setFolders(prev => ({\n            ...prev,\n            \"Recycle Bin\": []\n        }));\n\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            \"Recycle Bin\": position\n        }));\n    };\n\n    const openRecycleBin = () => {\n        const highestZIndex = getHighestZIndex();\n\n        const recycleBinWindow = (\n            <RecycleBin\n                contents={folders[\"Recycle Bin\"] || []}\n                onInteract={() => onWindowInteract(\"Recycle Bin\")}\n                onMinimize={() => minimizeWindow(\"Recycle Bin\")}\n                onClose={() => removeWindow(\"Recycle Bin\")}\n                onAddItem={(item) => addItemToFolder(\"Recycle Bin\", item)}\n                onRemoveItem={(itemName) => removeItemFromFolder(\"Recycle Bin\", itemName)}\n                onRename={(itemName, newName) => handleTextFileRename(itemName, newName)}\n                addWindow={addWindow}\n                getHighestZIndex={getHighestZIndex}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            \"Recycle Bin\": {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: recycleBinWindow,\n                name: \"Recycle Bin\",\n                icon: folders[\"Recycle Bin\"] && folders[\"Recycle Bin\"].length > 0 ? 'recycleBinFullIcon' : 'recycleBinIcon'\n            }\n        }));\n    };\n\n    const emptyRecycleBin = () => {\n        setFolders(prev => ({\n            ...prev,\n            \"Recycle Bin\": []\n        }));\n    };\n\n    const arrangeIcons = () => {\n        const newPositions: { [key: string]: { top: number; left: number } } = {};\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        let index = 0;\n\n        shortcuts.forEach((shortcut) => {\n            if (shortcut.shortcutName !== \"Documents\" && shortcut.shortcutName !== \"Recycle Bin\") {\n                const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n                const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n                newPositions[shortcut.shortcutName] = {\n                    top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n                    left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n                };\n                index++;\n            }\n        });\n\n        Object.keys(folders).forEach((folderId) => {\n            const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n            const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n            newPositions[folderId] = {\n                top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n                left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n            };\n            index++;\n        });\n\n        newPositions[\"Documents\"] = {\n            top: window.innerHeight - VERTICAL_SPACING - 50,\n            left: INITIAL_OFFSET.left\n        };\n\n        newPositions[\"Recycle Bin\"] = {\n            top: window.innerHeight - VERTICAL_SPACING - 50,\n            left: INITIAL_OFFSET.left + HORIZONTAL_SPACING\n        };\n\n        setPositions(newPositions);\n    };\n\n    useEffect(() => {\n        arrangeIcons();\n    }, [shortcuts, folders]);\n\n    return !shutdown ? (\n        <div style={styles.desktop} onDrop={handleDrop} onDragOver={handleDragOver} onContextMenu={handleContextMenu} onClick={handleClick}>\n            {/* For each window in windows, loop over and render  */}\n            {Object.keys(windows).map((key) => {\n                const element = windows[key].component;\n                if (!element) return <div key={`win-${key}`}></div>;\n                return (\n                    <div\n                        key={`win-${key}`}\n                        style={Object.assign(\n                            {},\n                            { zIndex: windows[key].zIndex },\n                            windows[key].minimized && styles.minimized\n                        )}\n                    >\n                        {React.cloneElement(element, {\n                            key,\n                            onInteract: () => onWindowInteract(key),\n                            onClose: () => removeWindow(key),\n                        })}\n                    </div>\n                );\n            })}\n            <div style={styles.shortcuts}>\n                {shortcuts.map((shortcut, i) => {\n                    const position = positions[shortcut.shortcutName] || {\n                        top: INITIAL_OFFSET.top + (i % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * VERTICAL_SPACING,\n                        left: INITIAL_OFFSET.left + Math.floor(i / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n                    };\n                    \n                    return (\n                        <div\n                            style={Object.assign({}, styles.shortcutContainer, position)}\n                            key={shortcut.shortcutName}\n                            draggable\n                            onDragStart={(e) => handleDragStart(e, shortcut.shortcutName)}\n                            onContextMenu={(e) => handleFileContextMenu(e, shortcut.shortcutName)}\n                        >\n                            <DesktopShortcut\n                                icon={shortcut.icon}\n                                shortcutName={shortcut.shortcutName}\n                                onOpen={shortcut.onOpen}\n                                isRenaming={renamingFolder === shortcut.shortcutName}\n                                onRename={(newName) => handleTextFileRename(shortcut.shortcutName, newName)}\n                            />\n                        </div>\n                    );\n                })}\n                {Object.keys(folders).map((folderId) => {\n                    if (folderId === \"Recycle Bin\") return null;\n                    const folder = folders[folderId];\n                    const folderName = folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`;\n                    const position = positions[folderId] || {\n                        top: INITIAL_OFFSET.top + ((shortcuts.length + parseInt(folderId.split('-')[1]) - 1) % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * VERTICAL_SPACING,\n                        left: INITIAL_OFFSET.left + Math.floor((shortcuts.length + parseInt(folderId.split('-')[1]) - 1) / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n                    };\n                    \n                    return (\n                        <div\n                            style={Object.assign({}, styles.shortcutContainer, position)}\n                            key={folderId}\n                            draggable\n                            onDragStart={(e) => handleDragStart(e, folderId)}\n                            onContextMenu={(e) => handleFolderContextMenu(e, folderId)}\n                            onDrop={(e) => handleDropOnFolder(e, folderId)}\n                            onDragOver={handleDragOver}\n                        >\n                            <DesktopShortcut\n                                icon=\"folderIcon\"\n                                shortcutName={folderName}\n                                onOpen={() => openFolder(folderId, folderName)}\n                                isRenaming={renamingFolder === folderId}\n                                onRename={(newName) => {\n                                    handleFolderRename(folderId, newName);\n                                    setRenamingFolder(null);\n                                }}\n                            />\n                        </div>\n                    );\n                })}\n                <div\n                    style={Object.assign({}, styles.shortcutContainer, positions[\"Recycle Bin\"])}\n                    key=\"Recycle Bin\"\n                    draggable\n                    onDragStart={(e) => handleDragStart(e, \"Recycle Bin\")}\n                    onContextMenu={(e) => handleFileContextMenu(e, \"Recycle Bin\")}\n                >\n                    <DesktopShortcut\n                        icon={folders[\"Recycle Bin\"] && folders[\"Recycle Bin\"].length > 0 ? 'recycleBinFullIcon' : 'recycleBinIcon'}\n                        shortcutName=\"Recycle Bin\"\n                        onOpen={openRecycleBin}\n                        isRenaming={renamingFolder === \"Recycle Bin\"}\n                        onRename={(newName) => handleTextFileRename(\"Recycle Bin\", newName)}\n                    />\n                </div>\n            </div>\n            <Toolbar\n                windows={windows}\n                toggleMinimize={toggleMinimize}\n                shutdown={startShutdown}\n                addWindow={addWindow}\n                updateBackground={updateBackground}\n                removeWindow={removeWindow}\n                openAppByName={openAppByName} // Pass the method to Toolbar\n            />\n            {contextMenu.visible && (\n                <div style={{ ...styles.contextMenu, top: contextMenu.y, left: contextMenu.x }}>\n                    {contextMenu.type === 'desktop' ? (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={createNewFolder}>\n                                New Folder\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={createNewTextFile}>\n                                New Text File\n                            </div>\n                        </>\n                    ) : contextMenu.type === 'folder' ? (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={handleRename}>\n                                Rename\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={() => deleteFolder(contextMenu.targetId!)}>\n                                Delete\n                            </div>\n                        </>\n                    ) : contextMenu.type === 'file' ? (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={handleRename}>\n                                Rename\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={() => deleteFile(contextMenu.targetId!)}>\n                                Delete\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={handleRename}>\n                                Rename\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={() => deleteFile(contextMenu.targetId!)}>\n                                Delete\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={emptyRecycleBin}>\n                                Empty Recycle Bin\n                            </div>\n                        </>\n                    )}\n                </div>\n            )}\n        </div>\n    ) : (\n        <ShutdownSequence\n            setShutdown={setShutdown}\n            numShutdowns={numShutdowns}\n        />\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    desktop: {\n        minHeight: '100%',\n        flex: 1,\n        position: 'relative',\n    },\n    shutdown: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: '#1d2e2f',\n    },\n    shortcutContainer: {\n        position: 'absolute',\n        cursor: 'move',\n    },\n    shortcuts: {\n        position: 'absolute',\n        top: 16,\n        left: 6,\n    },\n    minimized: {\n        pointerEvents: 'none',\n        opacity: 0,\n    },\n    contextMenu: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        border: '1px solid #ccc',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n        zIndex: 1000,\n    },\n    contextMenuItem: {\n        padding: '8px 12px',\n        cursor: 'pointer',\n    },\n};\n\nexport default Desktop;"]},"metadata":{},"sourceType":"module"}