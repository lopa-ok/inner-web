{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/inner-web/src/components/applications/TicTacToe.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Window from '../os/Window';\nimport { motion, useAnimation } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TicTacToe = _ref => {\n  _s();\n\n  let {\n    onInteract,\n    onMinimize,\n    onClose\n  } = _ref;\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n  const controls = useAnimation();\n\n  const handleClick = index => {\n    if (board[index] || calculateWinner(board)) return;\n    const newBoard = board.slice();\n    newBoard[index] = isXNext ? 'X' : 'O';\n    setBoard(newBoard);\n    setIsXNext(!isXNext);\n  };\n\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  };\n\n  const winner = calculateWinner(board);\n  const status = winner ? `Winner: ${winner}` : `Next player: ${isXNext ? 'X' : 'O'}`;\n\n  const restart = () => {\n    setBoard(Array(9).fill(null));\n    setIsXNext(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Window, {\n    top: 10,\n    left: 10,\n    width: 420,\n    height: 700,\n    windowTitle: \"Tic Tac Toe\",\n    windowBarIcon: \"folderIcon\",\n    windowBarColor: \"#757579\",\n    closeWindow: onClose,\n    onInteract: onInteract,\n    minimizeWindow: onMinimize,\n    resizable: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tic Tac Toe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        animate: controls,\n        style: styles.board,\n        children: board.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.cell,\n          onClick: () => handleClick(index),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: value === 'X' ? styles.x : styles.o,\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-button\",\n        onMouseDown: restart,\n        style: styles.restartButton,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TicTacToe, \"N9gNyO0jdDGhbeQHr26zCFVJb5o=\", false, function () {\n  return [useAnimation];\n});\n\n_c = TicTacToe;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    backgroundColor: 'white',\n    paddingLeft: '10%',\n    paddingRight: '10%'\n  },\n  header: {\n    flexShrink: 1,\n    paddingTop: 32,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  board: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: 10,\n    marginTop: 16,\n    marginBottom: 16\n  },\n  cell: {\n    width: 100,\n    height: 100,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 36,\n    backgroundColor: '#ddd',\n    cursor: 'pointer'\n  },\n  x: {\n    color: 'red'\n  },\n  o: {\n    color: 'blue'\n  },\n  restartButton: {\n    marginTop: 20\n  }\n};\nexport default TicTacToe;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/inner-web/src/components/applications/TicTacToe.tsx"],"names":["React","useState","Window","motion","useAnimation","TicTacToe","onInteract","onMinimize","onClose","board","setBoard","Array","fill","isXNext","setIsXNext","controls","handleClick","index","calculateWinner","newBoard","slice","squares","lines","i","length","a","b","c","winner","status","restart","styles","container","header","map","value","cell","x","o","restartButton","display","flexDirection","alignItems","justifyContent","height","backgroundColor","paddingLeft","paddingRight","flexShrink","paddingTop","gridTemplateColumns","gridGap","marginTop","marginBottom","width","fontSize","cursor","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Window from '../os/Window';\nimport { motion, useAnimation } from 'framer-motion';\n\nconst TicTacToe: React.FC<{ onInteract: () => void; onMinimize: () => void; onClose: () => void; }> = ({ onInteract, onMinimize, onClose }) => {\n    const [board, setBoard] = useState(Array(9).fill(null));\n    const [isXNext, setIsXNext] = useState(true);\n    const controls = useAnimation();\n\n    const handleClick = (index: number) => {\n        if (board[index] || calculateWinner(board)) return;\n        const newBoard = board.slice();\n        newBoard[index] = isXNext ? 'X' : 'O';\n        setBoard(newBoard);\n        setIsXNext(!isXNext);\n    };\n\n    const calculateWinner = (squares: string[]) => {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    };\n\n    const winner = calculateWinner(board);\n    const status = winner ? `Winner: ${winner}` : `Next player: ${isXNext ? 'X' : 'O'}`;\n\n    const restart = () => {\n        setBoard(Array(9).fill(null));\n        setIsXNext(true);\n    };\n\n    return (\n        <Window\n            top={10}\n            left={10}\n            width={420}\n            height={700}\n            windowTitle=\"Tic Tac Toe\"\n            windowBarIcon=\"folderIcon\"\n            windowBarColor=\"#757579\"\n            closeWindow={onClose}\n            onInteract={onInteract}\n            minimizeWindow={onMinimize}\n            resizable={true}\n        >\n            <div style={styles.container}>\n                <div style={styles.header}>\n                    <h2>Tic Tac Toe</h2>\n                    <p>{status}</p>\n                </div>\n                <motion.div\n                    animate={controls}\n                    style={styles.board}\n                >\n                    {board.map((value, index) => (\n                        <div key={index} style={styles.cell} onClick={() => handleClick(index)}>\n                            <span style={value === 'X' ? styles.x : styles.o}>{value}</span>\n                        </div>\n                    ))}\n                </motion.div>\n                <div className=\"site-button\" onMouseDown={restart} style={styles.restartButton}>\n                    Restart Game\n                </div>\n            </div>\n        </Window>\n    );\n};\n\nconst styles: { [key: string]: React.CSSProperties } = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n        backgroundColor: 'white',\n        paddingLeft: '10%',\n        paddingRight: '10%',\n    },\n    header: {\n        flexShrink: 1,\n        paddingTop: 32,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    board: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridGap: 10,\n        marginTop: 16,\n        marginBottom: 16,\n    },\n    cell: {\n        width: 100,\n        height: 100,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 36,\n        backgroundColor: '#ddd',\n        cursor: 'pointer',\n    },\n    x: {\n        color: 'red',\n    },\n    o: {\n        color: 'blue',\n    },\n    restartButton: {\n        marginTop: 20,\n    },\n};\n\nexport default TicTacToe;\n"]},"metadata":{},"sourceType":"module"}