{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Documents/GitHub/inner-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useCallback, useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n\nfunction useElementSize() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      ref = _useState2[0],\n      setRef = _useState2[1];\n\n  var _useState3 = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      size = _useState4[0],\n      setSize = _useState4[1];\n\n  var handleSize = useCallback(function () {\n    setSize({\n      width: (ref === null || ref === void 0 ? void 0 : ref.offsetWidth) || 0,\n      height: (ref === null || ref === void 0 ? void 0 : ref.offsetHeight) || 0\n    });\n  }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n  useEventListener('resize', handleSize);\n  useIsomorphicLayoutEffect(function () {\n    handleSize();\n  }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n  return [setRef, size];\n}\n\nexport default useElementSize;","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,SAASC,yBAAT,QAA0C,8BAA1C;;AAOA,SAASC,cAAT,GAAuB;AAOrB,kBAAsBH,QAAQ,CAAW,IAAX,CAA9B;AAAA;AAAA,MAAOI,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAAwBL,QAAQ,CAAO;AACrCM,SAAK,EAAE,CAD8B;AAErCC,UAAM,EAAE;AAF6B,GAAP,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAMA,MAAMC,UAAU,GAAGX,WAAW,CAAC,YAAK;AAClCU,WAAO,CAAC;AACNH,WAAK,EAAE,IAAG,SAAH,OAAG,WAAH,eAAG,CAAEK,WAAL,KAAoB,CADrB;AAENJ,YAAM,EAAE,IAAG,SAAH,OAAG,WAAH,eAAG,CAAEK,YAAL,KAAqB;AAFvB,KAAD,CAAP;AAMD,GAP6B,EAO3B,CAACR,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEQ,YAAN,EAAoBR,GAApB,aAAoBA,GAApB,uBAAoBA,GAAG,CAAEO,WAAzB,CAP2B,CAA9B;AASAV,kBAAgB,CAAC,QAAD,EAAWS,UAAX,CAAhB;AAEAR,2BAAyB,CAAC,YAAK;AAC7BQ,cAAU;AAEX,GAHwB,EAGtB,CAACN,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEQ,YAAN,EAAoBR,GAApB,aAAoBA,GAApB,uBAAoBA,GAAG,CAAEO,WAAzB,CAHsB,CAAzB;AAKA,SAAO,CAACN,MAAD,EAASG,IAAT,CAAP;AACD;;AAED,eAAeL,cAAf","names":["useCallback","useState","useEventListener","useIsomorphicLayoutEffect","useElementSize","ref","setRef","width","height","size","setSize","handleSize","offsetWidth","offsetHeight"],"sources":["/Users/mac/Documents/GitHub/inner-web/node_modules/usehooks-ts/src/useElementSize/useElementSize.ts"],"sourcesContent":["import { useCallback, useState } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-event-listener\nimport { useEventListener } from '../useEventListener'\n// See: https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\ninterface Size {\n  width: number\n  height: number\n}\n\nfunction useElementSize<T extends HTMLElement = HTMLDivElement>(): [\n  (node: T | null) => void,\n  Size,\n] {\n  // Mutable values like 'ref.current' aren't valid dependencies\n  // because mutating them doesn't re-render the component.\n  // Instead, we use a state as a ref to be reactive.\n  const [ref, setRef] = useState<T | null>(null)\n  const [size, setSize] = useState<Size>({\n    width: 0,\n    height: 0,\n  })\n\n  // Prevent too many rendering using useCallback\n  const handleSize = useCallback(() => {\n    setSize({\n      width: ref?.offsetWidth || 0,\n      height: ref?.offsetHeight || 0,\n    })\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref?.offsetHeight, ref?.offsetWidth])\n\n  useEventListener('resize', handleSize)\n\n  useIsomorphicLayoutEffect(() => {\n    handleSize()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref?.offsetHeight, ref?.offsetWidth])\n\n  return [setRef, size]\n}\n\nexport default useElementSize\n"]},"metadata":{},"sourceType":"module"}