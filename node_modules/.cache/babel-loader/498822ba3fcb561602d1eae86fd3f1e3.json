{"ast":null,"code":"import _slicedToArray from\"/Users/mac/Documents/GitHub/inner-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var VideoAsset=function VideoAsset(_ref){var src=_ref.src;var id=\"video-\".concat(src);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),setHasLoaded=_useState2[1];useEffect(function(){var vid=document.getElementById(id);if(vid){vid.oncanplay=function(){setHasLoaded(true);};}},[id]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"video\",{id:\"video-\".concat(src),style:Object.assign({},styles.video),src:src,autoPlay:true,muted:true,loop:true,disablePictureInPicture:true})});};var styles={container:{width:'100%'},loading:{width:'100%'},video:{width:'100%'},loadingBox:{backgroundColor:'red'}};export default VideoAsset;","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/inner-web/src/components/general/VideoAsset.tsx"],"names":["React","useEffect","useState","VideoAsset","src","id","setHasLoaded","vid","document","getElementById","oncanplay","Object","assign","styles","video","container","width","loading","loadingBox","backgroundColor"],"mappings":"2HAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,C,2CAMA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAAa,IAAVC,CAAAA,GAAU,MAAVA,GAAU,CACvD,GAAMC,CAAAA,EAAE,iBAAYD,GAAZ,CAAR,CACA,cAAyBF,QAAQ,CAAC,KAAD,CAAjC,wCAASI,YAAT,eAEAL,SAAS,CAAC,UAAM,CACZ,GAAMM,CAAAA,GAAG,CAAGC,QAAQ,CAACC,cAAT,CAAwBJ,EAAxB,CAAZ,CACA,GAAIE,GAAJ,CAAS,CACLA,GAAG,CAACG,SAAJ,CAAgB,UAAY,CACxBJ,YAAY,CAAC,IAAD,CAAZ,CACH,CAFD,CAGH,CACJ,CAPQ,CAON,CAACD,EAAD,CAPM,CAAT,CASA,mBACI,kCACI,cACI,EAAE,iBAAWD,GAAX,CADN,CAEI,KAAK,CAAEO,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBC,MAAM,CAACC,KAAzB,CAFX,CAGI,GAAG,CAAEV,GAHT,CAII,QAAQ,KAJZ,CAKI,KAAK,KALT,CAMI,IAAI,KANR,CAOI,uBAAuB,KAP3B,EADJ,EADJ,CAaH,CA1BD,CA4BA,GAAMS,CAAAA,MAAqB,CAAG,CAC1BE,SAAS,CAAE,CACPC,KAAK,CAAE,MADA,CADe,CAI1BC,OAAO,CAAE,CACLD,KAAK,CAAE,MADF,CAJiB,CAO1BF,KAAK,CAAE,CACHE,KAAK,CAAE,MADJ,CAPmB,CAU1BE,UAAU,CAAE,CACRC,eAAe,CAAE,KADT,CAVc,CAA9B,CAeA,cAAehB,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport interface VideoAssetProps {\n    src: string;\n}\n\nconst VideoAsset: React.FC<VideoAssetProps> = ({ src }) => {\n    const id = `video-${src}`;\n    const [, setHasLoaded] = useState(false);\n\n    useEffect(() => {\n        const vid = document.getElementById(id);\n        if (vid) {\n            vid.oncanplay = function () {\n                setHasLoaded(true);\n            };\n        }\n    }, [id]);\n\n    return (\n        <div>\n            <video\n                id={`video-${src}`}\n                style={Object.assign({}, styles.video)}\n                src={src}\n                autoPlay\n                muted\n                loop\n                disablePictureInPicture\n            />\n        </div>\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    container: {\n        width: '100%',\n    },\n    loading: {\n        width: '100%',\n    },\n    video: {\n        width: '100%',\n    },\n    loadingBox: {\n        backgroundColor: 'red',\n    },\n};\n\nexport default VideoAsset;\n"]},"metadata":{},"sourceType":"module"}