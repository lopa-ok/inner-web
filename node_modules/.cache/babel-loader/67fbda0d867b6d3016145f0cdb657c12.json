{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/inner-web/src/components/os/Desktop.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport Doom from '../applications/Doom';\nimport OregonTrail from '../applications/OregonTrail';\nimport ShutdownSequence from './ShutdownSequence';\nimport wordle from '../applications/wordle';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut from './DesktopShortcut';\nimport Scrabble from '../applications/Scrabble';\nimport Credits from '../applications/Credits';\nimport InternetExplorer from '../applications/InternetExplorer';\nimport Folder from '../applications/folder';\nimport RecycleBin from '../applications/RecycleBin';\nimport Settings from '../applications/Settings';\nimport bg0 from '../../assets/bg/bg0.png';\nimport TextEditor from '../applications/TextEditor';\nimport MSN from '../applications/MSN';\nimport Documents from '../applications/Documents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 100;\nconst VERTICAL_SPACING = 104;\nconst HORIZONTAL_SPACING = 100;\nconst INITIAL_OFFSET = {\n  top: 16,\n  left: 6\n};\n\nconst Desktop = props => {\n  _s();\n\n  const [windows, setWindows] = useState({});\n  const [shortcuts, setShortcuts] = useState([]);\n  const [positions, setPositions] = useState({});\n  const [shutdown, setShutdown] = useState(false);\n  const [numShutdowns, setNumShutdowns] = useState(1);\n  const [folders, setFolders] = useState({});\n  const [nextFolderId, setNextFolderId] = useState(1);\n  const [nextFileId, setNextFileId] = useState(1);\n  const [folderContents, setFolderContents] = useState({});\n  const [contextMenu, setContextMenu] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    type: 'desktop'\n  });\n  const [background, setBackground] = useState(null);\n  const [theme, setTheme] = useState(null);\n  const [folderNames, setFolderNames] = useState({});\n  const [renamingFolder, setRenamingFolder] = useState(null); // Initialize background from localStorage on component mount\n\n  useEffect(() => {\n    const savedBg = localStorage.getItem('background');\n    const savedTheme = localStorage.getItem('theme');\n\n    if (savedBg && savedTheme) {\n      updateBackground(savedBg, savedTheme);\n    } else {\n      const defaultBg = bg0;\n      const defaultTheme = '#098684';\n      updateBackground(defaultBg, defaultTheme);\n      localStorage.setItem('background', defaultBg);\n      localStorage.setItem('theme', defaultTheme);\n    }\n  }, []);\n  useEffect(() => {\n    const bodyBG = document.getElementsByTagName('body')[0];\n    bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n    bodyBG.style.backgroundColor = '#c5c4c4';\n    bodyBG.style.backgroundSize = 'cover';\n    bodyBG.style.backgroundPosition = 'center';\n    bodyBG.style.backgroundRepeat = 'no-repeat';\n    bodyBG.style.height = '100vh';\n    bodyBG.style.margin = '0';\n  }, []);\n  const updateBackground = useCallback((background, theme) => {\n    console.log('Updating background:', {\n      background,\n      theme\n    });\n    setBackground(background);\n    setTheme(theme);\n    const bodyBG = document.getElementsByTagName('body')[0];\n    bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n    bodyBG.style.backgroundColor = theme;\n    bodyBG.style.backgroundImage = `url(${background})`;\n    bodyBG.style.backgroundSize = 'cover';\n    bodyBG.style.backgroundPosition = 'center';\n    bodyBG.style.backgroundRepeat = 'no-repeat';\n    bodyBG.style.height = '100vh';\n    bodyBG.style.margin = '0';\n  }, []);\n  const getHighestZIndex = useCallback(() => {\n    let highestZIndex = 0;\n    Object.keys(windows).forEach(key => {\n      const window = windows[key];\n\n      if (window) {\n        if (window.zIndex > highestZIndex) highestZIndex = window.zIndex;\n      }\n    });\n    return highestZIndex;\n  }, [windows]);\n\n  const openCreditsApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('credits', /*#__PURE__*/_jsxDEV(Credits, {\n      onInteract: () => onWindowInteract('credits'),\n      onMinimize: () => minimizeWindow('credits'),\n      onClose: () => removeWindow('credits')\n    }, \"credits\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this));\n  };\n\n  const openMSNApp = () => {\n    const highestZIndex = getHighestZIndex();\n    addWindow('msn', /*#__PURE__*/_jsxDEV(MSN, {\n      onInteract: () => onWindowInteract('msn'),\n      onMinimize: () => minimizeWindow('msn'),\n      onClose: () => removeWindow('msn')\n    }, \"msn\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this));\n  };\n\n  const APPLICATIONS = {\n    // Removed the folder entry from apps since i made it seperate\n    showcase: {\n      key: 'showcase',\n      name: 'Showcase',\n      shortcutIcon: 'showcaseIcon',\n      component: ShowcaseExplorer\n    },\n    wordle: {\n      key: 'wordle',\n      name: 'Wordle',\n      shortcutIcon: 'wordleIcon',\n      component: wordle\n    },\n    trail: {\n      key: 'trail',\n      name: 'The Oregon Trail',\n      shortcutIcon: 'trailIcon',\n      component: OregonTrail\n    },\n    doom: {\n      key: 'doom',\n      name: 'Doom',\n      shortcutIcon: 'doomIcon',\n      component: Doom\n    },\n    scrabble: {\n      key: 'scrabble',\n      name: 'Scrabble',\n      shortcutIcon: 'scrabbleIcon',\n      component: Scrabble\n    },\n    // chess: {\n    //     key: 'chess',\n    //     name: 'Chess',\n    //     shortcutIcon: 'chessIcon',\n    //     component: Settings,\n    // },\n    internetExplorer: {\n      key: 'internetExplorer',\n      name: 'Internet Explorer',\n      shortcutIcon: 'InternetExplorerIcon',\n      component: InternetExplorer\n    },\n    credits: {\n      key: 'credits',\n      name: 'Credits',\n      shortcutIcon: 'credits',\n      component: Credits\n    },\n    settings: {\n      key: 'settings',\n      name: 'Settings',\n      shortcutIcon: 'setting',\n      component: Settings\n    } //msn: {\n    //key: 'msn',\n    // name: 'MSN',\n    //shortcutIcon: 'msnIcon',\n    // component: MSN,\n    // },\n\n  };\n  useEffect(() => {\n    if (shutdown === true) {\n      rebootDesktop();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [shutdown]);\n  useEffect(() => {\n    const newShortcuts = [];\n    Object.keys(APPLICATIONS).forEach(key => {\n      const app = APPLICATIONS[key];\n\n      if (key !== 'credits' && key !== 'settings' && key !== 'folder' && key !== 'msn') {\n        newShortcuts.push({\n          shortcutName: app.name,\n          icon: app.shortcutIcon,\n          onOpen: () => {\n            addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n              onInteract: () => onWindowInteract(app.key),\n              onMinimize: () => minimizeWindow(app.key),\n              onClose: () => removeWindow(app.key)\n            }, app.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this));\n          }\n        });\n      }\n    });\n    initializeDocumentsFolder();\n    initializeRecycleBin();\n    newShortcuts.forEach(shortcut => {\n      if (shortcut.shortcutName === 'Showcase') {\n        shortcut.onOpen();\n      }\n    });\n    setShortcuts(prevShortcuts => [...prevShortcuts, ...newShortcuts]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    const savedShortcuts = sessionStorage.getItem('shortcuts');\n    const savedFolders = sessionStorage.getItem('folders');\n    const savedPositions = sessionStorage.getItem('positions');\n    const savedFolderNames = sessionStorage.getItem('folderNames');\n    const savedNextFolderId = sessionStorage.getItem('nextFolderId');\n    const savedNextFileId = sessionStorage.getItem('nextFileId');\n    const savedWindows = sessionStorage.getItem('windows');\n\n    if (savedShortcuts) {\n      const parsedShortcuts = JSON.parse(savedShortcuts);\n      parsedShortcuts.forEach(shortcut => {\n        shortcut.onOpen = () => {\n          const app = APPLICATIONS[shortcut.shortcutName.toLowerCase()];\n\n          if (app) {\n            addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n              onInteract: () => onWindowInteract(app.key),\n              onMinimize: () => minimizeWindow(app.key),\n              onClose: () => removeWindow(app.key)\n            }, app.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this));\n          }\n        };\n      });\n      setShortcuts(parsedShortcuts);\n    }\n\n    if (savedFolders) {\n      setFolders(JSON.parse(savedFolders));\n    }\n\n    if (savedPositions) {\n      setPositions(JSON.parse(savedPositions));\n    }\n\n    if (savedFolderNames) {\n      setFolderNames(JSON.parse(savedFolderNames));\n    }\n\n    if (savedNextFolderId) {\n      setNextFolderId(JSON.parse(savedNextFolderId));\n    }\n\n    if (savedNextFileId) {\n      setNextFileId(JSON.parse(savedNextFileId));\n    }\n\n    if (savedWindows) {\n      setWindows(JSON.parse(savedWindows));\n    }\n  }, []);\n  useEffect(() => {\n    sessionStorage.setItem('shortcuts', JSON.stringify(shortcuts));\n    sessionStorage.setItem('folders', JSON.stringify(folders));\n    sessionStorage.setItem('positions', JSON.stringify(positions));\n    sessionStorage.setItem('folderNames', JSON.stringify(folderNames));\n    sessionStorage.setItem('nextFolderId', JSON.stringify(nextFolderId));\n    sessionStorage.setItem('nextFileId', JSON.stringify(nextFileId));\n    sessionStorage.setItem('windows', JSON.stringify(windows));\n  }, [shortcuts, folders, positions, folderNames, nextFolderId, nextFileId, windows]);\n  const rebootDesktop = useCallback(() => {\n    setWindows({});\n  }, []);\n  const removeWindow = useCallback(key => {\n    // Absolute hack and a half\n    setTimeout(() => {\n      setWindows(prevWindows => {\n        const newWindows = { ...prevWindows\n        };\n        delete newWindows[key];\n        return newWindows;\n      });\n    }, 100);\n  }, []);\n  const minimizeWindow = useCallback(key => {\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n      newWindows[key].minimized = true;\n      return newWindows;\n    });\n  }, []);\n  const toggleMinimize = useCallback(key => {\n    const newWindows = { ...windows\n    };\n    const highestIndex = getHighestZIndex();\n\n    if (newWindows[key].minimized || newWindows[key].zIndex === highestIndex) {\n      newWindows[key].minimized = !newWindows[key].minimized;\n    }\n\n    newWindows[key].zIndex = getHighestZIndex() + 1;\n    setWindows(newWindows);\n  }, [windows, getHighestZIndex]);\n  const onWindowInteract = useCallback(key => {\n    setWindows(prevWindows => ({ ...prevWindows,\n      [key]: { ...prevWindows[key],\n        zIndex: 1 + getHighestZIndex()\n      }\n    }));\n  }, [setWindows, getHighestZIndex]);\n  const startShutdown = useCallback(() => {\n    setTimeout(() => {\n      setShutdown(true);\n      setNumShutdowns(numShutdowns + 1);\n    }, 600);\n  }, [numShutdowns]);\n  const addWindow = useCallback((key, element, zIndex) => {\n    setWindows(prevState => ({ ...prevState,\n      [key]: {\n        zIndex: zIndex || getHighestZIndex() + 1,\n        minimized: false,\n        component: /*#__PURE__*/React.cloneElement(element, {\n          updateBackground\n        }),\n        // Pass updateBackground to Settings\n        name: APPLICATIONS[key].name,\n        icon: APPLICATIONS[key].shortcutIcon\n      }\n    }));\n  }, [getHighestZIndex, updateBackground]);\n\n  const handleDragStart = (e, key) => {\n    e.dataTransfer.setData('text/plain', key);\n  };\n\n  const handleDrop = e => {\n    const key = e.dataTransfer.getData('text/plain');\n    const rect = e.currentTarget.getBoundingClientRect();\n    let top = e.clientY - rect.top;\n    let left = e.clientX - rect.left; // Snap to grid\n\n    top = Math.round(top / GRID_SIZE) * GRID_SIZE;\n    left = Math.round(left / GRID_SIZE) * GRID_SIZE; // Check for collisions and adjust position if necessary\n\n    const newPosition = {\n      top,\n      left\n    };\n    const collision = Object.values(positions).some(pos => pos.top === newPosition.top && pos.left === newPosition.left);\n\n    if (collision) {\n      newPosition.top += GRID_SIZE;\n    }\n\n    setPositions(prevPositions => ({ ...prevPositions,\n      [key]: newPosition\n    }));\n  };\n\n  const handleDropOnFolder = (e, folderId) => {\n    const key = e.dataTransfer.getData('text/plain');\n    const item = shortcuts.find(shortcut => shortcut.shortcutName === key);\n\n    if (item) {\n      setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== key));\n      addItemToFolder(folderId, item);\n    }\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n\n  const createNewFolder = () => {\n    const newFolderId = `folder-${nextFolderId}`;\n    const defaultName = `New Folder ${nextFolderId}`;\n    setFolders(prev => ({ ...prev,\n      [newFolderId]: []\n    }));\n    setFolderNames(prev => ({ ...prev,\n      [newFolderId]: defaultName\n    })); // Set initial position for the new folder\n\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      [newFolderId]: position\n    }));\n    setNextFolderId(prev => prev + 1);\n    setContextMenu({\n      visible: false,\n      x: 0,\n      y: 0,\n      type: 'desktop'\n    });\n  };\n\n  const openFolder = (folderId, folderName) => {\n    const highestZIndex = getHighestZIndex();\n\n    const folderWindow = /*#__PURE__*/_jsxDEV(Folder, {\n      folderId: folderId,\n      folderName: folderNames[folderId] || folderName,\n      contents: folders[folderId] || [],\n      onInteract: () => onWindowInteract(folderId),\n      onMinimize: () => minimizeWindow(folderId),\n      onClose: () => removeWindow(folderId),\n      onAddItem: addItemToFolder,\n      onRemoveItem: removeItemFromFolder,\n      onRename: handleFolderRename,\n      addWindow: addWindow,\n      getHighestZIndex: getHighestZIndex,\n      bringToFront: () => bringToFront(folderId)\n    }, folderId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      [folderId]: {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: folderWindow,\n        name: folderNames[folderId] || folderName,\n        icon: 'folderIcon'\n      }\n    }));\n  };\n\n  const bringToFront = key => {\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n      const highestZIndex = getHighestZIndex();\n      newWindows[key].zIndex = highestZIndex + 1;\n      return newWindows;\n    });\n  };\n\n  const addItemToFolder = (folderId, item) => {\n    setFolders(prev => ({ ...prev,\n      [folderId]: [...(prev[folderId] || []), item]\n    }));\n  };\n\n  const removeItemFromFolder = (folderId, itemName) => {\n    setFolders(prev => ({\n      [folderId]: prev[folderId].filter(item => item.shortcutName !== itemName)\n    }));\n  };\n\n  const handleContextMenu = e => {\n    e.preventDefault();\n    setContextMenu({\n      visible: true,\n      x: e.clientX,\n      y: e.clientY,\n      type: 'desktop'\n    });\n  };\n\n  const handleFolderContextMenu = (e, folderId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setContextMenu({\n      visible: true,\n      x: e.clientX,\n      y: e.clientY,\n      type: 'folder',\n      targetId: folderId\n    });\n  };\n\n  const handleFileContextMenu = (e, fileName) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setContextMenu({\n      visible: true,\n      x: e.clientX,\n      y: e.clientY,\n      type: 'file',\n      targetId: fileName\n    });\n  };\n\n  const handleClick = () => {\n    if (contextMenu.visible) {\n      setContextMenu({\n        visible: false,\n        x: 0,\n        y: 0,\n        type: 'desktop'\n      });\n    }\n  };\n\n  const handleFolderRename = (folderId, newName) => {\n    setFolderNames(prev => ({ ...prev,\n      [folderId]: newName\n    }));\n  };\n\n  const handleRename = () => {\n    if (contextMenu.targetId) {\n      setRenamingFolder(contextMenu.targetId);\n      setContextMenu(prev => ({ ...prev,\n        visible: false\n      }));\n    }\n  };\n\n  const createNewTextFile = () => {\n    const newFileId = `textfile-${nextFileId}`;\n    const defaultName = `New Text File ${nextFileId}.txt`;\n    const newTextFileShortcut = {\n      shortcutName: defaultName,\n      icon: 'textFileIcon',\n      onOpen: () => openTextFile(newFileId, defaultName)\n    };\n    setShortcuts(prev => [...prev, newTextFileShortcut]); // Set initial position for the new text file\n\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      [newFileId]: position\n    }));\n    setNextFileId(prev => prev + 1);\n    setContextMenu({\n      visible: false,\n      x: 0,\n      y: 0,\n      type: 'desktop'\n    });\n  };\n\n  const openTextFile = (fileId, fileName) => {\n    const highestZIndex = getHighestZIndex();\n\n    const textEditorWindow = /*#__PURE__*/_jsxDEV(TextEditor, {\n      fileName: fileName,\n      onInteract: () => onWindowInteract(fileId),\n      onMinimize: () => minimizeWindow(fileId),\n      onClose: () => removeWindow(fileId),\n      onRename: newName => handleTextFileRename(fileId, newName),\n      isRenaming: renamingFolder === fileId\n    }, fileId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      [fileId]: {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: textEditorWindow,\n        name: fileName,\n        icon: 'textFileIcon'\n      }\n    }));\n  };\n\n  const handleTextFileRename = (fileId, newName) => {\n    setShortcuts(prevShortcuts => prevShortcuts.map(shortcut => {\n      if (shortcut.shortcutName === fileId) {\n        return { ...shortcut,\n          shortcutName: newName\n        };\n      }\n\n      return shortcut;\n    }));\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n\n      if (newWindows[fileId]) {\n        newWindows[fileId].name = newName;\n      }\n\n      return newWindows;\n    });\n    setRenamingFolder(null);\n  };\n\n  const deleteFolder = folderId => {\n    const folderContents = folders[folderId];\n\n    if (folderContents) {\n      folderContents.forEach(item => addItemToFolder(\"Recycle Bin\", item));\n    }\n\n    addItemToFolder(\"Recycle Bin\", {\n      shortcutName: folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`,\n      icon: \"folderIcon\",\n      onOpen: openRecycleBin\n    });\n    setFolders(prev => {\n      const newFolders = { ...prev\n      };\n      delete newFolders[folderId];\n      return newFolders;\n    });\n    setFolderNames(prev => {\n      const newFolderNames = { ...prev\n      };\n      delete newFolderNames[folderId];\n      return newFolderNames;\n    });\n    setWindows(prev => {\n      const newWindows = { ...prev\n      };\n      delete newWindows[folderId];\n      return newWindows;\n    });\n    sessionStorage.removeItem(folderId);\n  };\n\n  const deleteFile = fileName => {\n    const file = shortcuts.find(shortcut => shortcut.shortcutName === fileName);\n\n    if (file) {\n      addItemToFolder(\"Recycle Bin\", file);\n    }\n\n    setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== fileName));\n    setWindows(prev => {\n      const newWindows = { ...prev\n      };\n      delete newWindows[fileName];\n      return newWindows;\n    });\n    sessionStorage.removeItem(fileName); // Remove from session storage\n  };\n\n  const initializeDocumentsFolder = () => {\n    const documentsShortcut = {\n      shortcutName: \"Documents\",\n      icon: \"documentsIcon\",\n      onOpen: openDocuments\n    };\n    setShortcuts(prevShortcuts => {\n      const existingDocumentsShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Documents\");\n\n      if (!existingDocumentsShortcut) {\n        return [...prevShortcuts, documentsShortcut];\n      }\n\n      return prevShortcuts;\n    });\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      \"Documents\": position\n    }));\n  };\n\n  const openDocuments = () => {\n    const highestZIndex = getHighestZIndex();\n\n    const docWindow = /*#__PURE__*/_jsxDEV(Documents, {\n      onInteract: () => onWindowInteract(\"Documents\"),\n      onMinimize: () => minimizeWindow(\"Documents\"),\n      onClose: () => removeWindow(\"Documents\"),\n      addWindow: addWindow,\n      getHighestZIndex: getHighestZIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      \"Documents\": {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: docWindow,\n        name: \"Documents\",\n        icon: 'documentsIcon'\n      }\n    }));\n  };\n\n  const openAppByName = appName => {\n    const appKey = appName.toLowerCase();\n    const app = APPLICATIONS[appKey];\n\n    if (app) {\n      addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n        onInteract: () => onWindowInteract(app.key),\n        onMinimize: () => minimizeWindow(app.key),\n        onClose: () => removeWindow(app.key)\n      }, app.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 17\n      }, this));\n    } else {\n      alert(`Application \"${appName}\" not found.`);\n    }\n  };\n\n  const initializeRecycleBin = () => {\n    const recycleBinShortcut = {\n      shortcutName: \"Recycle Bin\",\n      icon: \"recycleBinIcon\",\n      onOpen: openRecycleBin\n    };\n    setShortcuts(prevShortcuts => {\n      const existingRecycleBinShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Recycle Bin\");\n\n      if (!existingRecycleBinShortcut) {\n        return [...prevShortcuts, recycleBinShortcut];\n      }\n\n      return prevShortcuts;\n    });\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n    const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n    const position = {\n      top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n      left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n    };\n    setPositions(prev => ({ ...prev,\n      \"Recycle Bin\": position\n    }));\n  };\n\n  const openRecycleBin = () => {\n    const highestZIndex = getHighestZIndex();\n\n    const recycleBinWindow = /*#__PURE__*/_jsxDEV(RecycleBin, {\n      contents: folders[\"Recycle Bin\"] || [],\n      onInteract: () => onWindowInteract(\"Recycle Bin\"),\n      onMinimize: () => minimizeWindow(\"Recycle Bin\"),\n      onClose: () => removeWindow(\"Recycle Bin\"),\n      onAddItem: item => addItemToFolder(\"Recycle Bin\", item),\n      onRemoveItem: itemName => removeItemFromFolder(\"Recycle Bin\", itemName),\n      onRename: (itemName, newName) => handleTextFileRename(itemName, newName),\n      addWindow: addWindow,\n      getHighestZIndex: getHighestZIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 13\n    }, this);\n\n    setWindows(prev => ({ ...prev,\n      \"Recycle Bin\": {\n        zIndex: highestZIndex + 1,\n        minimized: false,\n        component: recycleBinWindow,\n        name: \"Recycle Bin\",\n        icon: 'recycleBinIcon'\n      }\n    }));\n  };\n\n  const arrangeIcons = () => {\n    const newPositions = {};\n    const totalItems = shortcuts.length + Object.keys(folders).length;\n    let index = 0; // Arrange all shortcuts except \"Documents\" and \"Recycle Bin\"\n\n    shortcuts.forEach(shortcut => {\n      if (shortcut.shortcutName !== \"Documents\" && shortcut.shortcutName !== \"Recycle Bin\") {\n        const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n        newPositions[shortcut.shortcutName] = {\n          top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n          left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n        };\n        index++;\n      }\n    }); // Arrange all folders\n\n    Object.keys(folders).forEach(folderId => {\n      const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n      const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n      newPositions[folderId] = {\n        top: INITIAL_OFFSET.top + row * VERTICAL_SPACING,\n        left: INITIAL_OFFSET.left + column * HORIZONTAL_SPACING\n      };\n      index++;\n    }); // Arrange \"Documents\" at the bottom left\n\n    newPositions[\"Documents\"] = {\n      top: window.innerHeight - VERTICAL_SPACING - 50,\n      left: INITIAL_OFFSET.left\n    }; // Arrange \"Recycle Bin\" next to \"Documents\"\n\n    newPositions[\"Recycle Bin\"] = {\n      top: window.innerHeight - VERTICAL_SPACING - 50,\n      left: INITIAL_OFFSET.left + HORIZONTAL_SPACING\n    };\n    setPositions(newPositions);\n  };\n\n  useEffect(() => {\n    arrangeIcons();\n  }, [shortcuts, folders]);\n  return !shutdown ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.desktop,\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    onContextMenu: handleContextMenu,\n    onClick: handleClick,\n    children: [Object.keys(windows).map(key => {\n      const element = windows[key].component;\n      if (!element) return /*#__PURE__*/_jsxDEV(\"div\", {}, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 38\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: Object.assign({}, {\n          zIndex: windows[key].zIndex\n        }, windows[key].minimized && styles.minimized),\n        children: /*#__PURE__*/React.cloneElement(element, {\n          key,\n          onInteract: () => onWindowInteract(key),\n          onClose: () => removeWindow(key)\n        })\n      }, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.shortcuts,\n      children: [shortcuts.map((shortcut, i) => {\n        const position = positions[shortcut.shortcutName] || {\n          top: INITIAL_OFFSET.top + i % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING) * VERTICAL_SPACING,\n          left: INITIAL_OFFSET.left + Math.floor(i / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: Object.assign({}, styles.shortcutContainer, position),\n          draggable: true,\n          onDragStart: e => handleDragStart(e, shortcut.shortcutName),\n          onContextMenu: e => handleFileContextMenu(e, shortcut.shortcutName),\n          children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n            icon: shortcut.icon,\n            shortcutName: shortcut.shortcutName,\n            onOpen: shortcut.onOpen,\n            isRenaming: renamingFolder === shortcut.shortcutName,\n            onRename: newName => handleTextFileRename(shortcut.shortcutName, newName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 29\n          }, this)\n        }, shortcut.shortcutName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 25\n        }, this);\n      }), Object.keys(folders).map(folderId => {\n        const folder = folders[folderId];\n        const folderName = folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`;\n        const position = positions[folderId] || {\n          top: INITIAL_OFFSET.top + (shortcuts.length + parseInt(folderId.split('-')[1]) - 1) % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING) * VERTICAL_SPACING,\n          left: INITIAL_OFFSET.left + Math.floor((shortcuts.length + parseInt(folderId.split('-')[1]) - 1) / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: Object.assign({}, styles.shortcutContainer, position),\n          draggable: true,\n          onDragStart: e => handleDragStart(e, folderId),\n          onContextMenu: e => handleFolderContextMenu(e, folderId),\n          onDrop: e => handleDropOnFolder(e, folderId),\n          onDragOver: handleDragOver,\n          children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n            icon: \"folderIcon\",\n            shortcutName: folderName,\n            onOpen: () => openFolder(folderId, folderName),\n            isRenaming: renamingFolder === folderId,\n            onRename: newName => {\n              handleFolderRename(folderId, newName);\n              setRenamingFolder(null);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 29\n          }, this)\n        }, folderId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      windows: windows,\n      toggleMinimize: toggleMinimize,\n      shutdown: startShutdown,\n      addWindow: addWindow,\n      updateBackground: updateBackground,\n      removeWindow: removeWindow,\n      openAppByName: openAppByName // Pass the method to Toolbar\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 13\n    }, this), contextMenu.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: { ...styles.contextMenu,\n        top: contextMenu.y,\n        left: contextMenu.x\n      },\n      children: contextMenu.type === 'desktop' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: createNewFolder,\n          children: \"New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: createNewTextFile,\n          children: \"New Text File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : contextMenu.type === 'folder' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: handleRename,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: () => deleteFolder(contextMenu.targetId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: handleRename,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenuItem,\n          onClick: () => deleteFile(contextMenu.targetId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 959,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 870,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(ShutdownSequence, {\n    setShutdown: setShutdown,\n    numShutdowns: numShutdowns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 992,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Desktop, \"Dkbe7zAjCb4HBADO8h0u+dIdz8s=\");\n\n_c = Desktop;\nconst styles = {\n  desktop: {\n    minHeight: '100%',\n    flex: 1,\n    position: 'relative'\n  },\n  shutdown: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: '#1d2e2f'\n  },\n  shortcutContainer: {\n    position: 'absolute',\n    cursor: 'move'\n  },\n  shortcuts: {\n    position: 'absolute',\n    top: 16,\n    left: 6\n  },\n  minimized: {\n    pointerEvents: 'none',\n    opacity: 0\n  },\n  contextMenu: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n    zIndex: 1000\n  },\n  contextMenuItem: {\n    padding: '8px 12px',\n    cursor: 'pointer'\n  }\n};\nexport default Desktop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Desktop\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/inner-web/src/components/os/Desktop.tsx"],"names":["React","useCallback","useEffect","useState","ShowcaseExplorer","Doom","OregonTrail","ShutdownSequence","wordle","Toolbar","DesktopShortcut","Scrabble","Credits","InternetExplorer","Folder","RecycleBin","Settings","bg0","TextEditor","MSN","Documents","GRID_SIZE","VERTICAL_SPACING","HORIZONTAL_SPACING","INITIAL_OFFSET","top","left","Desktop","props","windows","setWindows","shortcuts","setShortcuts","positions","setPositions","shutdown","setShutdown","numShutdowns","setNumShutdowns","folders","setFolders","nextFolderId","setNextFolderId","nextFileId","setNextFileId","folderContents","setFolderContents","contextMenu","setContextMenu","visible","x","y","type","background","setBackground","theme","setTheme","folderNames","setFolderNames","renamingFolder","setRenamingFolder","savedBg","localStorage","getItem","savedTheme","updateBackground","defaultBg","defaultTheme","setItem","bodyBG","document","getElementsByTagName","style","transition","backgroundColor","backgroundSize","backgroundPosition","backgroundRepeat","height","margin","console","log","backgroundImage","getHighestZIndex","highestZIndex","Object","keys","forEach","key","window","zIndex","openCreditsApp","addWindow","onWindowInteract","minimizeWindow","removeWindow","openMSNApp","APPLICATIONS","showcase","name","shortcutIcon","component","trail","doom","scrabble","internetExplorer","credits","settings","rebootDesktop","newShortcuts","app","push","shortcutName","icon","onOpen","initializeDocumentsFolder","initializeRecycleBin","shortcut","prevShortcuts","savedShortcuts","sessionStorage","savedFolders","savedPositions","savedFolderNames","savedNextFolderId","savedNextFileId","savedWindows","parsedShortcuts","JSON","parse","toLowerCase","stringify","setTimeout","prevWindows","newWindows","minimized","toggleMinimize","highestIndex","startShutdown","element","prevState","cloneElement","handleDragStart","e","dataTransfer","setData","handleDrop","getData","rect","currentTarget","getBoundingClientRect","clientY","clientX","Math","round","newPosition","collision","values","some","pos","prevPositions","handleDropOnFolder","folderId","item","find","prev","filter","addItemToFolder","handleDragOver","preventDefault","createNewFolder","newFolderId","defaultName","totalItems","length","column","floor","innerHeight","row","position","openFolder","folderName","folderWindow","removeItemFromFolder","handleFolderRename","bringToFront","itemName","handleContextMenu","handleFolderContextMenu","stopPropagation","targetId","handleFileContextMenu","fileName","handleClick","newName","handleRename","createNewTextFile","newFileId","newTextFileShortcut","openTextFile","fileId","textEditorWindow","handleTextFileRename","map","deleteFolder","split","openRecycleBin","newFolders","newFolderNames","removeItem","deleteFile","file","documentsShortcut","openDocuments","existingDocumentsShortcut","docWindow","openAppByName","appName","appKey","alert","recycleBinShortcut","existingRecycleBinShortcut","recycleBinWindow","arrangeIcons","newPositions","index","styles","desktop","assign","onInteract","onClose","i","shortcutContainer","folder","parseInt","contextMenuItem","minHeight","flex","cursor","pointerEvents","opacity","border","boxShadow","padding"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport Doom from '../applications/Doom';\nimport OregonTrail from '../applications/OregonTrail';\nimport ShutdownSequence from './ShutdownSequence';\nimport ThisComputer from '../applications/ThisComputer';\nimport wordle from '../applications/wordle';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut, { DesktopShortcutProps } from './DesktopShortcut';\nimport Scrabble from '../applications/Scrabble';\nimport Chess from '../applications/Chess'; \nimport Credits from '../applications/Credits';\nimport InternetExplorer from '../applications/InternetExplorer';\nimport Folder from '../applications/folder';\nimport RecycleBin from '../applications/RecycleBin';\nimport { IconName } from '../../assets/icons';\nimport Settings from '../applications/Settings';\nimport bg0 from '../../assets/bg/bg0.png';\nimport TextEditor from '../applications/TextEditor';\nimport MSN from '../applications/MSN';\nimport Run from '../applications/Run';\nimport Documents from '../applications/Documents';\n\nexport interface DesktopProps {}\n\ntype ExtendedWindowAppProps<T> = T & WindowAppProps;\n\nconst GRID_SIZE = 100;\nconst VERTICAL_SPACING = 104;\nconst HORIZONTAL_SPACING = 100;\nconst INITIAL_OFFSET = { top: 16, left: 6 };\n\ninterface ContextMenuState {\n    visible: boolean;\n    x: number;\n    y: number;\n    type: 'desktop' | 'folder' | 'file';\n    targetId?: string;\n}\n\nconst Desktop: React.FC<DesktopProps> = (props) => {\n    const [windows, setWindows] = useState<DesktopWindows>({});\n    const [shortcuts, setShortcuts] = useState<DesktopShortcutProps[]>([]);\n    const [positions, setPositions] = useState<{ [key: string]: { top: number; left: number } }>({});\n    const [shutdown, setShutdown] = useState(false);\n    const [numShutdowns, setNumShutdowns] = useState(1);\n    const [folders, setFolders] = useState<{[key: string]: DesktopShortcutProps[]}>({});\n    const [nextFolderId, setNextFolderId] = useState(1);\n    const [nextFileId, setNextFileId] = useState(1);\n    const [folderContents, setFolderContents] = useState<{ [key: string]: DesktopShortcutProps[] }>({});\n    const [contextMenu, setContextMenu] = useState<ContextMenuState>({ \n        visible: false, \n        x: 0, \n        y: 0, \n        type: 'desktop' \n    });\n    const [background, setBackground] = useState<string | null>(null);\n    const [theme, setTheme] = useState<string | null>(null);\n    const [folderNames, setFolderNames] = useState<{[key: string]: string}>({});\n    const [renamingFolder, setRenamingFolder] = useState<string | null>(null);\n\n    // Initialize background from localStorage on component mount\n    useEffect(() => {\n        const savedBg = localStorage.getItem('background');\n        const savedTheme = localStorage.getItem('theme');\n        if (savedBg && savedTheme) {\n            updateBackground(savedBg, savedTheme);\n        } else {\n            const defaultBg = bg0;\n            const defaultTheme = '#098684';\n            updateBackground(defaultBg, defaultTheme);\n            localStorage.setItem('background', defaultBg);\n            localStorage.setItem('theme', defaultTheme);\n        }\n    }, []);\n\n    useEffect(() => {\n        const bodyBG = document.getElementsByTagName('body')[0];\n        bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n        bodyBG.style.backgroundColor = '#c5c4c4';\n        bodyBG.style.backgroundSize = 'cover';\n        bodyBG.style.backgroundPosition = 'center';\n        bodyBG.style.backgroundRepeat = 'no-repeat';\n        bodyBG.style.height = '100vh';\n        bodyBG.style.margin = '0';\n    }, []);\n\n    const updateBackground = useCallback((background: string, theme: string) => {\n        console.log('Updating background:', { background, theme });\n        setBackground(background);\n        setTheme(theme);\n        const bodyBG = document.getElementsByTagName('body')[0];\n        bodyBG.style.transition = 'background-color 0.3s, background-image 0.3s';\n        bodyBG.style.backgroundColor = theme;\n        bodyBG.style.backgroundImage = `url(${background})`;\n        bodyBG.style.backgroundSize = 'cover';\n        bodyBG.style.backgroundPosition = 'center';\n        bodyBG.style.backgroundRepeat = 'no-repeat';\n        bodyBG.style.height = '100vh';\n        bodyBG.style.margin = '0';\n    }, []);\n\n    const getHighestZIndex = useCallback((): number => {\n        let highestZIndex = 0;\n        Object.keys(windows).forEach((key) => {\n            const window = windows[key];\n            if (window) {\n                if (window.zIndex > highestZIndex)\n                    highestZIndex = window.zIndex;\n            }\n        });\n        return highestZIndex;\n    }, [windows]);\n\n    const openCreditsApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'credits',\n            <Credits\n                onInteract={() => onWindowInteract('credits')}\n                onMinimize={() => minimizeWindow('credits')}\n                onClose={() => removeWindow('credits')}\n                key=\"credits\"\n            />\n        );\n    };\n\n    const openMSNApp = () => {\n        const highestZIndex = getHighestZIndex();\n        addWindow(\n            'msn',\n            <MSN\n                onInteract={() => onWindowInteract('msn')}\n                onMinimize={() => minimizeWindow('msn')}\n                onClose={() => removeWindow('msn')}\n                key=\"msn\"\n            />\n        );\n    };\n\n    const APPLICATIONS: {\n        [key in string]: {\n            key: string;\n            name: string;\n            shortcutIcon: IconName;\n            component: React.FC<ExtendedWindowAppProps<any>>;\n        };\n    } = {\n        // Removed the folder entry from apps since i made it seperate\n        showcase: {\n            key: 'showcase',\n            name: 'Showcase',\n            shortcutIcon: 'showcaseIcon',\n            component: ShowcaseExplorer,\n        },\n        wordle: {\n            key: 'wordle',\n            name: 'Wordle',\n            shortcutIcon: 'wordleIcon',\n            component: wordle,\n        },\n        trail: {\n            key: 'trail',\n            name: 'The Oregon Trail',\n            shortcutIcon: 'trailIcon',\n            component: OregonTrail,\n        },\n        doom: {\n            key: 'doom',\n            name: 'Doom',\n            shortcutIcon: 'doomIcon',\n            component: Doom,\n        },\n        scrabble: {\n            key: 'scrabble',\n            name: 'Scrabble',\n            shortcutIcon: 'scrabbleIcon',\n            component: Scrabble,\n        },\n        // chess: {\n        //     key: 'chess',\n        //     name: 'Chess',\n        //     shortcutIcon: 'chessIcon',\n        //     component: Settings,\n        // },\n        internetExplorer: {\n            key: 'internetExplorer',\n            name: 'Internet Explorer',\n            shortcutIcon: 'InternetExplorerIcon',\n            component: InternetExplorer,\n        },\n        credits: {\n            key: 'credits',\n            name: 'Credits',\n            shortcutIcon: 'credits',\n            component: Credits,\n        },\n        settings: {\n            key: 'settings',\n            name: 'Settings',\n            shortcutIcon: 'setting',\n            component: Settings,\n        },\n        //msn: {\n            //key: 'msn',\n           // name: 'MSN',\n            //shortcutIcon: 'msnIcon',\n           // component: MSN,\n       // },\n    };\n\n    useEffect(() => {\n        if (shutdown === true) {\n            rebootDesktop();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [shutdown]);\n\n    useEffect(() => {\n        const newShortcuts: DesktopShortcutProps[] = [];\n        Object.keys(APPLICATIONS).forEach((key) => {\n            const app = APPLICATIONS[key];\n            if (key !== 'credits' && key !== 'settings' && key !== 'folder' && key !== 'msn') {\n                newShortcuts.push({\n                    shortcutName: app.name,\n                    icon: app.shortcutIcon,\n                    onOpen: () => {\n                        addWindow(\n                            app.key,\n                            <app.component\n                                onInteract={() => onWindowInteract(app.key)}\n                                onMinimize={() => minimizeWindow(app.key)}\n                                onClose={() => removeWindow(app.key)}\n                                key={app.key}\n                            />\n                        );\n                    },\n                });\n            }\n        });\n\n        initializeDocumentsFolder();\n        initializeRecycleBin();\n\n        newShortcuts.forEach((shortcut) => {\n            if (shortcut.shortcutName === 'Showcase') {\n                shortcut.onOpen();\n            }\n        });\n\n        setShortcuts(prevShortcuts => [...prevShortcuts, ...newShortcuts]);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n\n        const savedShortcuts = sessionStorage.getItem('shortcuts');\n        const savedFolders = sessionStorage.getItem('folders');\n        const savedPositions = sessionStorage.getItem('positions');\n        const savedFolderNames = sessionStorage.getItem('folderNames');\n        const savedNextFolderId = sessionStorage.getItem('nextFolderId');\n        const savedNextFileId = sessionStorage.getItem('nextFileId');\n        const savedWindows = sessionStorage.getItem('windows');\n    \n        if (savedShortcuts) {\n            const parsedShortcuts = JSON.parse(savedShortcuts);\n            parsedShortcuts.forEach((shortcut: DesktopShortcutProps) => {\n                shortcut.onOpen = () => {\n                    const app = APPLICATIONS[shortcut.shortcutName.toLowerCase()];\n                    if (app) {\n                        addWindow(\n                            app.key,\n                            <app.component\n                                onInteract={() => onWindowInteract(app.key)}\n                                onMinimize={() => minimizeWindow(app.key)}\n                                onClose={() => removeWindow(app.key)}\n                                key={app.key}\n                            />\n                        );\n                    }\n                };\n            });\n            setShortcuts(parsedShortcuts);\n        }\n        if (savedFolders) {\n            setFolders(JSON.parse(savedFolders));\n        }\n        if (savedPositions) {\n            setPositions(JSON.parse(savedPositions));\n        }\n        if (savedFolderNames) {\n            setFolderNames(JSON.parse(savedFolderNames));\n        }\n        if (savedNextFolderId) {\n            setNextFolderId(JSON.parse(savedNextFolderId));\n        }\n        if (savedNextFileId) {\n            setNextFileId(JSON.parse(savedNextFileId));\n        }\n        if (savedWindows) {\n            setWindows(JSON.parse(savedWindows));\n        }\n    }, []);\n    \n    useEffect(() => {\n\n        sessionStorage.setItem('shortcuts', JSON.stringify(shortcuts));\n        sessionStorage.setItem('folders', JSON.stringify(folders));\n        sessionStorage.setItem('positions', JSON.stringify(positions));\n        sessionStorage.setItem('folderNames', JSON.stringify(folderNames));\n        sessionStorage.setItem('nextFolderId', JSON.stringify(nextFolderId));\n        sessionStorage.setItem('nextFileId', JSON.stringify(nextFileId));\n        sessionStorage.setItem('windows', JSON.stringify(windows));\n    }, [shortcuts, folders, positions, folderNames, nextFolderId, nextFileId, windows]);\n\n    const rebootDesktop = useCallback(() => {\n        setWindows({});\n    }, []);\n\n    const removeWindow = useCallback((key: string) => {\n        // Absolute hack and a half\n        setTimeout(() => {\n            setWindows((prevWindows) => {\n                const newWindows = { ...prevWindows };\n                delete newWindows[key];\n                return newWindows;\n            });\n        }, 100);\n    }, []);\n\n    const minimizeWindow = useCallback((key: string) => {\n        setWindows((prevWindows) => {\n            const newWindows = { ...prevWindows };\n            newWindows[key].minimized = true;\n            return newWindows;\n        });\n    }, []);\n\n    const toggleMinimize = useCallback(\n        (key: string) => {\n            const newWindows = { ...windows };\n            const highestIndex = getHighestZIndex();\n            if (\n                newWindows[key].minimized ||\n                newWindows[key].zIndex === highestIndex\n            ) {\n                newWindows[key].minimized = !newWindows[key].minimized;\n            }\n            newWindows[key].zIndex = getHighestZIndex() + 1;\n            setWindows(newWindows);\n        },\n        [windows, getHighestZIndex]\n    );\n\n    const onWindowInteract = useCallback(\n        (key: string) => {\n            setWindows((prevWindows) => ({\n                ...prevWindows,\n                [key]: {\n                    ...prevWindows[key],\n                    zIndex: 1 + getHighestZIndex(),\n                },\n            }));\n        },\n        [setWindows, getHighestZIndex]\n    );\n\n    const startShutdown = useCallback(() => {\n        setTimeout(() => {\n            setShutdown(true);\n            setNumShutdowns(numShutdowns + 1);\n        }, 600);\n    }, [numShutdowns]);\n\n    const addWindow = useCallback(\n        (key: string, element: JSX.Element, zIndex?: number) => {\n            setWindows((prevState) => ({\n                ...prevState,\n                [key]: {\n                    zIndex: zIndex || getHighestZIndex() + 1,\n                    minimized: false,\n                    component: React.cloneElement(element, { updateBackground }), // Pass updateBackground to Settings\n                    name: APPLICATIONS[key].name,\n                    icon: APPLICATIONS[key].shortcutIcon,\n                },\n            }));\n        },\n        [getHighestZIndex, updateBackground]\n    );\n\n    const handleDragStart = (e: React.DragEvent<HTMLDivElement>, key: string) => {\n        e.dataTransfer.setData('text/plain', key);\n    };\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        const key = e.dataTransfer.getData('text/plain');\n        const rect = e.currentTarget.getBoundingClientRect();\n        let top = e.clientY - rect.top;\n        let left = e.clientX - rect.left;\n\n        // Snap to grid\n        top = Math.round(top / GRID_SIZE) * GRID_SIZE;\n        left = Math.round(left / GRID_SIZE) * GRID_SIZE;\n\n        // Check for collisions and adjust position if necessary\n        const newPosition = { top, left };\n        const collision = Object.values(positions).some(\n            (pos) => pos.top === newPosition.top && pos.left === newPosition.left\n        );\n\n        if (collision) {\n            newPosition.top += GRID_SIZE;\n        }\n\n        setPositions((prevPositions) => ({\n            ...prevPositions,\n            [key]: newPosition,\n        }));\n    };\n\n    const handleDropOnFolder = (e: React.DragEvent<HTMLDivElement>, folderId: string) => {\n        const key = e.dataTransfer.getData('text/plain');\n        const item = shortcuts.find(shortcut => shortcut.shortcutName === key);\n        if (item) {\n            setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== key));\n            addItemToFolder(folderId, item);\n        }\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    };\n\n    const createNewFolder = () => {\n        const newFolderId = `folder-${nextFolderId}`;\n        const defaultName = `New Folder ${nextFolderId}`;\n        \n        setFolders(prev => ({\n            ...prev,\n            [newFolderId]: []\n        }));\n\n        setFolderNames(prev => ({\n            ...prev,\n            [newFolderId]: defaultName\n        }));\n\n        // Set initial position for the new folder\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            [newFolderId]: position\n        }));\n        \n        setNextFolderId(prev => prev + 1);\n        setContextMenu({ visible: false, x: 0, y: 0, type: 'desktop' });\n    };\n\n    const openFolder = (folderId: string, folderName: string) => {\n        const highestZIndex = getHighestZIndex();\n\n        const folderWindow = (\n            <Folder\n                key={folderId}\n                folderId={folderId}\n                folderName={folderNames[folderId] || folderName}\n                contents={folders[folderId] || []}\n                onInteract={() => onWindowInteract(folderId)}\n                onMinimize={() => minimizeWindow(folderId)}\n                onClose={() => removeWindow(folderId)}\n                onAddItem={addItemToFolder}\n                onRemoveItem={removeItemFromFolder}\n                onRename={handleFolderRename}\n                addWindow={addWindow}\n                getHighestZIndex={getHighestZIndex}\n                bringToFront={() => bringToFront(folderId)}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            [folderId]: {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: folderWindow,\n                name: folderNames[folderId] || folderName,\n                icon: 'folderIcon'\n            }\n        }));\n    };\n\n    const bringToFront = (key: string) => {\n        setWindows(prevWindows => {\n            const newWindows = { ...prevWindows };\n            const highestZIndex = getHighestZIndex();\n            newWindows[key].zIndex = highestZIndex + 1;\n            return newWindows;\n        });\n    };\n\n    const addItemToFolder = (folderId: string, item: DesktopShortcutProps) => {\n        setFolders(prev => ({\n            ...prev,\n            [folderId]: [...(prev[folderId] || []), item]\n        }));\n    };\n\n    const removeItemFromFolder = (folderId: string, itemName: string) => {\n        setFolders(prev => ({\n            [folderId]: prev[folderId].filter(item => item.shortcutName !== itemName)\n        }));\n    };\n\n    const handleContextMenu = (e: React.MouseEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        setContextMenu({ visible: true, x: e.clientX, y: e.clientY, type: 'desktop' });\n    };\n\n    const handleFolderContextMenu = (e: React.MouseEvent<HTMLDivElement>, folderId: string) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setContextMenu({ \n            visible: true, \n            x: e.clientX, \n            y: e.clientY, \n            type: 'folder',\n            targetId: folderId \n        });\n    };\n\n    const handleFileContextMenu = (e: React.MouseEvent<HTMLDivElement>, fileName: string) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setContextMenu({ \n            visible: true, \n            x: e.clientX, \n            y: e.clientY, \n            type: 'file',\n            targetId: fileName \n        });\n    };\n\n    const handleClick = () => {\n        if (contextMenu.visible) {\n            setContextMenu({ visible: false, x: 0, y: 0, type: 'desktop' });\n        }\n    };\n\n    const handleFolderRename = (folderId: string, newName: string) => {\n        setFolderNames(prev => ({\n            ...prev,\n            [folderId]: newName\n        }));\n    };\n\n    const handleRename = () => {\n        if (contextMenu.targetId) {\n            setRenamingFolder(contextMenu.targetId);\n            setContextMenu(prev => ({ ...prev, visible: false }));\n        }\n    };\n\n    const createNewTextFile = () => {\n        const newFileId = `textfile-${nextFileId}`;\n        const defaultName = `New Text File ${nextFileId}.txt`;\n\n        const newTextFileShortcut: DesktopShortcutProps = {\n            shortcutName: defaultName,\n            icon: 'textFileIcon',\n            onOpen: () => openTextFile(newFileId, defaultName)\n        };\n\n        setShortcuts(prev => [...prev, newTextFileShortcut]);\n\n        // Set initial position for the new text file\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            [newFileId]: position\n        }));\n\n        setNextFileId(prev => prev + 1);\n        setContextMenu({ visible: false, x: 0, y: 0, type: 'desktop' });\n    };\n\n    const openTextFile = (fileId: string, fileName: string) => {\n        const highestZIndex = getHighestZIndex();\n\n        const textEditorWindow = (\n            <TextEditor\n                key={fileId}\n                fileName={fileName}\n                onInteract={() => onWindowInteract(fileId)}\n                onMinimize={() => minimizeWindow(fileId)}\n                onClose={() => removeWindow(fileId)}\n                onRename={(newName) => handleTextFileRename(fileId, newName)}\n                isRenaming={renamingFolder === fileId}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            [fileId]: {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: textEditorWindow,\n                name: fileName,\n                icon: 'textFileIcon'\n            }\n        }));\n    };\n\n    const handleTextFileRename = (fileId: string, newName: string) => {\n        setShortcuts(prevShortcuts => prevShortcuts.map(shortcut => {\n            if (shortcut.shortcutName === fileId) {\n                return { ...shortcut, shortcutName: newName };\n            }\n            return shortcut;\n        }));\n        setWindows(prevWindows => {\n            const newWindows = { ...prevWindows };\n            if (newWindows[fileId]) {\n                newWindows[fileId].name = newName;\n            }\n            return newWindows;\n        });\n        setRenamingFolder(null);\n    };\n\n    const deleteFolder = (folderId: string) => {\n        const folderContents = folders[folderId];\n        if (folderContents) {\n            folderContents.forEach(item => addItemToFolder(\"Recycle Bin\", item));\n        }\n        addItemToFolder(\"Recycle Bin\", {\n            shortcutName: folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`,\n            icon: \"folderIcon\",\n            onOpen: openRecycleBin\n        });\n        setFolders(prev => {\n            const newFolders = { ...prev };\n            delete newFolders[folderId];\n            return newFolders;\n        });\n        setFolderNames(prev => {\n            const newFolderNames = { ...prev };\n            delete newFolderNames[folderId];\n            return newFolderNames;\n        });\n        setWindows(prev => {\n            const newWindows = { ...prev };\n            delete newWindows[folderId];\n            return newWindows;\n        });\n        sessionStorage.removeItem(folderId);\n    };\n\n    const deleteFile = (fileName: string) => {\n        const file = shortcuts.find(shortcut => shortcut.shortcutName === fileName);\n        if (file) {\n            addItemToFolder(\"Recycle Bin\", file);\n        }\n        setShortcuts(prev => prev.filter(shortcut => shortcut.shortcutName !== fileName));\n        setWindows(prev => {\n            const newWindows = { ...prev };\n            delete newWindows[fileName];\n            return newWindows;\n        });\n        sessionStorage.removeItem(fileName); // Remove from session storage\n    };\n\n    const initializeDocumentsFolder = () => {\n        const documentsShortcut: DesktopShortcutProps = {\n            shortcutName: \"Documents\",\n            icon: \"documentsIcon\",\n            onOpen: openDocuments\n        };\n\n        setShortcuts(prevShortcuts => {\n            const existingDocumentsShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Documents\");\n            if (!existingDocumentsShortcut) {\n                return [...prevShortcuts, documentsShortcut];\n            }\n            return prevShortcuts;\n        });\n\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            \"Documents\": position\n        }));\n    };\n\n    const openDocuments = () => {\n        const highestZIndex = getHighestZIndex();\n\n        const docWindow = (\n            <Documents\n                onInteract={() => onWindowInteract(\"Documents\")}\n                onMinimize={() => minimizeWindow(\"Documents\")}\n                onClose={() => removeWindow(\"Documents\")}\n                addWindow={addWindow}\n                getHighestZIndex={getHighestZIndex}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            \"Documents\": {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: docWindow,\n                name: \"Documents\",\n                icon: 'documentsIcon'\n            }\n        }));\n    };\n\n    const openAppByName = (appName: string) => {\n        const appKey = appName.toLowerCase();\n        const app = APPLICATIONS[appKey];\n        if (app) {\n            addWindow(\n                app.key,\n                <app.component\n                    onInteract={() => onWindowInteract(app.key)}\n                    onMinimize={() => minimizeWindow(app.key)}\n                    onClose={() => removeWindow(app.key)}\n                    key={app.key}\n                />\n            );\n        } else {\n            alert(`Application \"${appName}\" not found.`);\n        }\n    };\n\n    const initializeRecycleBin = () => {\n        const recycleBinShortcut: DesktopShortcutProps = {\n            shortcutName: \"Recycle Bin\",\n            icon: \"recycleBinIcon\",\n            onOpen: openRecycleBin\n        };\n\n        setShortcuts(prevShortcuts => {\n            const existingRecycleBinShortcut = prevShortcuts.find(shortcut => shortcut.shortcutName === \"Recycle Bin\");\n            if (!existingRecycleBinShortcut) {\n                return [...prevShortcuts, recycleBinShortcut];\n            }\n            return prevShortcuts;\n        });\n\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        const column = Math.floor(totalItems / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n        const row = totalItems % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n\n        const position = {\n            top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n            left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n        };\n\n        setPositions(prev => ({\n            ...prev,\n            \"Recycle Bin\": position\n        }));\n    };\n\n    const openRecycleBin = () => {\n        const highestZIndex = getHighestZIndex();\n\n        const recycleBinWindow = (\n            <RecycleBin\n                contents={folders[\"Recycle Bin\"] || []}\n                onInteract={() => onWindowInteract(\"Recycle Bin\")}\n                onMinimize={() => minimizeWindow(\"Recycle Bin\")}\n                onClose={() => removeWindow(\"Recycle Bin\")}\n                onAddItem={(item) => addItemToFolder(\"Recycle Bin\", item)}\n                onRemoveItem={(itemName) => removeItemFromFolder(\"Recycle Bin\", itemName)}\n                onRename={(itemName, newName) => handleTextFileRename(itemName, newName)}\n                addWindow={addWindow}\n                getHighestZIndex={getHighestZIndex}\n            />\n        );\n\n        setWindows(prev => ({\n            ...prev,\n            \"Recycle Bin\": {\n                zIndex: highestZIndex + 1,\n                minimized: false,\n                component: recycleBinWindow,\n                name: \"Recycle Bin\",\n                icon: 'recycleBinIcon'\n            }\n        }));\n    };\n\n    const arrangeIcons = () => {\n        const newPositions: { [key: string]: { top: number; left: number } } = {};\n        const totalItems = shortcuts.length + Object.keys(folders).length;\n        let index = 0;\n\n        // Arrange all shortcuts except \"Documents\" and \"Recycle Bin\"\n        shortcuts.forEach((shortcut) => {\n            if (shortcut.shortcutName !== \"Documents\" && shortcut.shortcutName !== \"Recycle Bin\") {\n                const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n                const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n                newPositions[shortcut.shortcutName] = {\n                    top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n                    left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n                };\n                index++;\n            }\n        });\n\n        // Arrange all folders\n        Object.keys(folders).forEach((folderId) => {\n            const column = Math.floor(index / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING));\n            const row = index % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING);\n            newPositions[folderId] = {\n                top: INITIAL_OFFSET.top + (row * VERTICAL_SPACING),\n                left: INITIAL_OFFSET.left + (column * HORIZONTAL_SPACING)\n            };\n            index++;\n        });\n\n        // Arrange \"Documents\" at the bottom left\n        newPositions[\"Documents\"] = {\n            top: window.innerHeight - VERTICAL_SPACING - 50,\n            left: INITIAL_OFFSET.left\n        };\n\n        // Arrange \"Recycle Bin\" next to \"Documents\"\n        newPositions[\"Recycle Bin\"] = {\n            top: window.innerHeight - VERTICAL_SPACING - 50,\n            left: INITIAL_OFFSET.left + HORIZONTAL_SPACING\n        };\n\n        setPositions(newPositions);\n    };\n\n    useEffect(() => {\n        arrangeIcons();\n    }, [shortcuts, folders]);\n\n    return !shutdown ? (\n        <div style={styles.desktop} onDrop={handleDrop} onDragOver={handleDragOver} onContextMenu={handleContextMenu} onClick={handleClick}>\n            {/* For each window in windows, loop over and render  */}\n            {Object.keys(windows).map((key) => {\n                const element = windows[key].component;\n                if (!element) return <div key={`win-${key}`}></div>;\n                return (\n                    <div\n                        key={`win-${key}`}\n                        style={Object.assign(\n                            {},\n                            { zIndex: windows[key].zIndex },\n                            windows[key].minimized && styles.minimized\n                        )}\n                    >\n                        {React.cloneElement(element, {\n                            key,\n                            onInteract: () => onWindowInteract(key),\n                            onClose: () => removeWindow(key),\n                        })}\n                    </div>\n                );\n            })}\n            <div style={styles.shortcuts}>\n                {shortcuts.map((shortcut, i) => {\n                    const position = positions[shortcut.shortcutName] || {\n                        top: INITIAL_OFFSET.top + (i % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * VERTICAL_SPACING,\n                        left: INITIAL_OFFSET.left + Math.floor(i / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n                    };\n                    \n                    return (\n                        <div\n                            style={Object.assign({}, styles.shortcutContainer, position)}\n                            key={shortcut.shortcutName}\n                            draggable\n                            onDragStart={(e) => handleDragStart(e, shortcut.shortcutName)}\n                            onContextMenu={(e) => handleFileContextMenu(e, shortcut.shortcutName)}\n                        >\n                            <DesktopShortcut\n                                icon={shortcut.icon}\n                                shortcutName={shortcut.shortcutName}\n                                onOpen={shortcut.onOpen}\n                                isRenaming={renamingFolder === shortcut.shortcutName}\n                                onRename={(newName) => handleTextFileRename(shortcut.shortcutName, newName)}\n                            />\n                        </div>\n                    );\n                })}\n                {Object.keys(folders).map((folderId) => {\n                    const folder = folders[folderId];\n                    const folderName = folderNames[folderId] || `New Folder ${folderId.split('-')[1]}`;\n                    const position = positions[folderId] || {\n                        top: INITIAL_OFFSET.top + ((shortcuts.length + parseInt(folderId.split('-')[1]) - 1) % Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * VERTICAL_SPACING,\n                        left: INITIAL_OFFSET.left + Math.floor((shortcuts.length + parseInt(folderId.split('-')[1]) - 1) / Math.floor((window.innerHeight - 100) / VERTICAL_SPACING)) * HORIZONTAL_SPACING\n                    };\n                    \n                    return (\n                        <div\n                            style={Object.assign({}, styles.shortcutContainer, position)}\n                            key={folderId}\n                            draggable\n                            onDragStart={(e) => handleDragStart(e, folderId)}\n                            onContextMenu={(e) => handleFolderContextMenu(e, folderId)}\n                            onDrop={(e) => handleDropOnFolder(e, folderId)}\n                            onDragOver={handleDragOver}\n                        >\n                            <DesktopShortcut\n                                icon=\"folderIcon\"\n                                shortcutName={folderName}\n                                onOpen={() => openFolder(folderId, folderName)}\n                                isRenaming={renamingFolder === folderId}\n                                onRename={(newName) => {\n                                    handleFolderRename(folderId, newName);\n                                    setRenamingFolder(null);\n                                }}\n                            />\n                        </div>\n                    );\n                })}\n            </div>\n            <Toolbar\n                windows={windows}\n                toggleMinimize={toggleMinimize}\n                shutdown={startShutdown}\n                addWindow={addWindow}\n                updateBackground={updateBackground}\n                removeWindow={removeWindow}\n                openAppByName={openAppByName} // Pass the method to Toolbar\n            />\n            {contextMenu.visible && (\n                <div style={{ ...styles.contextMenu, top: contextMenu.y, left: contextMenu.x }}>\n                    {contextMenu.type === 'desktop' ? (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={createNewFolder}>\n                                New Folder\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={createNewTextFile}>\n                                New Text File\n                            </div>\n                        </>\n                    ) : contextMenu.type === 'folder' ? (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={handleRename}>\n                                Rename\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={() => deleteFolder(contextMenu.targetId!)}>\n                                Delete\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div style={styles.contextMenuItem} onClick={handleRename}>\n                                Rename\n                            </div>\n                            <div style={styles.contextMenuItem} onClick={() => deleteFile(contextMenu.targetId!)}>\n                                Delete\n                            </div>\n                        </>\n                    )}\n                </div>\n            )}\n        </div>\n    ) : (\n        <ShutdownSequence\n            setShutdown={setShutdown}\n            numShutdowns={numShutdowns}\n        />\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    desktop: {\n        minHeight: '100%',\n        flex: 1,\n        position: 'relative',\n    },\n    shutdown: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: '#1d2e2f',\n    },\n    shortcutContainer: {\n        position: 'absolute',\n        cursor: 'move',\n    },\n    shortcuts: {\n        position: 'absolute',\n        top: 16,\n        left: 6,\n    },\n    minimized: {\n        pointerEvents: 'none',\n        opacity: 0,\n    },\n    contextMenu: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        border: '1px solid #ccc',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n        zIndex: 1000,\n    },\n    contextMenuItem: {\n        padding: '8px 12px',\n        cursor: 'pointer',\n    },\n};\n\nexport default Desktop;"]},"metadata":{},"sourceType":"module"}